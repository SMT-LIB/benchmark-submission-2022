(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTNIRA)
(set-info :source |
Generated by: Yannick Moy
Generated on: 2022-02-14
Generator: GNATprove
Application: GNAT light runtime library
Target solver: Alt-Ergo, CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)

;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
  (((Tuple0))))

(declare-sort us_private 0)

;; private__bool_eq
(declare-fun private__bool_eq (us_private
  us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
  (((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))

(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
  (((int__refqtmk (int__content Int)))))

(declare-datatypes ((bool__ref 0))
  (((bool__refqtmk (bool__content Bool)))))

(declare-datatypes ((us_fixed__ref 0))
  (((us_fixed__refqtmk (us_fixed__content Int)))))

(declare-datatypes ((real__ref 0))
  (((real__refqtmk (real__content Real)))))

(declare-datatypes ((us_private__ref 0))
  (((us_private__refqtmk (us_private__content us_private)))))

;; int__ref___projection
(define-fun int__ref___projection ((a int__ref)) Int
  (int__content a))

;; __fixed__ref___projection
(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int
  (us_fixed__content a))

;; bool__ref___projection
(define-fun bool__ref___projection ((a bool__ref)) Bool
  (bool__content a))

;; real__ref___projection
(define-fun real__ref___projection ((a real__ref)) Real
  (real__content a))

;; __private__ref___projection
(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

;; min
(define-fun min ((x Int) (y Int)) Int
  (ite (<= x y) x y))

;; max
(define-fun max ((x Int) (y Int)) Int
  (ite (<= x y) y x))

;; Min_r
(assert (forall ((x Int) (y Int)) (=> (<= y x) (= (min x y) y))))

;; Max_l
(assert (forall ((x Int) (y Int)) (=> (<= y x) (= (max x y) x))))

;; Min_comm
(assert (forall ((x Int) (y Int)) (= (min x y) (min y x))))

;; Max_comm
(assert (forall ((x Int) (y Int)) (= (max x y) (max y x))))

;; Min_assoc
(assert
  (forall ((x Int) (y Int) (z Int)) (= (min (min x y) z) (min x (min y z)))))

;; Max_assoc
(assert
  (forall ((x Int) (y Int) (z Int)) (= (max (max x y) z) (max x (max y z)))))

;; bool_eq
(define-fun bool_eq ((x Bool) (y Bool)) Bool
  (ite (= x y) true false))

;; to_int
(define-fun to_int1 ((b Bool)) Int
  (ite (= b true) 1 0))

;; of_int
(define-fun of_int ((i Int)) Bool
  (ite (= i 0) false true))

;; in_range
(define-fun in_range ((x Int)) Bool
  (or (= x 0) (= x 1)))

;; attr__ATTRIBUTE_IMAGE
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

;; attr__ATTRIBUTE_VALUE__pre_check
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

;; attr__ATTRIBUTE_VALUE
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

;; integer'int
(declare-fun integerqtint (integer) Int)

;; integer'axiom
(assert
  (forall ((i integer))
    (and
      (<= (- 2147483648) (integerqtint i))
      (<= (integerqtint i) 2147483647))))

;; in_range
(define-fun in_range1 ((x Int)) Bool
  (and (<= (- 2147483648) x) (<= x 2147483647)))

;; bool_eq
(define-fun bool_eq1 ((x Int) (y Int)) Bool
  (ite (= x y) true false))

;; attr__ATTRIBUTE_IMAGE
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

;; attr__ATTRIBUTE_VALUE__pre_check
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

;; attr__ATTRIBUTE_VALUE
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

;; user_eq
(declare-fun user_eq (integer
  integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
  (((integer__refqtmk (integer__content integer)))))

;; integer__ref_integer__content__projection
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer
  (integer__content a))

;; dynamic_invariant
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool
  (=>
    (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647))
    (in_range1 temp___expr_18)))

(declare-sort natural 0)

;; natural'int
(declare-fun naturalqtint (natural) Int)

;; natural'axiom
(assert
  (forall ((i natural))
    (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

;; in_range
(define-fun in_range2 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; bool_eq
(define-fun bool_eq2 ((x Int) (y Int)) Bool
  (ite (= x y) true false))

;; attr__ATTRIBUTE_IMAGE
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

;; attr__ATTRIBUTE_VALUE__pre_check
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

;; attr__ATTRIBUTE_VALUE
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

;; user_eq
(declare-fun user_eq1 (natural
  natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ((natural__ref 0))
  (((natural__refqtmk (natural__content natural)))))

;; natural__ref_natural__content__projection
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural
  (natural__content a))

;; dynamic_invariant
(define-fun dynamic_invariant1 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool
  (=>
    (or (= temp___is_init_42 true) (<= 0 2147483647))
    (in_range2 temp___expr_46)))

(declare-sort positive 0)

;; positive'int
(declare-fun positiveqtint (positive) Int)

;; positive'axiom
(assert
  (forall ((i positive))
    (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

;; in_range
(define-fun in_range3 ((x Int)) Bool
  (and (<= 1 x) (<= x 2147483647)))

;; bool_eq
(define-fun bool_eq3 ((x Int) (y Int)) Bool
  (ite (= x y) true false))

;; attr__ATTRIBUTE_IMAGE
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

;; attr__ATTRIBUTE_VALUE__pre_check
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

;; attr__ATTRIBUTE_VALUE
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

;; user_eq
(declare-fun user_eq2 (positive
  positive) Bool)

(declare-const dummy2 positive)

(declare-datatypes ((positive__ref 0))
  (((positive__refqtmk (positive__content positive)))))

;; positive__ref_positive__content__projection
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive
  (positive__content a))

;; dynamic_invariant
(define-fun dynamic_invariant2 ((temp___expr_53 Int) (temp___is_init_49 Bool) (temp___skip_constant_50 Bool) (temp___do_toplevel_51 Bool) (temp___do_typ_inv_52 Bool)) Bool
  (=>
    (or (= temp___is_init_49 true) (<= 1 2147483647))
    (in_range3 temp___expr_53)))

(declare-sort character 0)

;; in_range
(define-fun in_range4 ((x Int)) Bool
  (and (<= 0 x) (<= x 255)))

;; bool_eq
(define-fun bool_eq4 ((x Int) (y Int)) Bool
  (ite (= x y) true false))

;; attr__ATTRIBUTE_IMAGE
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

;; attr__ATTRIBUTE_VALUE__pre_check
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

;; attr__ATTRIBUTE_VALUE
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

;; user_eq
(declare-fun user_eq3 (character
  character) Bool)

(declare-const dummy3 character)

(declare-datatypes ((character__ref 0))
  (((character__refqtmk (character__content character)))))

;; character__ref_character__content__projection
(define-fun character__ref_character__content__projection ((a character__ref)) character
  (character__content a))

(declare-datatypes ((character__init_wrapper 0))
  (((character__init_wrapperqtmk (rec__value character)(us_attr__init Bool)))))

;; character__init_wrapper_rec__value__projection
(define-fun character__init_wrapper_rec__value__projection ((a character__init_wrapper)) character
  (rec__value a))

;; character__init_wrapper___attr__init__projection
(define-fun character__init_wrapper___attr__init__projection ((a character__init_wrapper)) Bool
  (us_attr__init a))

(declare-const dummy4 character__init_wrapper)

;; dummy__def
(assert (= (us_attr__init dummy4) false))

(declare-datatypes ((character__init_wrapper__ref 0))
  (((character__init_wrapper__refqtmk
    (character__init_wrapper__content character__init_wrapper)))))

;; character__init_wrapper__ref_character__init_wrapper__content__projection
(define-fun character__init_wrapper__ref_character__init_wrapper__content__projection 
  ((a character__init_wrapper__ref)) character__init_wrapper
  (character__init_wrapper__content a))

;; to_rep
(declare-fun to_rep (character) Int)

;; of_rep
(declare-fun of_rep (Int) character)

;; inversion_axiom
(assert
  (forall ((x character))
    (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
(assert
  (forall ((x character)) (! (in_range4 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
(assert
  (forall ((x Int))
    (! (=> (in_range4 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                                (of_rep x))) )))

(declare-datatypes ((map__ref 0))
  (((map__refqtmk (map__content (Array Int character))))))

;; slide
(declare-fun slide ((Array Int character)
  Int
  Int) (Array Int character))

;; slide_eq
(assert
  (forall ((a (Array Int character)))
    (forall ((first Int))
      (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
(assert
  (forall ((a (Array Int character)))
    (forall ((old_first Int))
      (forall ((new_first Int))
        (forall ((i Int))
          (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
          (slide
            a
            old_first
            new_first) i)) ))))))

;; const
(declare-fun const1 (character) (Array Int character))

;; const_def
(assert
  (forall ((v character))
    (forall ((i Int))
      (! (= (select (const1 v) i) v) :pattern ((select (const1 v) i)) ))))

;; bool_eq
(define-fun bool_eq5 ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool
  (ite (and
         (ite (<= a__first a__last)
           (and
             (<= b__first b__last)
             (= (- a__last a__first) (- b__last b__first)))
           (< b__last b__first))
         (forall ((temp___idx_105 Int))
           (=>
             (and (<= a__first temp___idx_105) (<= temp___idx_105 a__last))
             (= (to_rep (select a temp___idx_105)) (to_rep
                                                     (select b (+ (- b__first a__first) temp___idx_105)))))))
    true
    false))

;; bool_eq_rev
(assert
  (forall ((a (Array Int character)) (b (Array Int character)))
    (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
      (=>
        (= (bool_eq5 b b__first b__last a a__first a__last) true)
        (and
          (ite (<= a__first a__last)
            (and
              (<= b__first b__last)
              (= (- a__last a__first) (- b__last b__first)))
            (< b__last b__first))
          (forall ((temp___idx_105 Int))
            (=>
              (and (<= a__first temp___idx_105) (<= temp___idx_105 a__last))
              (= (to_rep (select a temp___idx_105)) (to_rep
                                                      (select b (+ (- b__first a__first) temp___idx_105)))))))))))

(declare-datatypes ((map__ref1 0))
  (((map__refqtmk1 (map__content1 (Array Int character__init_wrapper))))))

;; slide
(declare-fun slide1 ((Array Int character__init_wrapper)
  Int
  Int) (Array Int character__init_wrapper))

;; slide_eq
(assert
  (forall ((a (Array Int character__init_wrapper)))
    (forall ((first Int))
      (! (= (slide1 a first first) a) :pattern ((slide1 a first first)) ))))

;; slide_def
(assert
  (forall ((a (Array Int character__init_wrapper)))
    (forall ((old_first Int))
      (forall ((new_first Int))
        (forall ((i Int))
          (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
          (slide1
            a
            old_first
            new_first) i)) ))))))

;; const
(declare-fun const2 (character__init_wrapper) (Array Int character__init_wrapper))

;; const_def
(assert
  (forall ((v character__init_wrapper))
    (forall ((i Int))
      (! (= (select (const2 v) i) v) :pattern ((select (const2 v) i)) ))))

;; convert
(declare-fun convert ((Array Int character__init_wrapper)) (Array Int character))

;; convert__def
(assert
  (forall ((a (Array Int character__init_wrapper)))
    (forall ((temp___106 Int))
      (= (to_rep (of_rep (to_rep (rec__value (select a temp___106))))) 
      (to_rep
        (select (convert a) temp___106))))))

;; convert
(declare-fun convert1 ((Array Int character)) (Array Int character__init_wrapper))

;; convert__def
(assert
  (forall ((a (Array Int character)))
    (let ((b (convert1 a)))
      (forall ((temp___107 Int))
        (and
          (= (us_attr__init
               (character__init_wrapperqtmk
                 (of_rep (to_rep (select a temp___107)))
                 true)) (us_attr__init (select b temp___107)))
          (= (to_rep
               (rec__value
                 (character__init_wrapperqtmk
                   (of_rep (to_rep (select a temp___107)))
                   true))) (to_rep (rec__value (select b temp___107)))))))))

;; to_rep
(define-fun to_rep1 ((x integer)) Int
  (integerqtint x))

;; of_rep
(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
(assert
  (forall ((x integer))
    (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
(assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
(assert
  (forall ((x Int))
    (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                                  (of_rep1 x))) )))

(declare-datatypes ((t 0))
  (((tqtmk (rec__first integer)(rec__last integer)))))

;; mk
(declare-fun mk (Int
  Int) t)

;; mk_def
(assert
  (forall ((f Int) (l Int))
    (! (=>
         (in_range1 f)
         (=>
           (in_range1 l)
           (and
             (= (to_rep1 (rec__first (mk f l))) f)
             (= (to_rep1 (rec__last (mk f l))) l)))) :pattern ((mk f l)) )))

;; dynamic_property
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool
  (and
    (in_range1 low)
    (and
      (in_range1 high)
      (=> (<= low high) (and (in_range3 low) (in_range3 high))))))

(declare-datatypes ((us_t 0))
  (((us_tqtmk (elts (Array Int character))(rt t)))))

;; to_array
(define-fun to_array ((a us_t)) (Array Int character)
  (elts a))

;; of_array
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t
  (us_tqtmk a (mk f l)))

;; first
(define-fun first ((a us_t)) Int
  (to_rep1 (rec__first (rt a))))

;; last
(define-fun last ((a us_t)) Int
  (to_rep1 (rec__last (rt a))))

;; length
(define-fun length ((a us_t)) Int
  (ite (<= (first a) (last a)) (+ (- (last a) (first a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
(assert (<= 0 value__size))

;; object__size_axiom
(assert (<= 0 object__size))

;; component__size_axiom
(assert (<= 0 component__size))

;; alignment_axiom
(assert (<= 0 alignment))

;; bool_eq
(define-fun bool_eq6 ((x us_t) (y us_t)) Bool
  (bool_eq5
    (elts x)
    (to_rep1 (rec__first (rt x)))
    (to_rep1 (rec__last (rt x)))
    (elts y)
    (to_rep1 (rec__first (rt y)))
    (to_rep1 (rec__last (rt y)))))

;; user_eq
(declare-fun user_eq4 (us_t
  us_t) Bool)

(declare-const dummy5 us_t)

(declare-datatypes ((string____ref 0))
  (((string____refqtmk (string____content us_t)))))

;; string____ref_string____content__projection
(define-fun string____ref_string____content__projection ((a string____ref)) us_t
  (string____content a))

;; dynamic_invariant
(define-fun dynamic_invariant3 ((temp___expr_114 us_t) (temp___is_init_110 Bool) (temp___skip_constant_111 Bool) (temp___do_toplevel_112 Bool) (temp___do_typ_inv_113 Bool)) Bool
  (=>
    (not (= temp___skip_constant_111 true))
    (dynamic_property
      1
      2147483647
      (first temp___expr_114)
      (last temp___expr_114))))

(declare-const source us_t)

(declare-const low Int)

(declare-const high Int)

(declare-const by__ us_t)

;; insert
(declare-fun insert1 (us_t
  Int
  us_t) us_t)

;; insert__function_guard
(declare-fun insert__function_guard (us_t
  us_t
  Int
  us_t) Bool)

(declare-datatypes ((t119s__ref 0))
  (((t119s__refqtmk (t119s__content us_t)))))

;; t119s__ref_t119s__content__projection
(define-fun t119s__ref_t119s__content__projection ((a t119s__ref)) us_t
  (t119s__content a))

(declare-datatypes ((t121s__ref 0))
  (((t121s__refqtmk (t121s__content us_t)))))

;; t121s__ref_t121s__content__projection
(define-fun t121s__ref_t121s__content__projection ((a t121s__ref)) us_t
  (t121s__content a))

(declare-datatypes ((t123s__ref 0))
  (((t123s__refqtmk (t123s__content us_t)))))

;; t123s__ref_t123s__content__projection
(define-fun t123s__ref_t123s__content__projection ((a t123s__ref)) us_t
  (t123s__content a))

(declare-datatypes ((t125s__ref 0))
  (((t125s__refqtmk (t125s__content us_t)))))

;; t125s__ref_t125s__content__projection
(define-fun t125s__ref_t125s__content__projection ((a t125s__ref)) us_t
  (t125s__content a))

(declare-datatypes ((t127s__ref 0))
  (((t127s__refqtmk (t127s__content us_t)))))

;; t127s__ref_t127s__content__projection
(define-fun t127s__ref_t127s__content__projection ((a t127s__ref)) us_t
  (t127s__content a))

;; insert__post_axiom
(assert
  (forall ((source1 us_t) (new_item us_t))
    (forall ((before Int))
      (! (=>
           (and
             (and
               (and
                 (dynamic_invariant3 source1 true true true true)
                 (dynamic_invariant2 before true true true true))
               (dynamic_invariant3 new_item true true true true))
             (and
               (let ((temp___605 (- before 1)))
                 (and
                   (<= (- (first source1) 1) temp___605)
                   (<= temp___605 (last source1))))
               (<= (length source1) (- 2147483647 (length new_item)))))
           (let ((result (insert1 source1 before new_item)))
             (=>
               (insert__function_guard result source1 before new_item)
               (and
                 (and
                   (and
                     (and
                       (and
                         (= (first result) 1)
                         (= (length result) (+ (length source1) (length
                                                                  new_item))))
                       (= (let ((temp___613 (let ((temp___609 (- before 1)))
                                              (let ((temp___608 (first
                                                                  source1)))
                                                (of_array
                                                  (to_array source1)
                                                  temp___608
                                                  temp___609)))))
                            (let ((temp___611 (let ((temp___607 (- before 
                                                (first
                                                  source1))))
                                                (let ((temp___606 1))
                                                  (of_array
                                                    (to_array result)
                                                    temp___606
                                                    temp___607)))))
                              (bool_eq5
                                (to_array temp___611)
                                (first temp___611)
                                (last temp___611)
                                (to_array temp___613)
                                (first temp___613)
                                (last temp___613)))) true))
                     (= (let ((temp___617 (let ((temp___615 (+ (- before 
                                            (first
                                              source1)) (length new_item))))
                                            (let ((temp___614 (+ (- before 
                                              (first
                                                source1)) 1)))
                                              (of_array
                                                (to_array result)
                                                temp___614
                                                temp___615)))))
                          (bool_eq5
                            (to_array temp___617)
                            (first temp___617)
                            (last temp___617)
                            (to_array new_item)
                            (first new_item)
                            (last new_item))) true))
                   (=>
                     (<= before (last source1))
                     (= (let ((temp___624 (let ((temp___620 (last source1)))
                                            (of_array
                                              (to_array source1)
                                              before
                                              temp___620))))
                          (let ((temp___622 (let ((temp___619 (last result)))
                                              (let ((temp___618 (+ (+ (- before 
                                                (first
                                                  source1)) (length new_item)) 1)))
                                                (of_array
                                                  (to_array result)
                                                  temp___618
                                                  temp___619)))))
                            (bool_eq5
                              (to_array temp___622)
                              (first temp___622)
                              (last temp___622)
                              (to_array temp___624)
                              (first temp___624)
                              (last temp___624)))) true)))
                 (dynamic_invariant3 result true false true true))))) :pattern (
      (insert1
        source1
        before
        new_item)) ))))

(declare-const front_len Int)

(declare-const back_len Int)

(declare-const result_length Int)

(declare-const result____first integer)

(declare-const result____last integer)

(declare-datatypes ((t99s__ref 0))
  (((t99s__refqtmk (t99s__content us_t)))))

;; t99s__ref_t99s__content__projection
(define-fun t99s__ref_t99s__content__projection ((a t99s__ref)) us_t
  (t99s__content a))

(declare-datatypes ((t101s__ref 0))
  (((t101s__refqtmk (t101s__content us_t)))))

;; t101s__ref_t101s__content__projection
(define-fun t101s__ref_t101s__content__projection ((a t101s__ref)) us_t
  (t101s__content a))

(declare-datatypes ((t103s__ref 0))
  (((t103s__refqtmk (t103s__content us_t)))))

;; t103s__ref_t103s__content__projection
(define-fun t103s__ref_t103s__content__projection ((a t103s__ref)) us_t
  (t103s__content a))

(declare-datatypes ((t105s__ref 0))
  (((t105s__refqtmk (t105s__content us_t)))))

;; t105s__ref_t105s__content__projection
(define-fun t105s__ref_t105s__content__projection ((a t105s__ref)) us_t
  (t105s__content a))

(declare-datatypes ((t107s__ref 0))
  (((t107s__refqtmk (t107s__content us_t)))))

;; t107s__ref_t107s__content__projection
(define-fun t107s__ref_t107s__content__projection ((a t107s__ref)) us_t
  (t107s__content a))

(declare-datatypes ((t109s__ref 0))
  (((t109s__refqtmk (t109s__content us_t)))))

;; t109s__ref_t109s__content__projection
(define-fun t109s__ref_t109s__content__projection ((a t109s__ref)) us_t
  (t109s__content a))

(declare-datatypes ((t111s__ref 0))
  (((t111s__refqtmk (t111s__content us_t)))))

;; t111s__ref_t111s__content__projection
(define-fun t111s__ref_t111s__content__projection ((a t111s__ref)) us_t
  (t111s__content a))

(declare-datatypes ((t113s__ref 0))
  (((t113s__refqtmk (t113s__content us_t)))))

;; t113s__ref_t113s__content__projection
(define-fun t113s__ref_t113s__content__projection ((a t113s__ref)) us_t
  (t113s__content a))

(declare-datatypes ((t115s__ref 0))
  (((t115s__refqtmk (t115s__content us_t)))))

;; t115s__ref_t115s__content__projection
(define-fun t115s__ref_t115s__content__projection ((a t115s__ref)) us_t
  (t115s__content a))

(declare-datatypes ((t117s__ref 0))
  (((t117s__refqtmk (t117s__content us_t)))))

;; t117s__ref_t117s__content__projection
(define-fun t117s__ref_t117s__content__projection ((a t117s__ref)) us_t
  (t117s__content a))

(declare-datatypes ((tresultS__ref 0))
  (((tresultS__refqtmk (tresultS__content us_t)))))

;; tresultS__ref_tresultS__content__6__projection
(define-fun tresultS__ref_tresultS__content__6__projection ((a tresultS__ref)) us_t
  (tresultS__content a))

;; array_bool_eq
(declare-fun array_bool_eq ((Array Int character__init_wrapper)
  Int
  Int
  (Array Int character__init_wrapper)
  Int
  Int) Bool)

(declare-datatypes ((t1 0))
  (((tqtmk1 (rec__first1 integer)(rec__last1 integer)))))

;; mk
(declare-fun mk1 (Int
  Int) t1)

;; mk_def
(assert
  (forall ((f Int) (l Int))
    (! (=>
         (in_range1 f)
         (=>
           (in_range1 l)
           (and
             (= (to_rep1 (rec__first1 (mk1 f l))) f)
             (= (to_rep1 (rec__last1 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

;; dynamic_property
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low1 Int) (high1 Int)) Bool
  (and
    (in_range1 low1)
    (and
      (in_range1 high1)
      (=> (<= low1 high1) (and (in_range3 low1) (in_range3 high1))))))

(declare-datatypes ((us_t1 0))
  (((us_tqtmk1 (elts1 (Array Int character__init_wrapper))(rt1 t1)))))

;; to_array
(define-fun to_array1 ((a us_t1)) (Array Int character__init_wrapper)
  (elts1 a))

;; of_array
(define-fun of_array1 ((a (Array Int character__init_wrapper)) (f Int) (l Int)) us_t1
  (us_tqtmk1 a (mk1 f l)))

;; first
(define-fun first1 ((a us_t1)) Int
  (to_rep1 (rec__first1 (rt1 a))))

;; last
(define-fun last1 ((a us_t1)) Int
  (to_rep1 (rec__last1 (rt1 a))))

;; length
(define-fun length1 ((a us_t1)) Int
  (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
(assert (<= 0 value__size1))

;; object__size_axiom
(assert (<= 0 object__size1))

;; component__size_axiom
(assert (<= 0 component__size1))

;; alignment_axiom
(assert (<= 0 alignment1))

;; bool_eq
(define-fun bool_eq7 ((x us_t1) (y us_t1)) Bool
  (array_bool_eq
    (elts1 x)
    (to_rep1 (rec__first1 (rt1 x)))
    (to_rep1 (rec__last1 (rt1 x)))
    (elts1 y)
    (to_rep1 (rec__first1 (rt1 y)))
    (to_rep1 (rec__last1 (rt1 y)))))

;; user_eq
(declare-fun user_eq5 (us_t1
  us_t1) Bool)

(declare-const dummy6 us_t1)

(declare-datatypes ((string____init_wrapper__ref 0))
  (((string____init_wrapper__refqtmk (string____init_wrapper__content us_t1)))))

;; string____init_wrapper__ref_string____init_wrapper__content__projection
(define-fun string____init_wrapper__ref_string____init_wrapper__content__projection 
  ((a string____init_wrapper__ref)) us_t1
  (string____init_wrapper__content a))

(declare-datatypes ((tresultS__init_wrapper__ref 0))
  (((tresultS__init_wrapper__refqtmk (tresultS__init_wrapper__content us_t1)))))

;; tresultS__init_wrapper__ref_tresultS__init_wrapper__content__6__projection
(define-fun tresultS__init_wrapper__ref_tresultS__init_wrapper__content__6__projection 
  ((a tresultS__init_wrapper__ref)) us_t1
  (tresultS__init_wrapper__content a))

(declare-datatypes ((t143b__init_wrapper__ref 0))
  (((t143b__init_wrapper__refqtmk (t143b__init_wrapper__content us_t1)))))

;; t143b__init_wrapper__ref_t143b__init_wrapper__content__projection
(define-fun t143b__init_wrapper__ref_t143b__init_wrapper__content__projection 
  ((a t143b__init_wrapper__ref)) us_t1
  (t143b__init_wrapper__content a))

(declare-datatypes ((t145b__ref 0))
  (((t145b__refqtmk (t145b__content us_t)))))

;; t145b__ref_t145b__content__projection
(define-fun t145b__ref_t145b__content__projection ((a t145b__ref)) us_t
  (t145b__content a))

(declare-datatypes ((t147b__init_wrapper__ref 0))
  (((t147b__init_wrapper__refqtmk (t147b__init_wrapper__content us_t1)))))

;; t147b__init_wrapper__ref_t147b__init_wrapper__content__projection
(define-fun t147b__init_wrapper__ref_t147b__init_wrapper__content__projection 
  ((a t147b__init_wrapper__ref)) us_t1
  (t147b__init_wrapper__content a))

(declare-datatypes ((t149b__init_wrapper__ref 0))
  (((t149b__init_wrapper__refqtmk (t149b__init_wrapper__content us_t1)))))

;; t149b__init_wrapper__ref_t149b__init_wrapper__content__projection
(define-fun t149b__init_wrapper__ref_t149b__init_wrapper__content__projection 
  ((a t149b__init_wrapper__ref)) us_t1
  (t149b__init_wrapper__content a))

(declare-datatypes ((t151b__ref 0))
  (((t151b__refqtmk (t151b__content us_t)))))

;; t151b__ref_t151b__content__projection
(define-fun t151b__ref_t151b__content__projection ((a t151b__ref)) us_t
  (t151b__content a))

;; dynamic_invariant
(define-fun dynamic_invariant4 ((temp___expr_88 Int) (temp___is_init_84 Bool) (temp___skip_constant_85 Bool) (temp___do_toplevel_86 Bool) (temp___do_typ_inv_87 Bool)) Bool
  (=> (or (= temp___is_init_84 true) (<= 0 255)) (in_range4 temp___expr_88)))

;; front_len__def_axiom
(assert (= front_len (max 0 (- low (first source)))))

;; back_len__def_axiom
(assert (= back_len (max 0 (- (last source) high))))

;; result_length__def_axiom
(assert (= result_length (+ (+ front_len (length by__)) back_len)))

;; dynamic_invariant
(define-fun dynamic_invariant5 ((temp___expr_1156 us_t) (temp___is_init_1152 Bool) (temp___skip_constant_1153 Bool) (temp___do_toplevel_1154 Bool) (temp___do_typ_inv_1155 Bool) (Ada___ada___ada__strings__fixed__replace_slice__B_14__result_length___result_length___ Int)) Bool
  (=>
    (not (= temp___skip_constant_1153 true))
    (and
      (and
        (dynamic_property
          1
          Ada___ada___ada__strings__fixed__replace_slice__B_14__result_length___result_length___
          (first temp___expr_1156)
          (last temp___expr_1156))
        (= (first temp___expr_1156) 1))
      (= (last temp___expr_1156) Ada___ada___ada__strings__fixed__replace_slice__B_14__result_length___result_length___))))

;; default_initial_assumption
(define-fun default_initial_assumption ((temp___expr_1158 us_t) (temp___skip_top_level_1159 Bool) (Ada___ada___ada__strings__fixed__replace_slice__B_14__result_length___result_length___ Int)) Bool
  (and
    (= (first temp___expr_1158) 1)
    (= (last temp___expr_1158) Ada___ada___ada__strings__fixed__replace_slice__B_14__result_length___result_length___)))

(declare-const result__ (Array Int character__init_wrapper))

;; Assume
(assert (dynamic_invariant3 source true false true true))

;; Assume
(assert (dynamic_invariant2 low true false true true))

;; Assume
(assert (dynamic_invariant1 high true false true true))

;; Assume
(assert (dynamic_invariant3 by__ true false true true))

;; Assume
(assert
  (and
    (and (<= (- low 1) (last source)) (<= (- (first source) 1) high))
    (ite (<= low high)
      (<= (max 0 (- low (first source))) (- (- 2147483647 (length by__)) 
      (max
        (- (last source) high)
        0)))
      (<= (length source) (- 2147483647 (length by__))))))

(declare-const ada___ada___ada__strings__fixed__replace_slice__result us_t)

;; H
(assert (or (< (last source) (- low 1)) (in_range1 (- (first source) 1))))

(declare-const spark__branch Bool)

;; H
(assert
  (= spark__branch (ite (< (last source) (- low 1))
                     true
                     (let ((usqtunusedqtunused Tuple0))
                       (let ((o (first source)))
                         (let ((firstqtresultqtunusedqtunused o))
                           (let ((o1 (- o 1)))
                             (let ((range_check_qtresultqtunusedqtunused o1))
                               (ite (< high o1) true false)))))))))

;; H
(assert (not (= spark__branch true)))

(declare-const spark__branch1 Bool)

;; H
(assert (= spark__branch1 (ite (<= low high) true false)))

(declare-const o Int)

(declare-const o1 Int)

(declare-const o2 Int)

(declare-const o3 Int)

(declare-const usf us_t1)

(declare-const result__1 (Array Int character__init_wrapper))

(declare-const o4 Int)

(declare-const o5 Int)

(declare-const o6 Int)

(declare-const o7 Int)

(declare-const usf1 us_t1)

(declare-const result__2 (Array Int character__init_wrapper))

(declare-const result__3 (Array Int character__init_wrapper))

(declare-const o8 Int)

(declare-const o9 Int)

(declare-const spark__branch2 Bool)

(declare-const o10 Int)

(declare-const o11 Int)

(declare-const o12 Int)

(declare-const temp___1665 Int)

(declare-const o13 Int)

(declare-const o14 Int)

(declare-const usf2 us_t1)

;; H
(assert
  (ite (= spark__branch1 true)
    (let ((o15 (- low (first source))))
      (and
        (in_range1 o15)
        (and
          (= (max 0 o15) front_len)
          (and
            (dynamic_invariant front_len true false true true)
            (let ((o16 (- (last source) high)))
              (and
                (in_range1 o16)
                (and
                  (= (max 0 o16) back_len)
                  (and
                    (dynamic_invariant back_len true false true true)
                    (let ((o17 (length by__)))
                      (and
                        (in_range1 o17)
                        (let ((o18 (+ front_len o17)))
                          (and
                            (in_range1 o18)
                            (let ((o19 (+ o18 back_len)))
                              (and
                                (in_range1 o19)
                                (and
                                  (= o19 result_length)
                                  (and
                                    (dynamic_invariant
                                      result_length
                                      true
                                      false
                                      true
                                      true)
                                    (and
                                      (and
                                        (= (first1
                                             (of_array1
                                               result__
                                               (to_rep1 result____first)
                                               (to_rep1 result____last))) 1)
                                        (= (last1
                                             (of_array1
                                               result__
                                               (to_rep1 result____first)
                                               (to_rep1 result____last))) 
                                        result_length))
                                      (and
                                        (and
                                          (and
                                            (dynamic_property
                                              1
                                              result_length
                                              (first1
                                                (of_array1
                                                  result__
                                                  (to_rep1 result____first)
                                                  (to_rep1 result____last)))
                                              (last1
                                                (of_array1
                                                  result__
                                                  (to_rep1 result____first)
                                                  (to_rep1 result____last))))
                                            (= (first1
                                                 (of_array1
                                                   result__
                                                   (to_rep1 result____first)
                                                   (to_rep1 result____last))) 1))
                                          (= (last1
                                               (of_array1
                                                 result__
                                                 (to_rep1 result____first)
                                                 (to_rep1 result____last))) 
                                          result_length))
                                        (and
                                          (= (to_rep1 result____last) 
                                          o)
                                          (and
                                            (= (to_rep1 result____first) 
                                            o1)
                                            (let ((temp___1642 (of_array1
                                                                 result__
                                                                 o1
                                                                 o)))
                                              (let ((temp___1635 (- low 1)))
                                                (let ((temp___1634 (first
                                                                    source)))
                                                  (and
                                                    (=>
                                                      (<= temp___1634 temp___1635)
                                                      (and
                                                        (and
                                                          (<= (first source) temp___1634)
                                                          (<= temp___1634 
                                                          (last
                                                            source)))
                                                        (and
                                                          (<= (first source) temp___1635)
                                                          (<= temp___1635 
                                                          (last
                                                            source)))))
                                                    (let ((temp___1636 
                                                      (of_array
                                                        (to_array source)
                                                        temp___1634
                                                        temp___1635)))
                                                      (and
                                                        (ite (<= (first
                                                                   temp___1636) 
                                                          (last
                                                            temp___1636))
                                                          (and
                                                            (<= 1 front_len)
                                                            (= (- (last
                                                                    temp___1636) 
                                                            (first
                                                              temp___1636)) (- 
                                                            front_len 1)))
                                                          (< front_len 1))
                                                        (let ((temp___1638 
                                                          (of_array1
                                                            (convert1
                                                              (slide
                                                                (to_array
                                                                  temp___1636)
                                                                (first
                                                                  temp___1636)
                                                                1))
                                                            1
                                                            front_len)))
                                                          (and
                                                            (= (to_rep1
                                                                 result____last) 
                                                            o2)
                                                            (and
                                                              (= (to_rep1
                                                                   result____first) 
                                                              o3)
                                                              (let ((temp___1639 
                                                                (of_array1
                                                                  result__
                                                                  o3
                                                                  o2)))
                                                                (and
                                                                  (=>
                                                                    (<= 1 
                                                                    front_len)
                                                                    (and
                                                                    (and
                                                                    (<= 
                                                                    (first1
                                                                    temp___1639) 1)
                                                                    (<= 1 
                                                                    (last1
                                                                    temp___1639)))
                                                                    (and
                                                                    (<= 
                                                                    (first1
                                                                    temp___1639) 
                                                                    front_len)
                                                                    (<= 
                                                                    front_len 
                                                                    (last1
                                                                    temp___1639)))))
                                                                  (let ((temp___1641 
                                                                    (of_array1
                                                                    (to_array1
                                                                    temp___1639)
                                                                    1
                                                                    front_len)))
                                                                    (and
                                                                    (ite (<= 
                                                                    (first1
                                                                    temp___1638) 
                                                                    (last1
                                                                    temp___1638))
                                                                    (and
                                                                    (<= 
                                                                    (first1
                                                                    temp___1641) 
                                                                    (last1
                                                                    temp___1641))
                                                                    (= (- 
                                                                    (last1
                                                                    temp___1638) 
                                                                    (first1
                                                                    temp___1638)) (- 
                                                                    (last1
                                                                    temp___1641) 
                                                                    (first1
                                                                    temp___1641))))
                                                                    (< 
                                                                    (last1
                                                                    temp___1641) 
                                                                    (first1
                                                                    temp___1641)))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (first1
                                                                    temp___1642) 
                                                                    (first1
                                                                    usf))
                                                                    (= 
                                                                    (last1
                                                                    temp___1642) 
                                                                    (last1
                                                                    usf)))
                                                                    (forall 
                                                                    ((temp___1645 Int))
                                                                    (ite 
                                                                    (and
                                                                    (<= 1 temp___1645)
                                                                    (<= temp___1645 
                                                                    front_len))
                                                                    (= (select 
                                                                    (to_array1
                                                                    usf) temp___1645) (select 
                                                                    (to_array1
                                                                    temp___1638) temp___1645))
                                                                    (= (select 
                                                                    (to_array1
                                                                    usf) temp___1645) (select 
                                                                    (to_array1
                                                                    temp___1642) temp___1645)))))
                                                                    (and
                                                                    (= 
                                                                    result__1 
                                                                    (to_array1
                                                                    usf))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    result____last) 
                                                                    o4)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    result____first) 
                                                                    o5)
                                                                    (let ((temp___1653 
                                                                    (of_array1
                                                                    result__1
                                                                    o5
                                                                    o4)))
                                                                    (and
                                                                    (ite (<= 
                                                                    (first
                                                                    by__) 
                                                                    (last
                                                                    by__))
                                                                    (and
                                                                    (<= (+ 
                                                                    front_len 1) (+ 
                                                                    front_len 
                                                                    (length
                                                                    by__)))
                                                                    (= (- 
                                                                    (last
                                                                    by__) 
                                                                    (first
                                                                    by__)) (- (+ 
                                                                    front_len 
                                                                    (length
                                                                    by__)) (+ 
                                                                    front_len 1))))
                                                                    (< (+ 
                                                                    front_len 
                                                                    (length
                                                                    by__)) (+ 
                                                                    front_len 1)))
                                                                    (let ((temp___1648 
                                                                    (of_array1
                                                                    (convert1
                                                                    (slide
                                                                    (to_array
                                                                    by__)
                                                                    (first
                                                                    by__)
                                                                    (+ 
                                                                    front_len 1)))
                                                                    (+ 
                                                                    front_len 1)
                                                                    (+ 
                                                                    front_len 
                                                                    (length
                                                                    by__)))))
                                                                    (let ((o20 
                                                                    (length
                                                                    by__)))
                                                                    (and
                                                                    (in_range1
                                                                    o20)
                                                                    (let ((o21 (+ 
                                                                    front_len o20)))
                                                                    (and
                                                                    (in_range1
                                                                    o21)
                                                                    (let ((o22 (+ 
                                                                    front_len 1)))
                                                                    (and
                                                                    (in_range1
                                                                    o22)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    result____last) 
                                                                    o6)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    result____first) 
                                                                    o7)
                                                                    (let ((temp___1649 
                                                                    (of_array1
                                                                    result__1
                                                                    o7
                                                                    o6)))
                                                                    (and
                                                                    (=>
                                                                    (<= o22 o21)
                                                                    (and
                                                                    (and
                                                                    (<= 
                                                                    (first1
                                                                    temp___1649) o22)
                                                                    (<= o22 
                                                                    (last1
                                                                    temp___1649)))
                                                                    (and
                                                                    (<= 
                                                                    (first1
                                                                    temp___1649) o21)
                                                                    (<= o21 
                                                                    (last1
                                                                    temp___1649)))))
                                                                    (let ((temp___1652 
                                                                    (of_array1
                                                                    (to_array1
                                                                    temp___1649)
                                                                    o22
                                                                    o21)))
                                                                    (and
                                                                    (ite (<= 
                                                                    (first1
                                                                    temp___1648) 
                                                                    (last1
                                                                    temp___1648))
                                                                    (and
                                                                    (<= 
                                                                    (first1
                                                                    temp___1652) 
                                                                    (last1
                                                                    temp___1652))
                                                                    (= (- 
                                                                    (last1
                                                                    temp___1648) 
                                                                    (first1
                                                                    temp___1648)) (- 
                                                                    (last1
                                                                    temp___1652) 
                                                                    (first1
                                                                    temp___1652))))
                                                                    (< 
                                                                    (last1
                                                                    temp___1652) 
                                                                    (first1
                                                                    temp___1652)))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (first1
                                                                    temp___1653) 
                                                                    (first1
                                                                    usf1))
                                                                    (= 
                                                                    (last1
                                                                    temp___1653) 
                                                                    (last1
                                                                    usf1)))
                                                                    (forall 
                                                                    ((temp___1656 Int))
                                                                    (ite 
                                                                    (and
                                                                    (<= (+ 
                                                                    front_len 1) temp___1656)
                                                                    (<= temp___1656 (+ 
                                                                    front_len 
                                                                    (length
                                                                    by__))))
                                                                    (= (select 
                                                                    (to_array1
                                                                    usf1) temp___1656) (select 
                                                                    (to_array1
                                                                    temp___1648) temp___1656))
                                                                    (= (select 
                                                                    (to_array1
                                                                    usf1) temp___1656) (select 
                                                                    (to_array1
                                                                    temp___1653) temp___1656)))))
                                                                    (and
                                                                    (= 
                                                                    result__2 
                                                                    (to_array1
                                                                    usf1))
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    spark__branch2 
                                                                    (ite (< 
                                                                    high 
                                                                    (last
                                                                    source))
                                                                    true
                                                                    false))
                                                                    (ite (= 
                                                                    spark__branch2 true)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    result____last) 
                                                                    o10)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    result____first) 
                                                                    o11)
                                                                    (let ((temp___1667 
                                                                    (of_array1
                                                                    result__2
                                                                    o11
                                                                    o10)))
                                                                    (let ((temp___1659 
                                                                    (last
                                                                    source)))
                                                                    (let ((o23 (+ 
                                                                    high 1)))
                                                                    (and
                                                                    (in_range1
                                                                    o23)
                                                                    (and
                                                                    (=>
                                                                    (<= o23 temp___1659)
                                                                    (and
                                                                    (and
                                                                    (<= 
                                                                    (first
                                                                    source) o23)
                                                                    (<= o23 
                                                                    (last
                                                                    source)))
                                                                    (and
                                                                    (<= 
                                                                    (first
                                                                    source) temp___1659)
                                                                    (<= temp___1659 
                                                                    (last
                                                                    source)))))
                                                                    (let ((temp___1660 
                                                                    (of_array
                                                                    (to_array
                                                                    source)
                                                                    o23
                                                                    temp___1659)))
                                                                    (and
                                                                    (ite (<= 
                                                                    (first
                                                                    temp___1660) 
                                                                    (last
                                                                    temp___1660))
                                                                    (and
                                                                    (<= (+ (+ 
                                                                    front_len 
                                                                    (length
                                                                    by__)) 1) 
                                                                    (to_rep1
                                                                    result____last))
                                                                    (= (- 
                                                                    (last
                                                                    temp___1660) 
                                                                    (first
                                                                    temp___1660)) (- 
                                                                    (to_rep1
                                                                    result____last) (+ (+ 
                                                                    front_len 
                                                                    (length
                                                                    by__)) 1))))
                                                                    (< 
                                                                    (to_rep1
                                                                    result____last) (+ (+ 
                                                                    front_len 
                                                                    (length
                                                                    by__)) 1)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    result____last) 
                                                                    o12)
                                                                    (let ((temp___1662 
                                                                    (of_array1
                                                                    (convert1
                                                                    (slide
                                                                    (to_array
                                                                    temp___1660)
                                                                    (first
                                                                    temp___1660)
                                                                    (+ (+ 
                                                                    front_len 
                                                                    (length
                                                                    by__)) 1)))
                                                                    (+ (+ 
                                                                    front_len 
                                                                    (length
                                                                    by__)) 1)
                                                                    o12)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    result____last) 
                                                                    temp___1665)
                                                                    (let ((o24 
                                                                    (length
                                                                    by__)))
                                                                    (and
                                                                    (in_range1
                                                                    o24)
                                                                    (let ((o25 (+ 
                                                                    front_len o24)))
                                                                    (and
                                                                    (in_range1
                                                                    o25)
                                                                    (let ((o26 (+ o25 1)))
                                                                    (and
                                                                    (in_range1
                                                                    o26)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    result____last) 
                                                                    o13)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    result____first) 
                                                                    o14)
                                                                    (let ((temp___1663 
                                                                    (of_array1
                                                                    result__2
                                                                    o14
                                                                    o13)))
                                                                    (and
                                                                    (=>
                                                                    (<= o26 
                                                                    temp___1665)
                                                                    (and
                                                                    (and
                                                                    (<= 
                                                                    (first1
                                                                    temp___1663) o26)
                                                                    (<= o26 
                                                                    (last1
                                                                    temp___1663)))
                                                                    (and
                                                                    (<= 
                                                                    (first1
                                                                    temp___1663) 
                                                                    temp___1665)
                                                                    (<= 
                                                                    temp___1665 
                                                                    (last1
                                                                    temp___1663)))))
                                                                    (let ((temp___1666 
                                                                    (of_array1
                                                                    (to_array1
                                                                    temp___1663)
                                                                    o26
                                                                    temp___1665)))
                                                                    (and
                                                                    (ite (<= 
                                                                    (first1
                                                                    temp___1662) 
                                                                    (last1
                                                                    temp___1662))
                                                                    (and
                                                                    (<= 
                                                                    (first1
                                                                    temp___1666) 
                                                                    (last1
                                                                    temp___1666))
                                                                    (= (- 
                                                                    (last1
                                                                    temp___1662) 
                                                                    (first1
                                                                    temp___1662)) (- 
                                                                    (last1
                                                                    temp___1666) 
                                                                    (first1
                                                                    temp___1666))))
                                                                    (< 
                                                                    (last1
                                                                    temp___1666) 
                                                                    (first1
                                                                    temp___1666)))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (first1
                                                                    temp___1667) 
                                                                    (first1
                                                                    usf2))
                                                                    (= 
                                                                    (last1
                                                                    temp___1667) 
                                                                    (last1
                                                                    usf2)))
                                                                    (forall 
                                                                    ((temp___1670 Int))
                                                                    (ite 
                                                                    (and
                                                                    (<= (+ (+ 
                                                                    front_len 
                                                                    (length
                                                                    by__)) 1) temp___1670)
                                                                    (<= temp___1670 
                                                                    (to_rep1
                                                                    result____last)))
                                                                    (= (select 
                                                                    (to_array1
                                                                    usf2) temp___1670) (select 
                                                                    (to_array1
                                                                    temp___1662) temp___1670))
                                                                    (= (select 
                                                                    (to_array1
                                                                    usf2) temp___1670) (select 
                                                                    (to_array1
                                                                    temp___1667) temp___1670)))))
                                                                    (= 
                                                                    result__3 
                                                                    (to_array1
                                                                    usf2)))))))))))))))))))))))))))
                                                                    (= 
                                                                    result__3 
                                                                    result__2)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    result____last) 
                                                                    o8)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    result____first) 
                                                                    o9)
                                                                    (let ((temp___1631 
                                                                    (of_array1
                                                                    result__3
                                                                    o9
                                                                    o8)))
                                                                    (= 
                                                                    ada___ada___ada__strings__fixed__replace_slice__result 
                                                                    (of_array
                                                                    (convert
                                                                    (to_array1
                                                                    temp___1631))
                                                                    (first1
                                                                    temp___1631)
                                                                    (last1
                                                                    temp___1631)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    (let ((o15 by__))
      (let ((o16 low))
        (let ((o17 source))
          (let ((o18 (insert1 o17 o16 o15)))
            (and
              (and
                (insert__function_guard o18 o17 o16 o15)
                (and
                  (dynamic_invariant3 o18 true false true true)
                  (and
                    (and
                      (and
                        (and
                          (= (first o18) 1)
                          (= (length o18) (+ (length o17) (length o15))))
                        (= (let ((temp___590 (of_array
                                               (to_array o17)
                                               (first o17)
                                               (- o16 1))))
                             (let ((temp___588 (of_array
                                                 (to_array o18)
                                                 1
                                                 (- o16 (first o17)))))
                               (bool_eq5
                                 (to_array temp___588)
                                 (first temp___588)
                                 (last temp___588)
                                 (to_array temp___590)
                                 (first temp___590)
                                 (last temp___590)))) true))
                      (= (let ((temp___594 (of_array
                                             (to_array o18)
                                             (+ (- o16 (first o17)) 1)
                                             (+ (- o16 (first o17)) (length
                                                                    o15)))))
                           (bool_eq5
                             (to_array temp___594)
                             (first temp___594)
                             (last temp___594)
                             (to_array o15)
                             (first o15)
                             (last o15))) true))
                    (=>
                      (<= o16 (last o17))
                      (= (let ((temp___601 (of_array
                                             (to_array o17)
                                             o16
                                             (last o17))))
                           (let ((temp___599 (of_array
                                               (to_array o18)
                                               (+ (+ (- o16 (first o17)) 
                                               (length
                                                 o15)) 1)
                                               (last o18))))
                             (bool_eq5
                               (to_array temp___599)
                               (first temp___599)
                               (last temp___599)
                               (to_array temp___601)
                               (first temp___601)
                               (last temp___601)))) true)))))
              (= ada___ada___ada__strings__fixed__replace_slice__result o18))))))))

;; Goal def'vc
;; File "a-strfix.ads", line 802, characters 0-0
(assert
  (not
  (=>
    (<= low high)
    (=>
      (< high (last source))
      (= (let ((temp___1711 (of_array
                              (to_array source)
                              (+ high 1)
                              (last source))))
           (let ((temp___1709 (of_array
                                (to_array
                                  ada___ada___ada__strings__fixed__replace_slice__result)
                                (+ (+ (max 0 (- low (first source))) 
                                (length
                                  by__)) 1)
                                (last
                                  ada___ada___ada__strings__fixed__replace_slice__result))))
             (bool_eq5
               (to_array temp___1709)
               (first temp___1709)
               (last temp___1709)
               (to_array temp___1711)
               (first temp___1711)
               (last temp___1711)))) true)))))

(check-sat)
(exit)
