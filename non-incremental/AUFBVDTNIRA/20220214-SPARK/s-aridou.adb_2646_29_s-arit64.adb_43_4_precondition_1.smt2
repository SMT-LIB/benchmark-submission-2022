(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTNIRA)
(set-info :source |
Generated by: Yannick Moy
Generated on: 2022-02-14
Generator: GNATprove
Application: GNAT light runtime library
Target solver: Alt-Ergo, CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)

(define-fun bv2nat8 ((a (_ BitVec 8))) Int
  (+ (+ (+ (+ (+ (+ (+
  (ite (= ((_ extract 0 0) a) (_ bv0 1)) 0 1)
  (ite (= ((_ extract 1 1) a) (_ bv0 1)) 0 2))
  (ite (= ((_ extract 2 2) a) (_ bv0 1)) 0 4))
  (ite (= ((_ extract 3 3) a) (_ bv0 1)) 0 8))
  (ite (= ((_ extract 4 4) a) (_ bv0 1)) 0 16))
  (ite (= ((_ extract 5 5) a) (_ bv0 1)) 0 32))
  (ite (= ((_ extract 6 6) a) (_ bv0 1)) 0 64))
  (ite (= ((_ extract 7 7) a) (_ bv0 1)) 0 128))
)

(define-fun bv2nat16 ((a (_ BitVec 16))) Int
  (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+
  (ite (= ((_ extract 0 0) a) (_ bv0 1)) 0 1)
  (ite (= ((_ extract 1 1) a) (_ bv0 1)) 0 2))
  (ite (= ((_ extract 2 2) a) (_ bv0 1)) 0 4))
  (ite (= ((_ extract 3 3) a) (_ bv0 1)) 0 8))
  (ite (= ((_ extract 4 4) a) (_ bv0 1)) 0 16))
  (ite (= ((_ extract 5 5) a) (_ bv0 1)) 0 32))
  (ite (= ((_ extract 6 6) a) (_ bv0 1)) 0 64))
  (ite (= ((_ extract 7 7) a) (_ bv0 1)) 0 128))
  (ite (= ((_ extract 8 8) a) (_ bv0 1)) 0 256))
  (ite (= ((_ extract 9 9) a) (_ bv0 1)) 0 512))
  (ite (= ((_ extract 10 10) a) (_ bv0 1)) 0 1024))
  (ite (= ((_ extract 11 11) a) (_ bv0 1)) 0 2048))
  (ite (= ((_ extract 12 12) a) (_ bv0 1)) 0 4096))
  (ite (= ((_ extract 13 13) a) (_ bv0 1)) 0 8192))
  (ite (= ((_ extract 14 14) a) (_ bv0 1)) 0 16384))
  (ite (= ((_ extract 15 15) a) (_ bv0 1)) 0 32768))
)

(define-fun bv2nat32 ((a (_ BitVec 32))) Int
  (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+
  (ite (= ((_ extract 0 0) a) (_ bv0 1)) 0 1)
  (ite (= ((_ extract 1 1) a) (_ bv0 1)) 0 2))
  (ite (= ((_ extract 2 2) a) (_ bv0 1)) 0 4))
  (ite (= ((_ extract 3 3) a) (_ bv0 1)) 0 8))
  (ite (= ((_ extract 4 4) a) (_ bv0 1)) 0 16))
  (ite (= ((_ extract 5 5) a) (_ bv0 1)) 0 32))
  (ite (= ((_ extract 6 6) a) (_ bv0 1)) 0 64))
  (ite (= ((_ extract 7 7) a) (_ bv0 1)) 0 128))
  (ite (= ((_ extract 8 8) a) (_ bv0 1)) 0 256))
  (ite (= ((_ extract 9 9) a) (_ bv0 1)) 0 512))
  (ite (= ((_ extract 10 10) a) (_ bv0 1)) 0 1024))
  (ite (= ((_ extract 11 11) a) (_ bv0 1)) 0 2048))
  (ite (= ((_ extract 12 12) a) (_ bv0 1)) 0 4096))
  (ite (= ((_ extract 13 13) a) (_ bv0 1)) 0 8192))
  (ite (= ((_ extract 14 14) a) (_ bv0 1)) 0 16384))
  (ite (= ((_ extract 15 15) a) (_ bv0 1)) 0 32768))
  (ite (= ((_ extract 16 16) a) (_ bv0 1)) 0 65536))
  (ite (= ((_ extract 17 17) a) (_ bv0 1)) 0 131072))
  (ite (= ((_ extract 18 18) a) (_ bv0 1)) 0 262144))
  (ite (= ((_ extract 19 19) a) (_ bv0 1)) 0 524288))
  (ite (= ((_ extract 20 20) a) (_ bv0 1)) 0 1048576))
  (ite (= ((_ extract 21 21) a) (_ bv0 1)) 0 2097152))
  (ite (= ((_ extract 22 22) a) (_ bv0 1)) 0 4194304))
  (ite (= ((_ extract 23 23) a) (_ bv0 1)) 0 8388608))
  (ite (= ((_ extract 24 24) a) (_ bv0 1)) 0 16777216))
  (ite (= ((_ extract 25 25) a) (_ bv0 1)) 0 33554432))
  (ite (= ((_ extract 26 26) a) (_ bv0 1)) 0 67108864))
  (ite (= ((_ extract 27 27) a) (_ bv0 1)) 0 134217728))
  (ite (= ((_ extract 28 28) a) (_ bv0 1)) 0 268435456))
  (ite (= ((_ extract 29 29) a) (_ bv0 1)) 0 536870912))
  (ite (= ((_ extract 30 30) a) (_ bv0 1)) 0 1073741824))
  (ite (= ((_ extract 31 31) a) (_ bv0 1)) 0 2147483648))
)

(define-fun bv2nat64 ((a (_ BitVec 64))) Int
  (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+
  (ite (= ((_ extract 0 0) a) (_ bv0 1)) 0 1)
  (ite (= ((_ extract 1 1) a) (_ bv0 1)) 0 2))
  (ite (= ((_ extract 2 2) a) (_ bv0 1)) 0 4))
  (ite (= ((_ extract 3 3) a) (_ bv0 1)) 0 8))
  (ite (= ((_ extract 4 4) a) (_ bv0 1)) 0 16))
  (ite (= ((_ extract 5 5) a) (_ bv0 1)) 0 32))
  (ite (= ((_ extract 6 6) a) (_ bv0 1)) 0 64))
  (ite (= ((_ extract 7 7) a) (_ bv0 1)) 0 128))
  (ite (= ((_ extract 8 8) a) (_ bv0 1)) 0 256))
  (ite (= ((_ extract 9 9) a) (_ bv0 1)) 0 512))
  (ite (= ((_ extract 10 10) a) (_ bv0 1)) 0 1024))
  (ite (= ((_ extract 11 11) a) (_ bv0 1)) 0 2048))
  (ite (= ((_ extract 12 12) a) (_ bv0 1)) 0 4096))
  (ite (= ((_ extract 13 13) a) (_ bv0 1)) 0 8192))
  (ite (= ((_ extract 14 14) a) (_ bv0 1)) 0 16384))
  (ite (= ((_ extract 15 15) a) (_ bv0 1)) 0 32768))
  (ite (= ((_ extract 16 16) a) (_ bv0 1)) 0 65536))
  (ite (= ((_ extract 17 17) a) (_ bv0 1)) 0 131072))
  (ite (= ((_ extract 18 18) a) (_ bv0 1)) 0 262144))
  (ite (= ((_ extract 19 19) a) (_ bv0 1)) 0 524288))
  (ite (= ((_ extract 20 20) a) (_ bv0 1)) 0 1048576))
  (ite (= ((_ extract 21 21) a) (_ bv0 1)) 0 2097152))
  (ite (= ((_ extract 22 22) a) (_ bv0 1)) 0 4194304))
  (ite (= ((_ extract 23 23) a) (_ bv0 1)) 0 8388608))
  (ite (= ((_ extract 24 24) a) (_ bv0 1)) 0 16777216))
  (ite (= ((_ extract 25 25) a) (_ bv0 1)) 0 33554432))
  (ite (= ((_ extract 26 26) a) (_ bv0 1)) 0 67108864))
  (ite (= ((_ extract 27 27) a) (_ bv0 1)) 0 134217728))
  (ite (= ((_ extract 28 28) a) (_ bv0 1)) 0 268435456))
  (ite (= ((_ extract 29 29) a) (_ bv0 1)) 0 536870912))
  (ite (= ((_ extract 30 30) a) (_ bv0 1)) 0 1073741824))
  (ite (= ((_ extract 31 31) a) (_ bv0 1)) 0 2147483648))
  (ite (= ((_ extract 32 32) a) (_ bv0 1)) 0 4294967296))
  (ite (= ((_ extract 33 33) a) (_ bv0 1)) 0 8589934592))
  (ite (= ((_ extract 34 34) a) (_ bv0 1)) 0 17179869184))
  (ite (= ((_ extract 35 35) a) (_ bv0 1)) 0 34359738368))
  (ite (= ((_ extract 36 36) a) (_ bv0 1)) 0 68719476736))
  (ite (= ((_ extract 37 37) a) (_ bv0 1)) 0 137438953472))
  (ite (= ((_ extract 38 38) a) (_ bv0 1)) 0 274877906944))
  (ite (= ((_ extract 39 39) a) (_ bv0 1)) 0 549755813888))
  (ite (= ((_ extract 40 40) a) (_ bv0 1)) 0 1099511627776))
  (ite (= ((_ extract 41 41) a) (_ bv0 1)) 0 2199023255552))
  (ite (= ((_ extract 42 42) a) (_ bv0 1)) 0 4398046511104))
  (ite (= ((_ extract 43 43) a) (_ bv0 1)) 0 8796093022208))
  (ite (= ((_ extract 44 44) a) (_ bv0 1)) 0 17592186044416))
  (ite (= ((_ extract 45 45) a) (_ bv0 1)) 0 35184372088832))
  (ite (= ((_ extract 46 46) a) (_ bv0 1)) 0 70368744177664))
  (ite (= ((_ extract 47 47) a) (_ bv0 1)) 0 140737488355328))
  (ite (= ((_ extract 48 48) a) (_ bv0 1)) 0 281474976710656))
  (ite (= ((_ extract 49 49) a) (_ bv0 1)) 0 562949953421312))
  (ite (= ((_ extract 50 50) a) (_ bv0 1)) 0 1125899906842624))
  (ite (= ((_ extract 51 51) a) (_ bv0 1)) 0 2251799813685248))
  (ite (= ((_ extract 52 52) a) (_ bv0 1)) 0 4503599627370496))
  (ite (= ((_ extract 53 53) a) (_ bv0 1)) 0 9007199254740992))
  (ite (= ((_ extract 54 54) a) (_ bv0 1)) 0 18014398509481984))
  (ite (= ((_ extract 55 55) a) (_ bv0 1)) 0 36028797018963968))
  (ite (= ((_ extract 56 56) a) (_ bv0 1)) 0 72057594037927936))
  (ite (= ((_ extract 57 57) a) (_ bv0 1)) 0 144115188075855872))
  (ite (= ((_ extract 58 58) a) (_ bv0 1)) 0 288230376151711744))
  (ite (= ((_ extract 59 59) a) (_ bv0 1)) 0 576460752303423488))
  (ite (= ((_ extract 60 60) a) (_ bv0 1)) 0 1152921504606846976))
  (ite (= ((_ extract 61 61) a) (_ bv0 1)) 0 2305843009213693952))
  (ite (= ((_ extract 62 62) a) (_ bv0 1)) 0 4611686018427387904))
  (ite (= ((_ extract 63 63) a) (_ bv0 1)) 0 9223372036854775808))
)

(define-fun bv2nat128 ((a (_ BitVec 128))) Int
  (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+
  (ite (= ((_ extract 0 0) a) (_ bv0 1)) 0 1)
  (ite (= ((_ extract 1 1) a) (_ bv0 1)) 0 2))
  (ite (= ((_ extract 2 2) a) (_ bv0 1)) 0 4))
  (ite (= ((_ extract 3 3) a) (_ bv0 1)) 0 8))
  (ite (= ((_ extract 4 4) a) (_ bv0 1)) 0 16))
  (ite (= ((_ extract 5 5) a) (_ bv0 1)) 0 32))
  (ite (= ((_ extract 6 6) a) (_ bv0 1)) 0 64))
  (ite (= ((_ extract 7 7) a) (_ bv0 1)) 0 128))
  (ite (= ((_ extract 8 8) a) (_ bv0 1)) 0 256))
  (ite (= ((_ extract 9 9) a) (_ bv0 1)) 0 512))
  (ite (= ((_ extract 10 10) a) (_ bv0 1)) 0 1024))
  (ite (= ((_ extract 11 11) a) (_ bv0 1)) 0 2048))
  (ite (= ((_ extract 12 12) a) (_ bv0 1)) 0 4096))
  (ite (= ((_ extract 13 13) a) (_ bv0 1)) 0 8192))
  (ite (= ((_ extract 14 14) a) (_ bv0 1)) 0 16384))
  (ite (= ((_ extract 15 15) a) (_ bv0 1)) 0 32768))
  (ite (= ((_ extract 16 16) a) (_ bv0 1)) 0 65536))
  (ite (= ((_ extract 17 17) a) (_ bv0 1)) 0 131072))
  (ite (= ((_ extract 18 18) a) (_ bv0 1)) 0 262144))
  (ite (= ((_ extract 19 19) a) (_ bv0 1)) 0 524288))
  (ite (= ((_ extract 20 20) a) (_ bv0 1)) 0 1048576))
  (ite (= ((_ extract 21 21) a) (_ bv0 1)) 0 2097152))
  (ite (= ((_ extract 22 22) a) (_ bv0 1)) 0 4194304))
  (ite (= ((_ extract 23 23) a) (_ bv0 1)) 0 8388608))
  (ite (= ((_ extract 24 24) a) (_ bv0 1)) 0 16777216))
  (ite (= ((_ extract 25 25) a) (_ bv0 1)) 0 33554432))
  (ite (= ((_ extract 26 26) a) (_ bv0 1)) 0 67108864))
  (ite (= ((_ extract 27 27) a) (_ bv0 1)) 0 134217728))
  (ite (= ((_ extract 28 28) a) (_ bv0 1)) 0 268435456))
  (ite (= ((_ extract 29 29) a) (_ bv0 1)) 0 536870912))
  (ite (= ((_ extract 30 30) a) (_ bv0 1)) 0 1073741824))
  (ite (= ((_ extract 31 31) a) (_ bv0 1)) 0 2147483648))
  (ite (= ((_ extract 32 32) a) (_ bv0 1)) 0 4294967296))
  (ite (= ((_ extract 33 33) a) (_ bv0 1)) 0 8589934592))
  (ite (= ((_ extract 34 34) a) (_ bv0 1)) 0 17179869184))
  (ite (= ((_ extract 35 35) a) (_ bv0 1)) 0 34359738368))
  (ite (= ((_ extract 36 36) a) (_ bv0 1)) 0 68719476736))
  (ite (= ((_ extract 37 37) a) (_ bv0 1)) 0 137438953472))
  (ite (= ((_ extract 38 38) a) (_ bv0 1)) 0 274877906944))
  (ite (= ((_ extract 39 39) a) (_ bv0 1)) 0 549755813888))
  (ite (= ((_ extract 40 40) a) (_ bv0 1)) 0 1099511627776))
  (ite (= ((_ extract 41 41) a) (_ bv0 1)) 0 2199023255552))
  (ite (= ((_ extract 42 42) a) (_ bv0 1)) 0 4398046511104))
  (ite (= ((_ extract 43 43) a) (_ bv0 1)) 0 8796093022208))
  (ite (= ((_ extract 44 44) a) (_ bv0 1)) 0 17592186044416))
  (ite (= ((_ extract 45 45) a) (_ bv0 1)) 0 35184372088832))
  (ite (= ((_ extract 46 46) a) (_ bv0 1)) 0 70368744177664))
  (ite (= ((_ extract 47 47) a) (_ bv0 1)) 0 140737488355328))
  (ite (= ((_ extract 48 48) a) (_ bv0 1)) 0 281474976710656))
  (ite (= ((_ extract 49 49) a) (_ bv0 1)) 0 562949953421312))
  (ite (= ((_ extract 50 50) a) (_ bv0 1)) 0 1125899906842624))
  (ite (= ((_ extract 51 51) a) (_ bv0 1)) 0 2251799813685248))
  (ite (= ((_ extract 52 52) a) (_ bv0 1)) 0 4503599627370496))
  (ite (= ((_ extract 53 53) a) (_ bv0 1)) 0 9007199254740992))
  (ite (= ((_ extract 54 54) a) (_ bv0 1)) 0 18014398509481984))
  (ite (= ((_ extract 55 55) a) (_ bv0 1)) 0 36028797018963968))
  (ite (= ((_ extract 56 56) a) (_ bv0 1)) 0 72057594037927936))
  (ite (= ((_ extract 57 57) a) (_ bv0 1)) 0 144115188075855872))
  (ite (= ((_ extract 58 58) a) (_ bv0 1)) 0 288230376151711744))
  (ite (= ((_ extract 59 59) a) (_ bv0 1)) 0 576460752303423488))
  (ite (= ((_ extract 60 60) a) (_ bv0 1)) 0 1152921504606846976))
  (ite (= ((_ extract 61 61) a) (_ bv0 1)) 0 2305843009213693952))
  (ite (= ((_ extract 62 62) a) (_ bv0 1)) 0 4611686018427387904))
  (ite (= ((_ extract 63 63) a) (_ bv0 1)) 0 9223372036854775808))
  (ite (= ((_ extract 64 64) a) (_ bv0 1)) 0 18446744073709551616))
  (ite (= ((_ extract 65 65) a) (_ bv0 1)) 0 36893488147419103232))
  (ite (= ((_ extract 66 66) a) (_ bv0 1)) 0 73786976294838206464))
  (ite (= ((_ extract 67 67) a) (_ bv0 1)) 0 147573952589676412928))
  (ite (= ((_ extract 68 68) a) (_ bv0 1)) 0 295147905179352825856))
  (ite (= ((_ extract 69 69) a) (_ bv0 1)) 0 590295810358705651712))
  (ite (= ((_ extract 70 70) a) (_ bv0 1)) 0 1180591620717411303424))
  (ite (= ((_ extract 71 71) a) (_ bv0 1)) 0 2361183241434822606848))
  (ite (= ((_ extract 72 72) a) (_ bv0 1)) 0 4722366482869645213696))
  (ite (= ((_ extract 73 73) a) (_ bv0 1)) 0 9444732965739290427392))
  (ite (= ((_ extract 74 74) a) (_ bv0 1)) 0 18889465931478580854784))
  (ite (= ((_ extract 75 75) a) (_ bv0 1)) 0 37778931862957161709568))
  (ite (= ((_ extract 76 76) a) (_ bv0 1)) 0 75557863725914323419136))
  (ite (= ((_ extract 77 77) a) (_ bv0 1)) 0 151115727451828646838272))
  (ite (= ((_ extract 78 78) a) (_ bv0 1)) 0 302231454903657293676544))
  (ite (= ((_ extract 79 79) a) (_ bv0 1)) 0 604462909807314587353088))
  (ite (= ((_ extract 80 80) a) (_ bv0 1)) 0 1208925819614629174706176))
  (ite (= ((_ extract 81 81) a) (_ bv0 1)) 0 2417851639229258349412352))
  (ite (= ((_ extract 82 82) a) (_ bv0 1)) 0 4835703278458516698824704))
  (ite (= ((_ extract 83 83) a) (_ bv0 1)) 0 9671406556917033397649408))
  (ite (= ((_ extract 84 84) a) (_ bv0 1)) 0 19342813113834066795298816))
  (ite (= ((_ extract 85 85) a) (_ bv0 1)) 0 38685626227668133590597632))
  (ite (= ((_ extract 86 86) a) (_ bv0 1)) 0 77371252455336267181195264))
  (ite (= ((_ extract 87 87) a) (_ bv0 1)) 0 154742504910672534362390528))
  (ite (= ((_ extract 88 88) a) (_ bv0 1)) 0 309485009821345068724781056))
  (ite (= ((_ extract 89 89) a) (_ bv0 1)) 0 618970019642690137449562112))
  (ite (= ((_ extract 90 90) a) (_ bv0 1)) 0 1237940039285380274899124224))
  (ite (= ((_ extract 91 91) a) (_ bv0 1)) 0 2475880078570760549798248448))
  (ite (= ((_ extract 92 92) a) (_ bv0 1)) 0 4951760157141521099596496896))
  (ite (= ((_ extract 93 93) a) (_ bv0 1)) 0 9903520314283042199192993792))
  (ite (= ((_ extract 94 94) a) (_ bv0 1)) 0 19807040628566084398385987584))
  (ite (= ((_ extract 95 95) a) (_ bv0 1)) 0 39614081257132168796771975168))
  (ite (= ((_ extract 96 96) a) (_ bv0 1)) 0 79228162514264337593543950336))
  (ite (= ((_ extract 97 97) a) (_ bv0 1)) 0 158456325028528675187087900672))
  (ite (= ((_ extract 98 98) a) (_ bv0 1)) 0 316912650057057350374175801344))
  (ite (= ((_ extract 99 99) a) (_ bv0 1)) 0 633825300114114700748351602688))
  (ite (= ((_ extract 100 100) a) (_ bv0 1)) 0 1267650600228229401496703205376))
  (ite (= ((_ extract 101 101) a) (_ bv0 1)) 0 2535301200456458802993406410752))
  (ite (= ((_ extract 102 102) a) (_ bv0 1)) 0 5070602400912917605986812821504))
  (ite (= ((_ extract 103 103) a) (_ bv0 1)) 0 10141204801825835211973625643008))
  (ite (= ((_ extract 104 104) a) (_ bv0 1)) 0 20282409603651670423947251286016))
  (ite (= ((_ extract 105 105) a) (_ bv0 1)) 0 40564819207303340847894502572032))
  (ite (= ((_ extract 106 106) a) (_ bv0 1)) 0 81129638414606681695789005144064))
  (ite (= ((_ extract 107 107) a) (_ bv0 1)) 0 162259276829213363391578010288128))
  (ite (= ((_ extract 108 108) a) (_ bv0 1)) 0 324518553658426726783156020576256))
  (ite (= ((_ extract 109 109) a) (_ bv0 1)) 0 649037107316853453566312041152512))
  (ite (= ((_ extract 110 110) a) (_ bv0 1)) 0 1298074214633706907132624082305024))
  (ite (= ((_ extract 111 111) a) (_ bv0 1)) 0 2596148429267413814265248164610048))
  (ite (= ((_ extract 112 112) a) (_ bv0 1)) 0 5192296858534827628530496329220096))
  (ite (= ((_ extract 113 113) a) (_ bv0 1)) 0 10384593717069655257060992658440192))
  (ite (= ((_ extract 114 114) a) (_ bv0 1)) 0 20769187434139310514121985316880384))
  (ite (= ((_ extract 115 115) a) (_ bv0 1)) 0 41538374868278621028243970633760768))
  (ite (= ((_ extract 116 116) a) (_ bv0 1)) 0 83076749736557242056487941267521536))
  (ite (= ((_ extract 117 117) a) (_ bv0 1)) 0 166153499473114484112975882535043072))
  (ite (= ((_ extract 118 118) a) (_ bv0 1)) 0 332306998946228968225951765070086144))
  (ite (= ((_ extract 119 119) a) (_ bv0 1)) 0 664613997892457936451903530140172288))
  (ite (= ((_ extract 120 120) a) (_ bv0 1)) 0 1329227995784915872903807060280344576))
  (ite (= ((_ extract 121 121) a) (_ bv0 1)) 0 2658455991569831745807614120560689152))
  (ite (= ((_ extract 122 122) a) (_ bv0 1)) 0 5316911983139663491615228241121378304))
  (ite (= ((_ extract 123 123) a) (_ bv0 1)) 0 10633823966279326983230456482242756608))
  (ite (= ((_ extract 124 124) a) (_ bv0 1)) 0 21267647932558653966460912964485513216))
  (ite (= ((_ extract 125 125) a) (_ bv0 1)) 0 42535295865117307932921825928971026432))
  (ite (= ((_ extract 126 126) a) (_ bv0 1)) 0 85070591730234615865843651857942052864))
  (ite (= ((_ extract 127 127) a) (_ bv0 1)) 0 170141183460469231731687303715884105728))
)

(define-fun bv2nat256 ((a (_ BitVec 256))) Int

  (ite (= ((_ extract 0 0) a) (_ bv0 1)) 0 1)
  (ite (= ((_ extract 1 1) a) (_ bv0 1)) 0 2))
  (ite (= ((_ extract 2 2) a) (_ bv0 1)) 0 4))
  (ite (= ((_ extract 3 3) a) (_ bv0 1)) 0 8))
  (ite (= ((_ extract 4 4) a) (_ bv0 1)) 0 16))
  (ite (= ((_ extract 5 5) a) (_ bv0 1)) 0 32))
  (ite (= ((_ extract 6 6) a) (_ bv0 1)) 0 64))
  (ite (= ((_ extract 7 7) a) (_ bv0 1)) 0 128))
  (ite (= ((_ extract 8 8) a) (_ bv0 1)) 0 256))
  (ite (= ((_ extract 9 9) a) (_ bv0 1)) 0 512))
  (ite (= ((_ extract 10 10) a) (_ bv0 1)) 0 1024))
  (ite (= ((_ extract 11 11) a) (_ bv0 1)) 0 2048))
  (ite (= ((_ extract 12 12) a) (_ bv0 1)) 0 4096))
  (ite (= ((_ extract 13 13) a) (_ bv0 1)) 0 8192))
  (ite (= ((_ extract 14 14) a) (_ bv0 1)) 0 16384))
  (ite (= ((_ extract 15 15) a) (_ bv0 1)) 0 32768))
  (ite (= ((_ extract 16 16) a) (_ bv0 1)) 0 65536))
  (ite (= ((_ extract 17 17) a) (_ bv0 1)) 0 131072))
  (ite (= ((_ extract 18 18) a) (_ bv0 1)) 0 262144))
  (ite (= ((_ extract 19 19) a) (_ bv0 1)) 0 524288))
  (ite (= ((_ extract 20 20) a) (_ bv0 1)) 0 1048576))
  (ite (= ((_ extract 21 21) a) (_ bv0 1)) 0 2097152))
  (ite (= ((_ extract 22 22) a) (_ bv0 1)) 0 4194304))
  (ite (= ((_ extract 23 23) a) (_ bv0 1)) 0 8388608))
  (ite (= ((_ extract 24 24) a) (_ bv0 1)) 0 16777216))
  (ite (= ((_ extract 25 25) a) (_ bv0 1)) 0 33554432))
  (ite (= ((_ extract 26 26) a) (_ bv0 1)) 0 67108864))
  (ite (= ((_ extract 27 27) a) (_ bv0 1)) 0 134217728))
  (ite (= ((_ extract 28 28) a) (_ bv0 1)) 0 268435456))
  (ite (= ((_ extract 29 29) a) (_ bv0 1)) 0 536870912))
  (ite (= ((_ extract 30 30) a) (_ bv0 1)) 0 1073741824))
  (ite (= ((_ extract 31 31) a) (_ bv0 1)) 0 2147483648))
  (ite (= ((_ extract 32 32) a) (_ bv0 1)) 0 4294967296))
  (ite (= ((_ extract 33 33) a) (_ bv0 1)) 0 8589934592))
  (ite (= ((_ extract 34 34) a) (_ bv0 1)) 0 17179869184))
  (ite (= ((_ extract 35 35) a) (_ bv0 1)) 0 34359738368))
  (ite (= ((_ extract 36 36) a) (_ bv0 1)) 0 68719476736))
  (ite (= ((_ extract 37 37) a) (_ bv0 1)) 0 137438953472))
  (ite (= ((_ extract 38 38) a) (_ bv0 1)) 0 274877906944))
  (ite (= ((_ extract 39 39) a) (_ bv0 1)) 0 549755813888))
  (ite (= ((_ extract 40 40) a) (_ bv0 1)) 0 1099511627776))
  (ite (= ((_ extract 41 41) a) (_ bv0 1)) 0 2199023255552))
  (ite (= ((_ extract 42 42) a) (_ bv0 1)) 0 4398046511104))
  (ite (= ((_ extract 43 43) a) (_ bv0 1)) 0 8796093022208))
  (ite (= ((_ extract 44 44) a) (_ bv0 1)) 0 17592186044416))
  (ite (= ((_ extract 45 45) a) (_ bv0 1)) 0 35184372088832))
  (ite (= ((_ extract 46 46) a) (_ bv0 1)) 0 70368744177664))
  (ite (= ((_ extract 47 47) a) (_ bv0 1)) 0 140737488355328))
  (ite (= ((_ extract 48 48) a) (_ bv0 1)) 0 281474976710656))
  (ite (= ((_ extract 49 49) a) (_ bv0 1)) 0 562949953421312))
  (ite (= ((_ extract 50 50) a) (_ bv0 1)) 0 1125899906842624))
  (ite (= ((_ extract 51 51) a) (_ bv0 1)) 0 2251799813685248))
  (ite (= ((_ extract 52 52) a) (_ bv0 1)) 0 4503599627370496))
  (ite (= ((_ extract 53 53) a) (_ bv0 1)) 0 9007199254740992))
  (ite (= ((_ extract 54 54) a) (_ bv0 1)) 0 18014398509481984))
  (ite (= ((_ extract 55 55) a) (_ bv0 1)) 0 36028797018963968))
  (ite (= ((_ extract 56 56) a) (_ bv0 1)) 0 72057594037927936))
  (ite (= ((_ extract 57 57) a) (_ bv0 1)) 0 144115188075855872))
  (ite (= ((_ extract 58 58) a) (_ bv0 1)) 0 288230376151711744))
  (ite (= ((_ extract 59 59) a) (_ bv0 1)) 0 576460752303423488))
  (ite (= ((_ extract 60 60) a) (_ bv0 1)) 0 1152921504606846976))
  (ite (= ((_ extract 61 61) a) (_ bv0 1)) 0 2305843009213693952))
  (ite (= ((_ extract 62 62) a) (_ bv0 1)) 0 4611686018427387904))
  (ite (= ((_ extract 63 63) a) (_ bv0 1)) 0 9223372036854775808))
  (ite (= ((_ extract 64 64) a) (_ bv0 1)) 0 18446744073709551616))
  (ite (= ((_ extract 65 65) a) (_ bv0 1)) 0 36893488147419103232))
  (ite (= ((_ extract 66 66) a) (_ bv0 1)) 0 73786976294838206464))
  (ite (= ((_ extract 67 67) a) (_ bv0 1)) 0 147573952589676412928))
  (ite (= ((_ extract 68 68) a) (_ bv0 1)) 0 295147905179352825856))
  (ite (= ((_ extract 69 69) a) (_ bv0 1)) 0 590295810358705651712))
  (ite (= ((_ extract 70 70) a) (_ bv0 1)) 0 1180591620717411303424))
  (ite (= ((_ extract 71 71) a) (_ bv0 1)) 0 2361183241434822606848))
  (ite (= ((_ extract 72 72) a) (_ bv0 1)) 0 4722366482869645213696))
  (ite (= ((_ extract 73 73) a) (_ bv0 1)) 0 9444732965739290427392))
  (ite (= ((_ extract 74 74) a) (_ bv0 1)) 0 18889465931478580854784))
  (ite (= ((_ extract 75 75) a) (_ bv0 1)) 0 37778931862957161709568))
  (ite (= ((_ extract 76 76) a) (_ bv0 1)) 0 75557863725914323419136))
  (ite (= ((_ extract 77 77) a) (_ bv0 1)) 0 151115727451828646838272))
  (ite (= ((_ extract 78 78) a) (_ bv0 1)) 0 302231454903657293676544))
  (ite (= ((_ extract 79 79) a) (_ bv0 1)) 0 604462909807314587353088))
  (ite (= ((_ extract 80 80) a) (_ bv0 1)) 0 1208925819614629174706176))
  (ite (= ((_ extract 81 81) a) (_ bv0 1)) 0 2417851639229258349412352))
  (ite (= ((_ extract 82 82) a) (_ bv0 1)) 0 4835703278458516698824704))
  (ite (= ((_ extract 83 83) a) (_ bv0 1)) 0 9671406556917033397649408))
  (ite (= ((_ extract 84 84) a) (_ bv0 1)) 0 19342813113834066795298816))
  (ite (= ((_ extract 85 85) a) (_ bv0 1)) 0 38685626227668133590597632))
  (ite (= ((_ extract 86 86) a) (_ bv0 1)) 0 77371252455336267181195264))
  (ite (= ((_ extract 87 87) a) (_ bv0 1)) 0 154742504910672534362390528))
  (ite (= ((_ extract 88 88) a) (_ bv0 1)) 0 309485009821345068724781056))
  (ite (= ((_ extract 89 89) a) (_ bv0 1)) 0 618970019642690137449562112))
  (ite (= ((_ extract 90 90) a) (_ bv0 1)) 0 1237940039285380274899124224))
  (ite (= ((_ extract 91 91) a) (_ bv0 1)) 0 2475880078570760549798248448))
  (ite (= ((_ extract 92 92) a) (_ bv0 1)) 0 4951760157141521099596496896))
  (ite (= ((_ extract 93 93) a) (_ bv0 1)) 0 9903520314283042199192993792))
  (ite (= ((_ extract 94 94) a) (_ bv0 1)) 0 19807040628566084398385987584))
  (ite (= ((_ extract 95 95) a) (_ bv0 1)) 0 39614081257132168796771975168))
  (ite (= ((_ extract 96 96) a) (_ bv0 1)) 0 79228162514264337593543950336))
  (ite (= ((_ extract 97 97) a) (_ bv0 1)) 0 158456325028528675187087900672))
  (ite (= ((_ extract 98 98) a) (_ bv0 1)) 0 316912650057057350374175801344))
  (ite (= ((_ extract 99 99) a) (_ bv0 1)) 0 633825300114114700748351602688))
  (ite (= ((_ extract 100 100) a) (_ bv0 1)) 0 1267650600228229401496703205376))
  (ite (= ((_ extract 101 101) a) (_ bv0 1)) 0 2535301200456458802993406410752))
  (ite (= ((_ extract 102 102) a) (_ bv0 1)) 0 5070602400912917605986812821504))
  (ite (= ((_ extract 103 103) a) (_ bv0 1)) 0 10141204801825835211973625643008))
  (ite (= ((_ extract 104 104) a) (_ bv0 1)) 0 20282409603651670423947251286016))
  (ite (= ((_ extract 105 105) a) (_ bv0 1)) 0 40564819207303340847894502572032))
  (ite (= ((_ extract 106 106) a) (_ bv0 1)) 0 81129638414606681695789005144064))
  (ite (= ((_ extract 107 107) a) (_ bv0 1)) 0 162259276829213363391578010288128))
  (ite (= ((_ extract 108 108) a) (_ bv0 1)) 0 324518553658426726783156020576256))
  (ite (= ((_ extract 109 109) a) (_ bv0 1)) 0 649037107316853453566312041152512))
  (ite (= ((_ extract 110 110) a) (_ bv0 1)) 0 1298074214633706907132624082305024))
  (ite (= ((_ extract 111 111) a) (_ bv0 1)) 0 2596148429267413814265248164610048))
  (ite (= ((_ extract 112 112) a) (_ bv0 1)) 0 5192296858534827628530496329220096))
  (ite (= ((_ extract 113 113) a) (_ bv0 1)) 0 10384593717069655257060992658440192))
  (ite (= ((_ extract 114 114) a) (_ bv0 1)) 0 20769187434139310514121985316880384))
  (ite (= ((_ extract 115 115) a) (_ bv0 1)) 0 41538374868278621028243970633760768))
  (ite (= ((_ extract 116 116) a) (_ bv0 1)) 0 83076749736557242056487941267521536))
  (ite (= ((_ extract 117 117) a) (_ bv0 1)) 0 166153499473114484112975882535043072))
  (ite (= ((_ extract 118 118) a) (_ bv0 1)) 0 332306998946228968225951765070086144))
  (ite (= ((_ extract 119 119) a) (_ bv0 1)) 0 664613997892457936451903530140172288))
  (ite (= ((_ extract 120 120) a) (_ bv0 1)) 0 1329227995784915872903807060280344576))
  (ite (= ((_ extract 121 121) a) (_ bv0 1)) 0 2658455991569831745807614120560689152))
  (ite (= ((_ extract 122 122) a) (_ bv0 1)) 0 5316911983139663491615228241121378304))
  (ite (= ((_ extract 123 123) a) (_ bv0 1)) 0 10633823966279326983230456482242756608))
  (ite (= ((_ extract 124 124) a) (_ bv0 1)) 0 21267647932558653966460912964485513216))
  (ite (= ((_ extract 125 125) a) (_ bv0 1)) 0 42535295865117307932921825928971026432))
  (ite (= ((_ extract 126 126) a) (_ bv0 1)) 0 85070591730234615865843651857942052864))
  (ite (= ((_ extract 127 127) a) (_ bv0 1)) 0 170141183460469231731687303715884105728))
  (ite (= ((_ extract 128 128) a) (_ bv0 1)) 0 340282366920938463463374607431768211456))
  (ite (= ((_ extract 129 129) a) (_ bv0 1)) 0 680564733841876926926749214863536422912))
  (ite (= ((_ extract 130 130) a) (_ bv0 1)) 0 1361129467683753853853498429727072845824))
  (ite (= ((_ extract 131 131) a) (_ bv0 1)) 0 2722258935367507707706996859454145691648))
  (ite (= ((_ extract 132 132) a) (_ bv0 1)) 0 5444517870735015415413993718908291383296))
  (ite (= ((_ extract 133 133) a) (_ bv0 1)) 0 10889035741470030830827987437816582766592))
  (ite (= ((_ extract 134 134) a) (_ bv0 1)) 0 21778071482940061661655974875633165533184))
  (ite (= ((_ extract 135 135) a) (_ bv0 1)) 0 43556142965880123323311949751266331066368))
  (ite (= ((_ extract 136 136) a) (_ bv0 1)) 0 87112285931760246646623899502532662132736))
  (ite (= ((_ extract 137 137) a) (_ bv0 1)) 0 174224571863520493293247799005065324265472))
  (ite (= ((_ extract 138 138) a) (_ bv0 1)) 0 348449143727040986586495598010130648530944))
  (ite (= ((_ extract 139 139) a) (_ bv0 1)) 0 696898287454081973172991196020261297061888))
  (ite (= ((_ extract 140 140) a) (_ bv0 1)) 0 1393796574908163946345982392040522594123776))
  (ite (= ((_ extract 141 141) a) (_ bv0 1)) 0 2787593149816327892691964784081045188247552))
  (ite (= ((_ extract 142 142) a) (_ bv0 1)) 0 5575186299632655785383929568162090376495104))
  (ite (= ((_ extract 143 143) a) (_ bv0 1)) 0 11150372599265311570767859136324180752990208))
  (ite (= ((_ extract 144 144) a) (_ bv0 1)) 0 22300745198530623141535718272648361505980416))
  (ite (= ((_ extract 145 145) a) (_ bv0 1)) 0 44601490397061246283071436545296723011960832))
  (ite (= ((_ extract 146 146) a) (_ bv0 1)) 0 89202980794122492566142873090593446023921664))
  (ite (= ((_ extract 147 147) a) (_ bv0 1)) 0 178405961588244985132285746181186892047843328))
  (ite (= ((_ extract 148 148) a) (_ bv0 1)) 0 356811923176489970264571492362373784095686656))
  (ite (= ((_ extract 149 149) a) (_ bv0 1)) 0 713623846352979940529142984724747568191373312))
  (ite (= ((_ extract 150 150) a) (_ bv0 1)) 0 1427247692705959881058285969449495136382746624))
  (ite (= ((_ extract 151 151) a) (_ bv0 1)) 0 2854495385411919762116571938898990272765493248))
  (ite (= ((_ extract 152 152) a) (_ bv0 1)) 0 5708990770823839524233143877797980545530986496))
  (ite (= ((_ extract 153 153) a) (_ bv0 1)) 0 11417981541647679048466287755595961091061972992))
  (ite (= ((_ extract 154 154) a) (_ bv0 1)) 0 22835963083295358096932575511191922182123945984))
  (ite (= ((_ extract 155 155) a) (_ bv0 1)) 0 45671926166590716193865151022383844364247891968))
  (ite (= ((_ extract 156 156) a) (_ bv0 1)) 0 91343852333181432387730302044767688728495783936))
  (ite (= ((_ extract 157 157) a) (_ bv0 1)) 0 182687704666362864775460604089535377456991567872))
  (ite (= ((_ extract 158 158) a) (_ bv0 1)) 0 365375409332725729550921208179070754913983135744))
  (ite (= ((_ extract 159 159) a) (_ bv0 1)) 0 730750818665451459101842416358141509827966271488))
  (ite (= ((_ extract 160 160) a) (_ bv0 1)) 0 1461501637330902918203684832716283019655932542976))
  (ite (= ((_ extract 161 161) a) (_ bv0 1)) 0 2923003274661805836407369665432566039311865085952))
  (ite (= ((_ extract 162 162) a) (_ bv0 1)) 0 5846006549323611672814739330865132078623730171904))
  (ite (= ((_ extract 163 163) a) (_ bv0 1)) 0 11692013098647223345629478661730264157247460343808))
  (ite (= ((_ extract 164 164) a) (_ bv0 1)) 0 23384026197294446691258957323460528314494920687616))
  (ite (= ((_ extract 165 165) a) (_ bv0 1)) 0 46768052394588893382517914646921056628989841375232))
  (ite (= ((_ extract 166 166) a) (_ bv0 1)) 0 93536104789177786765035829293842113257979682750464))
  (ite (= ((_ extract 167 167) a) (_ bv0 1)) 0 187072209578355573530071658587684226515959365500928))
  (ite (= ((_ extract 168 168) a) (_ bv0 1)) 0 374144419156711147060143317175368453031918731001856))
  (ite (= ((_ extract 169 169) a) (_ bv0 1)) 0 748288838313422294120286634350736906063837462003712))
  (ite (= ((_ extract 170 170) a) (_ bv0 1)) 0 1496577676626844588240573268701473812127674924007424))
  (ite (= ((_ extract 171 171) a) (_ bv0 1)) 0 2993155353253689176481146537402947624255349848014848))
  (ite (= ((_ extract 172 172) a) (_ bv0 1)) 0 5986310706507378352962293074805895248510699696029696))
  (ite (= ((_ extract 173 173) a) (_ bv0 1)) 0 11972621413014756705924586149611790497021399392059392))
  (ite (= ((_ extract 174 174) a) (_ bv0 1)) 0 23945242826029513411849172299223580994042798784118784))
  (ite (= ((_ extract 175 175) a) (_ bv0 1)) 0 47890485652059026823698344598447161988085597568237568))
  (ite (= ((_ extract 176 176) a) (_ bv0 1)) 0 95780971304118053647396689196894323976171195136475136))
  (ite (= ((_ extract 177 177) a) (_ bv0 1)) 0 191561942608236107294793378393788647952342390272950272))
  (ite (= ((_ extract 178 178) a) (_ bv0 1)) 0 383123885216472214589586756787577295904684780545900544))
  (ite (= ((_ extract 179 179) a) (_ bv0 1)) 0 766247770432944429179173513575154591809369561091801088))
  (ite (= ((_ extract 180 180) a) (_ bv0 1)) 0 1532495540865888858358347027150309183618739122183602176))
  (ite (= ((_ extract 181 181) a) (_ bv0 1)) 0 3064991081731777716716694054300618367237478244367204352))
  (ite (= ((_ extract 182 182) a) (_ bv0 1)) 0 6129982163463555433433388108601236734474956488734408704))
  (ite (= ((_ extract 183 183) a) (_ bv0 1)) 0 12259964326927110866866776217202473468949912977468817408))
  (ite (= ((_ extract 184 184) a) (_ bv0 1)) 0 24519928653854221733733552434404946937899825954937634816))
  (ite (= ((_ extract 185 185) a) (_ bv0 1)) 0 49039857307708443467467104868809893875799651909875269632))
  (ite (= ((_ extract 186 186) a) (_ bv0 1)) 0 98079714615416886934934209737619787751599303819750539264))
  (ite (= ((_ extract 187 187) a) (_ bv0 1)) 0 196159429230833773869868419475239575503198607639501078528))
  (ite (= ((_ extract 188 188) a) (_ bv0 1)) 0 392318858461667547739736838950479151006397215279002157056))
  (ite (= ((_ extract 189 189) a) (_ bv0 1)) 0 784637716923335095479473677900958302012794430558004314112))
  (ite (= ((_ extract 190 190) a) (_ bv0 1)) 0 1569275433846670190958947355801916604025588861116008628224))
  (ite (= ((_ extract 191 191) a) (_ bv0 1)) 0 3138550867693340381917894711603833208051177722232017256448))
  (ite (= ((_ extract 192 192) a) (_ bv0 1)) 0 6277101735386680763835789423207666416102355444464034512896))
  (ite (= ((_ extract 193 193) a) (_ bv0 1)) 0 12554203470773361527671578846415332832204710888928069025792))
  (ite (= ((_ extract 194 194) a) (_ bv0 1)) 0 25108406941546723055343157692830665664409421777856138051584))
  (ite (= ((_ extract 195 195) a) (_ bv0 1)) 0 50216813883093446110686315385661331328818843555712276103168))
  (ite (= ((_ extract 196 196) a) (_ bv0 1)) 0 100433627766186892221372630771322662657637687111424552206336))
  (ite (= ((_ extract 197 197) a) (_ bv0 1)) 0 200867255532373784442745261542645325315275374222849104412672))
  (ite (= ((_ extract 198 198) a) (_ bv0 1)) 0 401734511064747568885490523085290650630550748445698208825344))
  (ite (= ((_ extract 199 199) a) (_ bv0 1)) 0 803469022129495137770981046170581301261101496891396417650688))
  (ite (= ((_ extract 200 200) a) (_ bv0 1)) 0 1606938044258990275541962092341162602522202993782792835301376))
  (ite (= ((_ extract 201 201) a) (_ bv0 1)) 0 3213876088517980551083924184682325205044405987565585670602752))
  (ite (= ((_ extract 202 202) a) (_ bv0 1)) 0 6427752177035961102167848369364650410088811975131171341205504))
  (ite (= ((_ extract 203 203) a) (_ bv0 1)) 0 12855504354071922204335696738729300820177623950262342682411008))
  (ite (= ((_ extract 204 204) a) (_ bv0 1)) 0 25711008708143844408671393477458601640355247900524685364822016))
  (ite (= ((_ extract 205 205) a) (_ bv0 1)) 0 51422017416287688817342786954917203280710495801049370729644032))
  (ite (= ((_ extract 206 206) a) (_ bv0 1)) 0 102844034832575377634685573909834406561420991602098741459288064))
  (ite (= ((_ extract 207 207) a) (_ bv0 1)) 0 205688069665150755269371147819668813122841983204197482918576128))
  (ite (= ((_ extract 208 208) a) (_ bv0 1)) 0 411376139330301510538742295639337626245683966408394965837152256))
  (ite (= ((_ extract 209 209) a) (_ bv0 1)) 0 822752278660603021077484591278675252491367932816789931674304512))
  (ite (= ((_ extract 210 210) a) (_ bv0 1)) 0 1645504557321206042154969182557350504982735865633579863348609024))
  (ite (= ((_ extract 211 211) a) (_ bv0 1)) 0 3291009114642412084309938365114701009965471731267159726697218048))
  (ite (= ((_ extract 212 212) a) (_ bv0 1)) 0 6582018229284824168619876730229402019930943462534319453394436096))
  (ite (= ((_ extract 213 213) a) (_ bv0 1)) 0 13164036458569648337239753460458804039861886925068638906788872192))
  (ite (= ((_ extract 214 214) a) (_ bv0 1)) 0 26328072917139296674479506920917608079723773850137277813577744384))
  (ite (= ((_ extract 215 215) a) (_ bv0 1)) 0 52656145834278593348959013841835216159447547700274555627155488768))
  (ite (= ((_ extract 216 216) a) (_ bv0 1)) 0 105312291668557186697918027683670432318895095400549111254310977536))
  (ite (= ((_ extract 217 217) a) (_ bv0 1)) 0 210624583337114373395836055367340864637790190801098222508621955072))
  (ite (= ((_ extract 218 218) a) (_ bv0 1)) 0 421249166674228746791672110734681729275580381602196445017243910144))
  (ite (= ((_ extract 219 219) a) (_ bv0 1)) 0 842498333348457493583344221469363458551160763204392890034487820288))
  (ite (= ((_ extract 220 220) a) (_ bv0 1)) 0 1684996666696914987166688442938726917102321526408785780068975640576))
  (ite (= ((_ extract 221 221) a) (_ bv0 1)) 0 3369993333393829974333376885877453834204643052817571560137951281152))
  (ite (= ((_ extract 222 222) a) (_ bv0 1)) 0 6739986666787659948666753771754907668409286105635143120275902562304))
  (ite (= ((_ extract 223 223) a) (_ bv0 1)) 0 13479973333575319897333507543509815336818572211270286240551805124608))
  (ite (= ((_ extract 224 224) a) (_ bv0 1)) 0 26959946667150639794667015087019630673637144422540572481103610249216))
  (ite (= ((_ extract 225 225) a) (_ bv0 1)) 0 53919893334301279589334030174039261347274288845081144962207220498432))
  (ite (= ((_ extract 226 226) a) (_ bv0 1)) 0 107839786668602559178668060348078522694548577690162289924414440996864))
  (ite (= ((_ extract 227 227) a) (_ bv0 1)) 0 215679573337205118357336120696157045389097155380324579848828881993728))
  (ite (= ((_ extract 228 228) a) (_ bv0 1)) 0 431359146674410236714672241392314090778194310760649159697657763987456))
  (ite (= ((_ extract 229 229) a) (_ bv0 1)) 0 862718293348820473429344482784628181556388621521298319395315527974912))
  (ite (= ((_ extract 230 230) a) (_ bv0 1)) 0 1725436586697640946858688965569256363112777243042596638790631055949824))
  (ite (= ((_ extract 231 231) a) (_ bv0 1)) 0 3450873173395281893717377931138512726225554486085193277581262111899648))
  (ite (= ((_ extract 232 232) a) (_ bv0 1)) 0 6901746346790563787434755862277025452451108972170386555162524223799296))
  (ite (= ((_ extract 233 233) a) (_ bv0 1)) 0 13803492693581127574869511724554050904902217944340773110325048447598592))
  (ite (= ((_ extract 234 234) a) (_ bv0 1)) 0 27606985387162255149739023449108101809804435888681546220650096895197184))
  (ite (= ((_ extract 235 235) a) (_ bv0 1)) 0 55213970774324510299478046898216203619608871777363092441300193790394368))
  (ite (= ((_ extract 236 236) a) (_ bv0 1)) 0 110427941548649020598956093796432407239217743554726184882600387580788736))
  (ite (= ((_ extract 237 237) a) (_ bv0 1)) 0 220855883097298041197912187592864814478435487109452369765200775161577472))
  (ite (= ((_ extract 238 238) a) (_ bv0 1)) 0 441711766194596082395824375185729628956870974218904739530401550323154944))
  (ite (= ((_ extract 239 239) a) (_ bv0 1)) 0 883423532389192164791648750371459257913741948437809479060803100646309888))
  (ite (= ((_ extract 240 240) a) (_ bv0 1)) 0 1766847064778384329583297500742918515827483896875618958121606201292619776))
  (ite (= ((_ extract 241 241) a) (_ bv0 1)) 0 3533694129556768659166595001485837031654967793751237916243212402585239552))
  (ite (= ((_ extract 242 242) a) (_ bv0 1)) 0 7067388259113537318333190002971674063309935587502475832486424805170479104))
  (ite (= ((_ extract 243 243) a) (_ bv0 1)) 0 14134776518227074636666380005943348126619871175004951664972849610340958208))
  (ite (= ((_ extract 244 244) a) (_ bv0 1)) 0 28269553036454149273332760011886696253239742350009903329945699220681916416))
  (ite (= ((_ extract 245 245) a) (_ bv0 1)) 0 56539106072908298546665520023773392506479484700019806659891398441363832832))
  (ite (= ((_ extract 246 246) a) (_ bv0 1)) 0 113078212145816597093331040047546785012958969400039613319782796882727665664))
  (ite (= ((_ extract 247 247) a) (_ bv0 1)) 0 226156424291633194186662080095093570025917938800079226639565593765455331328))
  (ite (= ((_ extract 248 248) a) (_ bv0 1)) 0 452312848583266388373324160190187140051835877600158453279131187530910662656))
  (ite (= ((_ extract 249 249) a) (_ bv0 1)) 0 904625697166532776746648320380374280103671755200316906558262375061821325312))
  (ite (= ((_ extract 250 250) a) (_ bv0 1)) 0 1809251394333065553493296640760748560207343510400633813116524750123642650624))
  (ite (= ((_ extract 251 251) a) (_ bv0 1)) 0 3618502788666131106986593281521497120414687020801267626233049500247285301248))
  (ite (= ((_ extract 252 252) a) (_ bv0 1)) 0 7237005577332262213973186563042994240829374041602535252466099000494570602496))
  (ite (= ((_ extract 253 253) a) (_ bv0 1)) 0 14474011154664524427946373126085988481658748083205070504932198000989141204992))
  (ite (= ((_ extract 254 254) a) (_ bv0 1)) 0 28948022309329048855892746252171976963317496166410141009864396001978282409984))
  (ite (= ((_ extract 255 255) a) (_ bv0 1)) 0 57896044618658097711785492504343953926634992332820282019728792003956564819968))
)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
  (((Tuple0))))

(declare-sort us_private 0)

;; private__bool_eq
(declare-fun private__bool_eq (us_private
  us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
  (((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))

(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
  (((int__refqtmk (int__content Int)))))

(declare-datatypes ((bool__ref 0))
  (((bool__refqtmk (bool__content Bool)))))

(declare-datatypes ((us_fixed__ref 0))
  (((us_fixed__refqtmk (us_fixed__content Int)))))

(declare-datatypes ((real__ref 0))
  (((real__refqtmk (real__content Real)))))

(declare-datatypes ((us_private__ref 0))
  (((us_private__refqtmk (us_private__content us_private)))))

;; int__ref___projection
(define-fun int__ref___projection ((a int__ref)) Int
  (int__content a))

;; __fixed__ref___projection
(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int
  (us_fixed__content a))

;; bool__ref___projection
(define-fun bool__ref___projection ((a bool__ref)) Bool
  (bool__content a))

;; real__ref___projection
(define-fun real__ref___projection ((a real__ref)) Real
  (real__content a))

;; __private__ref___projection
(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

;; power
(declare-fun power (Int
  Int) Int)

;; Power_0
(assert (forall ((x Int)) (= (power x 0) 1)))

;; Power_s
(assert
  (forall ((x Int) (n Int))
    (=> (<= 0 n) (= (power x (+ n 1)) (* x (power x n))))))

;; Power_s_alt
(assert
  (forall ((x Int) (n Int))
    (=> (< 0 n) (= (power x n) (* x (power x (- n 1)))))))

;; Power_1
(assert (forall ((x Int)) (= (power x 1) x)))

;; Power_sum
(assert
  (forall ((x Int) (n Int) (m Int))
    (=>
      (<= 0 n)
      (=> (<= 0 m) (= (power x (+ n m)) (* (power x n) (power x m)))))))

;; Power_mult
(assert
  (forall ((x Int) (n Int) (m Int))
    (=> (<= 0 n) (=> (<= 0 m) (= (power x (* n m)) (power (power x n) m))))))

;; Power_comm1
(assert
  (forall ((x Int) (y Int))
    (=>
      (= (* x y) (* y x))
      (forall ((n Int))
        (=> (<= 0 n) (= (* (power x n) y) (* y (power x n))))))))

;; Power_comm2
(assert
  (forall ((x Int) (y Int))
    (=>
      (= (* x y) (* y x))
      (forall ((n Int))
        (=> (<= 0 n) (= (power (* x y) n) (* (power x n) (power y n))))))))

;; Power_non_neg
(assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (<= 0 y)) (<= 0 (power x y)))))

;; Power_pos
(assert
  (forall ((x Int) (y Int)) (=> (and (< 0 x) (<= 0 y)) (< 0 (power x y)))))

;; Power_monotonic
(assert
  (forall ((x Int) (n Int) (m Int))
    (=> (and (< 0 x) (and (<= 0 n) (<= n m))) (<= (power x n) (power x m)))))

;; abs
(define-fun abs1 ((x Int)) Int
  (ite (<= 0 x) x (- x)))

;; Abs_le
(assert
  (forall ((x Int) (y Int)) (= (<= (abs1 x) y) (and (<= (- y) x) (<= x y)))))

;; Abs_pos
(assert (forall ((x Int)) (<= 0 (abs1 x))))

;; div
(declare-fun div1 (Int
  Int) Int)

;; mod
(declare-fun mod1 (Int
  Int) Int)

;; Div_mod
(assert
  (forall ((x Int) (y Int))
    (=> (not (= y 0)) (= x (+ (* y (div1 x y)) (mod1 x y))))))

;; Div_bound
(assert
  (forall ((x Int) (y Int))
    (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div1 x y)) (<= (div1 x y) x)))))

;; Mod_bound
(assert
  (forall ((x Int) (y Int))
    (=>
      (not (= y 0))
      (and (< (- (abs1 y)) (mod1 x y)) (< (mod1 x y) (abs1 y))))))

;; Div_sign_pos
(assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< 0 y)) (<= 0 (div1 x y)))))

;; Div_sign_neg
(assert
  (forall ((x Int) (y Int)) (=> (and (<= x 0) (< 0 y)) (<= (div1 x y) 0))))

;; Mod_sign_pos
(assert
  (forall ((x Int) (y Int))
    (=> (and (<= 0 x) (not (= y 0))) (<= 0 (mod1 x y)))))

;; Mod_sign_neg
(assert
  (forall ((x Int) (y Int))
    (=> (and (<= x 0) (not (= y 0))) (<= (mod1 x y) 0))))

;; Rounds_toward_zero
(assert
  (forall ((x Int) (y Int))
    (=> (not (= y 0)) (<= (abs1 (* (div1 x y) y)) (abs1 x)))))

;; Div_1
(assert (forall ((x Int)) (= (div1 x 1) x)))

;; Mod_1
(assert (forall ((x Int)) (= (mod1 x 1) 0)))

;; Div_inf
(assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div1 x y) 0))))

;; Mod_inf
(assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (mod1 x y) x))))

;; Div_mult
(assert
  (forall ((x Int) (y Int) (z Int))
    (! (=>
         (and (< 0 x) (and (<= 0 y) (<= 0 z)))
         (= (div1 (+ (* x y) z) x) (+ y (div1 z x)))) :pattern ((div1
                                                                  (+ (* x y) z)
                                                                  x)) )))

;; Mod_mult
(assert
  (forall ((x Int) (y Int) (z Int))
    (! (=>
         (and (< 0 x) (and (<= 0 y) (<= 0 z)))
         (= (mod1 (+ (* x y) z) x) (mod1 z x))) :pattern ((mod1
                                                            (+ (* x y) z)
                                                            x)) )))

;; Div_unique
(assert
  (forall ((x Int) (y Int) (q Int))
    (=>
      (< 0 y)
      (=> (and (<= (* q y) x) (< x (+ (* q y) y))) (= (div x y) q)))))

;; Div_bound
(assert
  (forall ((x Int) (y Int))
    (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div x y)) (<= (div x y) x)))))

;; Div_inf
(assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div x y) 0))))

;; Div_inf_neg
(assert
  (forall ((x Int) (y Int))
    (=> (and (< 0 x) (<= x y)) (= (div (- x) y) (- 1)))))

;; Mod_0
(assert (forall ((y Int)) (=> (not (= y 0)) (= (mod 0 y) 0))))

;; Div_1_left
(assert (forall ((y Int)) (=> (< 1 y) (= (div 1 y) 0))))

;; Div_minus1_left
(assert (forall ((y Int)) (=> (< 1 y) (= (div (- 1) y) (- 1)))))

;; Mod_1_left
(assert (forall ((y Int)) (=> (< 1 y) (= (mod 1 y) 1))))

;; Mod_minus1_left
(assert
  (forall ((y Int))
    (! (=> (< 1 y) (= (mod (- 1) y) (- y 1))) :pattern ((mod (- 1) y)) )))

;; Div_mult
(assert
  (forall ((x Int) (y Int) (z Int))
    (! (=> (< 0 x) (= (div (+ (* x y) z) x) (+ y (div z x)))) :pattern ((div (+ (* x y) z) x)) )))

;; Mod_mult
(assert
  (forall ((x Int) (y Int) (z Int))
    (! (=> (< 0 x) (= (mod (+ (* x y) z) x) (mod z x))) :pattern ((mod (+ (* x y) z) x)) )))

;; mod
(define-fun mod2 ((x Int) (y Int)) Int
  (ite (or (and (< 0 x) (< 0 y)) (and (< x 0) (< y 0)))
    (mod1 x y)
    (ite (= (mod1 x y) 0) 0 (+ (mod1 x y) y))))

;; nth
(declare-fun nth ((_ BitVec 32)
  Int) Bool)

;; lsr
(declare-fun lsr ((_ BitVec 32)
  Int) (_ BitVec 32))

;; asr
(declare-fun asr ((_ BitVec 32)
  Int) (_ BitVec 32))

;; lsl
(declare-fun lsl ((_ BitVec 32)
  Int) (_ BitVec 32))

;; rotate_right
(declare-fun rotate_right1 ((_ BitVec 32)
  Int) (_ BitVec 32))

;; rotate_left
(declare-fun rotate_left1 ((_ BitVec 32)
  Int) (_ BitVec 32))

;; pow2
(declare-fun pow2 (Int) Int)

(declare-const two_power_size_minus_one Int)

;; two_power_size_minus_one_val
(assert (= two_power_size_minus_one (pow2 (- 32 1))))

;; of_int
(declare-fun of_int (Int) (_ BitVec 32))

;; to_int
(define-fun to_int1 ((x (_ BitVec 32))) Int
  (ite (bvsge x (_ bv0 32)) (bv2nat32 x) (- (- 4294967296 (bv2nat32 x)))))

;; uint_in_range
(define-fun uint_in_range ((i Int)) Bool
  (and (<= 0 i) (<= i 4294967295)))

;; lsr_bv_is_lsr
(assert
  (forall ((x (_ BitVec 32)) (n (_ BitVec 32)))
    (= (bvlshr x n) (lsr x (bv2nat32 n)))))

;; asr_bv_is_asr
(assert
  (forall ((x (_ BitVec 32)) (n (_ BitVec 32)))
    (= (bvashr x n) (asr x (bv2nat32 n)))))

;; lsl_bv_is_lsl
(assert
  (forall ((x (_ BitVec 32)) (n (_ BitVec 32)))
    (= (bvshl x n) (lsl x (bv2nat32 n)))))

;; rotate_left_bv_is_rotate_left
(assert
  (forall ((v (_ BitVec 32)) (n (_ BitVec 32)))
    (= (bvor (bvshl v (bvurem n (_ bv32 32))) (bvlshr v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) 
    (rotate_left1
      v
      (bv2nat32 n)))))

;; rotate_right_bv_is_rotate_right
(assert
  (forall ((v (_ BitVec 32)) (n (_ BitVec 32)))
    (= (bvor (bvlshr v (bvurem n (_ bv32 32))) (bvshl v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) 
    (rotate_right1
      v
      (bv2nat32 n)))))

;; nth_bv
(declare-fun nth_bv ((_ BitVec 32)
  (_ BitVec 32)) Bool)

;; nth_bv_def
(assert
  (forall ((x (_ BitVec 32)) (i (_ BitVec 32)))
    (=
      (= (nth_bv x i) true)
      (not (= (bvand (bvlshr x i) #x00000001) #x00000000)))))

;; Nth_bv_is_nth
(assert
  (forall ((x (_ BitVec 32)) (i (_ BitVec 32)))
    (= (nth x (bv2nat32 i)) (nth_bv x i))))

;; Nth_bv_is_nth2
(assert
  (forall ((x (_ BitVec 32)) (i Int))
    (=> (and (<= 0 i) (< i 4294967296)) (= (nth_bv x (of_int i)) (nth x i)))))

;; eq_sub_bv
(declare-fun eq_sub_bv ((_ BitVec 32)
  (_ BitVec 32)
  (_ BitVec 32)
  (_ BitVec 32)) Bool)

;; eq_sub_bv_def
(assert
  (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32)))
    (let ((mask (bvshl (bvsub (bvshl #x00000001 n) #x00000001) i)))
      (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))

;; eq_sub
(define-fun eq_sub ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int) (n Int)) Bool
  (forall ((j Int))
    (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

;; eq_sub_equiv
(assert
  (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32)))
    (= (eq_sub a b (bv2nat32 i) (bv2nat32 n)) (eq_sub_bv a b i n))))

(declare-datatypes ((t__ref 0))
  (((t__refqtmk (t__content (_ BitVec 32))))))

;; bool_eq
(define-fun bool_eq ((x (_ BitVec 32)) (y (_ BitVec 32))) Bool
  (ite (= x y) true false))

;; bool_ne
(define-fun bool_ne ((x (_ BitVec 32)) (y (_ BitVec 32))) Bool
  (ite (not (= x y)) true false))

;; bool_lt
(define-fun bool_lt ((x (_ BitVec 32)) (y (_ BitVec 32))) Bool
  (ite (bvult x y) true false))

;; bool_le
(define-fun bool_le ((x (_ BitVec 32)) (y (_ BitVec 32))) Bool
  (ite (bvule x y) true false))

;; bool_gt
(define-fun bool_gt ((x (_ BitVec 32)) (y (_ BitVec 32))) Bool
  (ite (bvugt x y) true false))

;; bool_ge
(define-fun bool_ge ((x (_ BitVec 32)) (y (_ BitVec 32))) Bool
  (ite (bvuge x y) true false))

;; power
(declare-fun power1 ((_ BitVec 32)
  Int) (_ BitVec 32))

;; Power_0
(assert (forall ((x (_ BitVec 32))) (= (power1 x 0) #x00000001)))

;; Power_1
(assert (forall ((x (_ BitVec 32))) (= (power1 x 1) x)))

;; Power_s
(assert
  (forall ((x (_ BitVec 32)) (n Int))
    (=> (<= 0 n) (= (power1 x (+ n 1)) (bvmul x (power1 x n))))))

;; Power_s_alt
(assert
  (forall ((x (_ BitVec 32)) (n Int))
    (=> (< 0 n) (= (power1 x n) (bvmul x (power1 x (- n 1)))))))

;; Power_sum
(assert
  (forall ((x (_ BitVec 32)) (n Int) (m Int))
    (=>
      (<= 0 n)
      (=> (<= 0 m) (= (power1 x (+ n m)) (bvmul (power1 x n) (power1 x m)))))))

;; Power_mult
(assert
  (forall ((x (_ BitVec 32)) (n Int) (m Int))
    (=>
      (<= 0 n)
      (=> (<= 0 m) (= (power1 x (* n m)) (power1 (power1 x n) m))))))

;; Power_mult2
(assert
  (forall ((x (_ BitVec 32)) (y (_ BitVec 32)) (n Int))
    (=>
      (<= 0 n)
      (= (power1 (bvmul x y) n) (bvmul (power1 x n) (power1 y n))))))

;; bv_min
(define-fun bv_min ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32)
  (ite (bvule x y) x y))

;; bv_max
(define-fun bv_max ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32)
  (ite (bvule x y) y x))

;; min
(define-fun min ((x Int) (y Int)) Int
  (ite (<= x y) x y))

;; max
(define-fun max ((x Int) (y Int)) Int
  (ite (<= x y) y x))

;; Min_r
(assert (forall ((x Int) (y Int)) (=> (<= y x) (= (min x y) y))))

;; Max_l
(assert (forall ((x Int) (y Int)) (=> (<= y x) (= (max x y) x))))

;; Min_comm
(assert (forall ((x Int) (y Int)) (= (min x y) (min y x))))

;; Max_comm
(assert (forall ((x Int) (y Int)) (= (max x y) (max y x))))

;; Min_assoc
(assert
  (forall ((x Int) (y Int) (z Int)) (= (min (min x y) z) (min x (min y z)))))

;; Max_assoc
(assert
  (forall ((x Int) (y Int) (z Int)) (= (max (max x y) z) (max x (max y z)))))

;; bv_min_to_uint
(assert
  (forall ((x (_ BitVec 32)) (y (_ BitVec 32)))
    (= (bv2nat32 (bv_min x y)) (min (bv2nat32 x) (bv2nat32 y)))))

;; bv_max_to_uint
(assert
  (forall ((x (_ BitVec 32)) (y (_ BitVec 32)))
    (= (bv2nat32 (bv_max x y)) (max (bv2nat32 x) (bv2nat32 y)))))

;; uc_of_int
(define-fun uc_of_int ((x Int)) (_ BitVec 32)
  (ite (<= 0 x) (of_int x) (bvneg (of_int (- x)))))

;; uc_to_int
(define-fun uc_to_int ((x (_ BitVec 32))) Int
  (ite (= (bool_lt x (of_int two_power_size_minus_one)) true)
    (bv2nat32 x)
    (- (bv2nat32 (bvneg x)))))

;; nth
(declare-fun nth1 ((_ BitVec 64)
  Int) Bool)

;; lsr
(declare-fun lsr1 ((_ BitVec 64)
  Int) (_ BitVec 64))

;; asr
(declare-fun asr1 ((_ BitVec 64)
  Int) (_ BitVec 64))

;; lsl
(declare-fun lsl1 ((_ BitVec 64)
  Int) (_ BitVec 64))

;; rotate_right
(declare-fun rotate_right2 ((_ BitVec 64)
  Int) (_ BitVec 64))

;; rotate_left
(declare-fun rotate_left2 ((_ BitVec 64)
  Int) (_ BitVec 64))

(declare-const two_power_size_minus_one1 Int)

;; two_power_size_minus_one_val
(assert (= two_power_size_minus_one1 (pow2 (- 64 1))))

;; of_int
(declare-fun of_int1 (Int) (_ BitVec 64))

;; to_int
(define-fun to_int2 ((x (_ BitVec 64))) Int
  (ite (bvsge x (_ bv0 64))
    (bv2nat64 x)
    (- (- 18446744073709551616 (bv2nat64 x)))))

;; uint_in_range
(define-fun uint_in_range1 ((i Int)) Bool
  (and (<= 0 i) (<= i 18446744073709551615)))

;; lsr_bv_is_lsr
(assert
  (forall ((x (_ BitVec 64)) (n (_ BitVec 64)))
    (= (bvlshr x n) (lsr1 x (bv2nat64 n)))))

;; asr_bv_is_asr
(assert
  (forall ((x (_ BitVec 64)) (n (_ BitVec 64)))
    (= (bvashr x n) (asr1 x (bv2nat64 n)))))

;; lsl_bv_is_lsl
(assert
  (forall ((x (_ BitVec 64)) (n (_ BitVec 64)))
    (= (bvshl x n) (lsl1 x (bv2nat64 n)))))

;; rotate_left_bv_is_rotate_left
(assert
  (forall ((v (_ BitVec 64)) (n (_ BitVec 64)))
    (= (bvor (bvshl v (bvurem n (_ bv64 64))) (bvlshr v (bvsub (_ bv64 64) (bvurem n (_ bv64 64))))) 
    (rotate_left2
      v
      (bv2nat64 n)))))

;; rotate_right_bv_is_rotate_right
(assert
  (forall ((v (_ BitVec 64)) (n (_ BitVec 64)))
    (= (bvor (bvlshr v (bvurem n (_ bv64 64))) (bvshl v (bvsub (_ bv64 64) (bvurem n (_ bv64 64))))) 
    (rotate_right2
      v
      (bv2nat64 n)))))

;; nth_bv
(declare-fun nth_bv1 ((_ BitVec 64)
  (_ BitVec 64)) Bool)

;; nth_bv_def
(assert
  (forall ((x (_ BitVec 64)) (i (_ BitVec 64)))
    (=
      (= (nth_bv1 x i) true)
      (not (= (bvand (bvlshr x i) #x0000000000000001) #x0000000000000000)))))

;; Nth_bv_is_nth
(assert
  (forall ((x (_ BitVec 64)) (i (_ BitVec 64)))
    (= (nth1 x (bv2nat64 i)) (nth_bv1 x i))))

;; Nth_bv_is_nth2
(assert
  (forall ((x (_ BitVec 64)) (i Int))
    (=>
      (and (<= 0 i) (< i 18446744073709551616))
      (= (nth_bv1 x (of_int1 i)) (nth1 x i)))))

;; eq_sub_bv
(declare-fun eq_sub_bv1 ((_ BitVec 64)
  (_ BitVec 64)
  (_ BitVec 64)
  (_ BitVec 64)) Bool)

;; eq_sub_bv_def
(assert
  (forall ((a (_ BitVec 64)) (b (_ BitVec 64)) (i (_ BitVec 64)) (n (_ BitVec 64)))
    (let ((mask (bvshl (bvsub (bvshl #x0000000000000001 n) #x0000000000000001) i)))
      (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))

;; eq_sub
(define-fun eq_sub1 ((a (_ BitVec 64)) (b (_ BitVec 64)) (i Int) (n Int)) Bool
  (forall ((j Int))
    (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))

;; eq_sub_equiv
(assert
  (forall ((a (_ BitVec 64)) (b (_ BitVec 64)) (i (_ BitVec 64)) (n (_ BitVec 64)))
    (= (eq_sub1 a b (bv2nat64 i) (bv2nat64 n)) (eq_sub_bv1 a b i n))))

(declare-datatypes ((t__ref1 0))
  (((t__refqtmk1 (t__content1 (_ BitVec 64))))))

;; bool_eq
(define-fun bool_eq1 ((x (_ BitVec 64)) (y (_ BitVec 64))) Bool
  (ite (= x y) true false))

;; bool_ne
(define-fun bool_ne1 ((x (_ BitVec 64)) (y (_ BitVec 64))) Bool
  (ite (not (= x y)) true false))

;; bool_lt
(define-fun bool_lt1 ((x (_ BitVec 64)) (y (_ BitVec 64))) Bool
  (ite (bvult x y) true false))

;; bool_le
(define-fun bool_le1 ((x (_ BitVec 64)) (y (_ BitVec 64))) Bool
  (ite (bvule x y) true false))

;; bool_gt
(define-fun bool_gt1 ((x (_ BitVec 64)) (y (_ BitVec 64))) Bool
  (ite (bvugt x y) true false))

;; bool_ge
(define-fun bool_ge1 ((x (_ BitVec 64)) (y (_ BitVec 64))) Bool
  (ite (bvuge x y) true false))

;; power
(declare-fun power2 ((_ BitVec 64)
  Int) (_ BitVec 64))

;; Power_0
(assert (forall ((x (_ BitVec 64))) (= (power2 x 0) #x0000000000000001)))

;; Power_1
(assert (forall ((x (_ BitVec 64))) (= (power2 x 1) x)))

;; Power_s
(assert
  (forall ((x (_ BitVec 64)) (n Int))
    (=> (<= 0 n) (= (power2 x (+ n 1)) (bvmul x (power2 x n))))))

;; Power_s_alt
(assert
  (forall ((x (_ BitVec 64)) (n Int))
    (=> (< 0 n) (= (power2 x n) (bvmul x (power2 x (- n 1)))))))

;; Power_sum
(assert
  (forall ((x (_ BitVec 64)) (n Int) (m Int))
    (=>
      (<= 0 n)
      (=> (<= 0 m) (= (power2 x (+ n m)) (bvmul (power2 x n) (power2 x m)))))))

;; Power_mult
(assert
  (forall ((x (_ BitVec 64)) (n Int) (m Int))
    (=>
      (<= 0 n)
      (=> (<= 0 m) (= (power2 x (* n m)) (power2 (power2 x n) m))))))

;; Power_mult2
(assert
  (forall ((x (_ BitVec 64)) (y (_ BitVec 64)) (n Int))
    (=>
      (<= 0 n)
      (= (power2 (bvmul x y) n) (bvmul (power2 x n) (power2 y n))))))

;; bv_min
(define-fun bv_min1 ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64)
  (ite (bvule x y) x y))

;; bv_max
(define-fun bv_max1 ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64)
  (ite (bvule x y) y x))

;; bv_min_to_uint
(assert
  (forall ((x (_ BitVec 64)) (y (_ BitVec 64)))
    (= (bv2nat64 (bv_min1 x y)) (min (bv2nat64 x) (bv2nat64 y)))))

;; bv_max_to_uint
(assert
  (forall ((x (_ BitVec 64)) (y (_ BitVec 64)))
    (= (bv2nat64 (bv_max1 x y)) (max (bv2nat64 x) (bv2nat64 y)))))

;; uc_of_int
(define-fun uc_of_int1 ((x Int)) (_ BitVec 64)
  (ite (<= 0 x) (of_int1 x) (bvneg (of_int1 (- x)))))

;; uc_to_int
(define-fun uc_to_int1 ((x (_ BitVec 64))) Int
  (ite (= (bool_lt1 x (of_int1 two_power_size_minus_one1)) true)
    (bv2nat64 x)
    (- (bv2nat64 (bvneg x)))))

;; bool_eq
(define-fun bool_eq2 ((x Bool) (y Bool)) Bool
  (ite (= x y) true false))

;; to_int
(define-fun to_int3 ((b Bool)) Int
  (ite (= b true) 1 0))

;; of_int
(define-fun of_int2 ((i Int)) Bool
  (ite (= i 0) false true))

;; in_range
(define-fun in_range ((x Int)) Bool
  (or (= x 0) (= x 1)))

;; attr__ATTRIBUTE_IMAGE
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

;; attr__ATTRIBUTE_VALUE__pre_check
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

;; attr__ATTRIBUTE_VALUE
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

;; integer'int
(declare-fun integerqtint (integer) Int)

;; integer'axiom
(assert
  (forall ((i integer))
    (and
      (<= (- 2147483648) (integerqtint i))
      (<= (integerqtint i) 2147483647))))

;; in_range
(define-fun in_range1 ((x Int)) Bool
  (and (<= (- 2147483648) x) (<= x 2147483647)))

;; bool_eq
(define-fun bool_eq3 ((x Int) (y Int)) Bool
  (ite (= x y) true false))

;; attr__ATTRIBUTE_IMAGE
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

;; attr__ATTRIBUTE_VALUE__pre_check
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

;; attr__ATTRIBUTE_VALUE
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

;; user_eq
(declare-fun user_eq (integer
  integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
  (((integer__refqtmk (integer__content integer)))))

;; integer__ref_integer__content__projection
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer
  (integer__content a))

(declare-sort natural 0)

;; natural'int
(declare-fun naturalqtint (natural) Int)

;; natural'axiom
(assert
  (forall ((i natural))
    (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

;; in_range
(define-fun in_range2 ((x Int)) Bool
  (and (<= 0 x) (<= x 2147483647)))

;; bool_eq
(define-fun bool_eq4 ((x Int) (y Int)) Bool
  (ite (= x y) true false))

;; attr__ATTRIBUTE_IMAGE
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

;; attr__ATTRIBUTE_VALUE__pre_check
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

;; attr__ATTRIBUTE_VALUE
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

;; user_eq
(declare-fun user_eq1 (natural
  natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ((natural__ref 0))
  (((natural__refqtmk (natural__content natural)))))

;; natural__ref_natural__content__projection
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural
  (natural__content a))

;; dynamic_invariant
(define-fun dynamic_invariant ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool
  (=>
    (or (= temp___is_init_42 true) (<= 0 2147483647))
    (in_range2 temp___expr_46)))

;; to_rep
(define-fun to_rep ((x natural)) Int
  (naturalqtint x))

;; of_rep
(declare-fun of_rep (Int) natural)

;; inversion_axiom
(assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
(assert
  (forall ((x natural)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
(assert
  (forall ((x Int))
    (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                                (of_rep x))) )))

;; bool_eq
(declare-fun bool_eq5 (Int
  Int) Bool)

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
(assert (<= 0 value__size))

;; object__size_axiom
(assert (<= 0 object__size))

;; alignment_axiom
(assert (<= 0 alignment))

;; user_eq
(declare-fun user_eq2 (Int
  Int) Bool)

(declare-const dummy2 Int)

(declare-datatypes ((big_integer__ref 0))
  (((big_integer__refqtmk (big_integer__content Int)))))

;; big_integer__ref_big_integer__content__projection
(define-fun big_integer__ref_big_integer__content__projection ((a big_integer__ref)) Int
  (big_integer__content a))

(declare-datatypes ((valid_big_integer__ref 0))
  (((valid_big_integer__refqtmk (valid_big_integer__content Int)))))

;; valid_big_integer__ref_valid_big_integer__content__projection
(define-fun valid_big_integer__ref_valid_big_integer__content__projection 
  ((a valid_big_integer__ref)) Int
  (valid_big_integer__content a))

;; big
(declare-fun big (Int) Int)

;; big__function_guard
(declare-fun big__function_guard (Int
  Int) Bool)

(declare-sort int64 0)

;; int64'int
(declare-fun int64qtint (int64) Int)

;; int64'axiom
(assert
  (forall ((i int64))
    (and
      (<= (- 9223372036854775808) (int64qtint i))
      (<= (int64qtint i) 9223372036854775807))))

;; in_range
(define-fun in_range3 ((x Int)) Bool
  (and (<= (- 9223372036854775808) x) (<= x 9223372036854775807)))

;; bool_eq
(define-fun bool_eq6 ((x Int) (y Int)) Bool
  (ite (= x y) true false))

;; attr__ATTRIBUTE_IMAGE
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

;; attr__ATTRIBUTE_VALUE__pre_check
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

;; attr__ATTRIBUTE_VALUE
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

;; user_eq
(declare-fun user_eq3 (int64
  int64) Bool)

(declare-const dummy3 int64)

(declare-datatypes ((int64__ref 0))
  (((int64__refqtmk (int64__content int64)))))

;; int64__ref_int64__content__projection
(define-fun int64__ref_int64__content__projection ((a int64__ref)) int64
  (int64__content a))

;; dynamic_invariant
(define-fun dynamic_invariant1 ((temp___expr_244 Int) (temp___is_init_240 Bool) (temp___skip_constant_241 Bool) (temp___do_toplevel_242 Bool) (temp___do_typ_inv_243 Bool)) Bool
  (=>
    (or
      (= temp___is_init_240 true)
      (<= (- 9223372036854775808) 9223372036854775807))
    (in_range3 temp___expr_244)))

;; big__post_axiom
(assert true)

;; big__def_axiom
(assert
  (forall ((arg Int))
    (! (=> (dynamic_invariant1 arg true true true true) (= (big arg) arg)) :pattern (
    (big
      arg)) )))

;; in_double_int_range
(declare-fun in_double_int_range (Int) Bool)

;; in_double_int_range__function_guard
(declare-fun in_double_int_range__function_guard (Bool
  Int) Bool)

;; in_range
(declare-fun in_range4 (Int
  Int
  Int) Bool)

;; in_range__function_guard
(declare-fun in_range__function_guard (Bool
  Int
  Int
  Int) Bool)

;; in_double_int_range__post_axiom
(assert true)

;; in_double_int_range__def_axiom
(assert
  (forall ((arg Int))
    (! (=
         (= (in_double_int_range arg) true)
         (= (in_range4
              arg
              (big (- 9223372036854775808))
              (big 9223372036854775807)) true)) :pattern ((in_double_int_range
                                                            arg)) )))

;; big
(declare-fun big1 ((_ BitVec 64)) Int)

;; big__function_guard
(declare-fun big__function_guard1 (Int
  (_ BitVec 64)) Bool)

(declare-sort uns64 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 64))

;; bool_eq
(define-fun bool_eq7 ((x (_ BitVec 64)) (y (_ BitVec 64))) Bool
  (ite (= x y) true false))

;; attr__ATTRIBUTE_IMAGE
(declare-fun attr__ATTRIBUTE_IMAGE4 ((_ BitVec 64)) us_image)

;; attr__ATTRIBUTE_VALUE__pre_check
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

;; attr__ATTRIBUTE_VALUE
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) (_ BitVec 64))

;; user_eq
(declare-fun user_eq4 (uns64
  uns64) Bool)

(declare-const dummy4 uns64)

(declare-datatypes ((uns64__ref 0))
  (((uns64__refqtmk (uns64__content uns64)))))

;; uns64__ref_uns64__content__projection
(define-fun uns64__ref_uns64__content__projection ((a uns64__ref)) uns64
  (uns64__content a))

;; dynamic_invariant
(define-fun dynamic_invariant2 ((temp___expr_291 (_ BitVec 64)) (temp___is_init_287 Bool) (temp___skip_constant_288 Bool) (temp___do_toplevel_289 Bool) (temp___do_typ_inv_290 Bool)) Bool
  true)

;; big__post_axiom
(assert true)

;; big__def_axiom
(assert
  (forall ((arg (_ BitVec 64)))
    (! (=>
         (dynamic_invariant2 arg true true true true)
         (= (big1 arg) (bv2nat64 arg))) :pattern ((big1 arg)) )))

;; round_quotient
(declare-fun round_quotient (Int
  Int
  Int
  Int) Int)

;; round_quotient__function_guard
(declare-fun round_quotient__function_guard (Int
  Int
  Int
  Int
  Int) Bool)

;; same_sign
(declare-fun same_sign (Int
  Int) Bool)

;; same_sign__function_guard
(declare-fun same_sign__function_guard (Bool
  Int
  Int) Bool)

;; round_quotient__post_axiom
(assert true)

;; round_quotient__def_axiom
(assert
  (forall ((x Int) (y Int) (q Int) (r Int))
    (! (= (round_quotient x y q r) (ite (< (div1
                                             (- (abs1 y) (big 1))
                                             (big 2)) (abs1 r))
                                     (ite (= (same_sign x y) true)
                                       (+ q (big 1))
                                       (- q (big 1)))
                                     q)) :pattern ((round_quotient x y q r)) )))

(declare-const x Int)

(declare-const y Int)

(declare-const z Int)

(declare-const round Bool)

(declare-const log_single_size Int)

(declare-const big_2xxsingle Int)

(declare-const big_2xxdouble Int)

;; oadd
(define-fun oadd ((a (_ BitVec 32)) (b (_ BitVec 32))) (_ BitVec 64)
  (bvadd ((_ zero_extend 32) a) ((_ zero_extend 32) b)))

;; oadd__function_guard
(declare-fun oadd__function_guard ((_ BitVec 64)
  (_ BitVec 32)
  (_ BitVec 32)) Bool)

;; oadd
(define-fun oadd1 ((a (_ BitVec 64)) (b (_ BitVec 32))) (_ BitVec 64)
  (bvadd a ((_ zero_extend 32) b)))

;; oadd__function_guard
(declare-fun oadd__function_guard1 ((_ BitVec 64)
  (_ BitVec 64)
  (_ BitVec 32)) Bool)

;; omultiply
(define-fun omultiply ((a (_ BitVec 32)) (b (_ BitVec 32))) (_ BitVec 64)
  (bvmul ((_ zero_extend 32) a) ((_ zero_extend 32) b)))

;; omultiply__function_guard
(declare-fun omultiply__function_guard ((_ BitVec 64)
  (_ BitVec 32)
  (_ BitVec 32)) Bool)

;; odivide
(define-fun odivide ((a (_ BitVec 64)) (b (_ BitVec 32))) (_ BitVec 64)
  (bvudiv a ((_ zero_extend 32) b)))

;; odivide__function_guard
(declare-fun odivide__function_guard ((_ BitVec 64)
  (_ BitVec 64)
  (_ BitVec 32)) Bool)

;; oconcat
(declare-fun oconcat ((_ BitVec 32)
  (_ BitVec 32)) (_ BitVec 64))

;; oconcat__function_guard
(declare-fun oconcat__function_guard ((_ BitVec 64)
  (_ BitVec 32)
  (_ BitVec 32)) Bool)

(declare-sort uns32 0)

(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 32))

;; bool_eq
(define-fun bool_eq8 ((x1 (_ BitVec 32)) (y1 (_ BitVec 32))) Bool
  (ite (= x1 y1) true false))

;; attr__ATTRIBUTE_IMAGE
(declare-fun attr__ATTRIBUTE_IMAGE5 ((_ BitVec 32)) us_image)

;; attr__ATTRIBUTE_VALUE__pre_check
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

;; attr__ATTRIBUTE_VALUE
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) (_ BitVec 32))

;; user_eq
(declare-fun user_eq5 (uns32
  uns32) Bool)

(declare-const dummy5 uns32)

(declare-datatypes ((uns32__ref 0))
  (((uns32__refqtmk (uns32__content uns32)))))

;; uns32__ref_uns32__content__projection
(define-fun uns32__ref_uns32__content__projection ((a uns32__ref)) uns32
  (uns32__content a))

;; dynamic_invariant
(define-fun dynamic_invariant3 ((temp___expr_305 (_ BitVec 32)) (temp___is_init_301 Bool) (temp___skip_constant_302 Bool) (temp___do_toplevel_303 Bool) (temp___do_typ_inv_304 Bool)) Bool
  true)

;; oconcat__post_axiom
(assert
  (forall ((hi (_ BitVec 32)) (lo (_ BitVec 32)))
    (! (=>
         (and
           (dynamic_invariant3 hi true true true true)
           (dynamic_invariant3 lo true true true true))
         (let ((result (oconcat hi lo)))
           (=>
             (oconcat__function_guard result hi lo)
             (dynamic_invariant2 result true false true true)))) :pattern (
    (oconcat
      hi
      lo)) )))

;; oconcat__def_axiom
(assert
  (forall ((hi (_ BitVec 32)) (lo (_ BitVec 32)))
    (! (=>
         (and
           (dynamic_invariant3 hi true true true true)
           (dynamic_invariant3 lo true true true true))
         (= (oconcat hi lo) (bvor (bvshl ((_ zero_extend 32) hi) (of_int1 32)) ((_ zero_extend 32) lo)))) :pattern (
    (oconcat
      hi
      lo)) )))

;; oabs
(define-fun oabs ((x1 Int)) (_ BitVec 64)
  (ite (= x1 (- 9223372036854775808)) #x8000000000000000 (of_int1 (abs1 x1))))

;; oabs__function_guard
(declare-fun oabs__function_guard ((_ BitVec 64)
  Int) Bool)

;; orem
(define-fun orem ((a (_ BitVec 64)) (b (_ BitVec 32))) (_ BitVec 64)
  (bvurem a ((_ zero_extend 32) b)))

;; orem__function_guard
(declare-fun orem__function_guard ((_ BitVec 64)
  (_ BitVec 64)
  (_ BitVec 32)) Bool)

;; big_2xx
(declare-fun big_2xx (Int) Int)

;; big_2xx__function_guard
(declare-fun big_2xx__function_guard (Int
  Int) Bool)

;; big_2xx__post_axiom
(assert
  (forall ((n Int))
    (! (=>
         (and (dynamic_invariant n true true true true) (< n 64))
         (let ((result (big_2xx n)))
           (=> (big_2xx__function_guard result n) (< 0 result)))) :pattern (
    (big_2xx
      n)) )))

;; big_2xx__def_axiom
(assert
  (forall ((n Int))
    (! (=>
         (dynamic_invariant n true true true true)
         (= (big_2xx n) (big1
                          (ite (< n 18446744073709551616)
                            (bvshl #x0000000000000001 (of_int1 n))
                            #x0000000000000000)))) :pattern ((big_2xx n)) )))

;; big3
(declare-fun big3 ((_ BitVec 32)
  (_ BitVec 32)
  (_ BitVec 32)) Int)

;; big3__function_guard
(declare-fun big3__function_guard (Int
  (_ BitVec 32)
  (_ BitVec 32)
  (_ BitVec 32)) Bool)

;; big3__post_axiom
(assert true)

;; big3__def_axiom
(assert
  (forall ((x1 (_ BitVec 32)) (x2 (_ BitVec 32)) (x3 (_ BitVec 32)))
    (! (=>
         (and
           (and
             (dynamic_invariant3 x1 true true true true)
             (dynamic_invariant3 x2 true true true true))
           (dynamic_invariant3 x3 true true true true))
         (= (big3 x1 x2 x3) (+ (+ (* (* big_2xxsingle big_2xxsingle) 
         (big1
           ((_ zero_extend 32) x1))) (* big_2xxsingle (big1
                                                        ((_ zero_extend 32) x2)))) 
         (big1
           ((_ zero_extend 32) x3))))) :pattern ((big3 x1 x2 x3)) )))

;; le3
(declare-fun le3 ((_ BitVec 32)
  (_ BitVec 32)
  (_ BitVec 32)
  (_ BitVec 32)
  (_ BitVec 32)
  (_ BitVec 32)) Bool)

;; le3__function_guard
(declare-fun le3__function_guard (Bool
  (_ BitVec 32)
  (_ BitVec 32)
  (_ BitVec 32)
  (_ BitVec 32)
  (_ BitVec 32)
  (_ BitVec 32)) Bool)

;; le3__post_axiom
(assert
  (forall ((x1 (_ BitVec 32)) (x2 (_ BitVec 32)) (x3 (_ BitVec 32)) (y1 (_ BitVec 32)) (y2 (_ BitVec 32)) (y3 (_ BitVec 32)))
    (! (=>
         (and
           (and
             (and
               (and
                 (and
                   (dynamic_invariant3 x1 true true true true)
                   (dynamic_invariant3 x2 true true true true))
                 (dynamic_invariant3 x3 true true true true))
               (dynamic_invariant3 y1 true true true true))
             (dynamic_invariant3 y2 true true true true))
           (dynamic_invariant3 y3 true true true true))
         (let ((result (le3 x1 x2 x3 y1 y2 y3)))
           (=>
             (le3__function_guard result x1 x2 x3 y1 y2 y3)
             (= (= result true) (<= (big3 x1 x2 x3) (big3 y1 y2 y3)))))) :pattern (
    (le3
      x1
      x2
      x3
      y1
      y2
      y3)) )))

;; lo
(define-fun lo ((a (_ BitVec 64))) (_ BitVec 32)
  ((_ extract 31 0) (bvand a #x00000000FFFFFFFF)))

;; lo__function_guard
(declare-fun lo__function_guard ((_ BitVec 32)
  (_ BitVec 64)) Bool)

;; hi
(declare-fun hi ((_ BitVec 64)) (_ BitVec 32))

;; hi__function_guard
(declare-fun hi__function_guard ((_ BitVec 32)
  (_ BitVec 64)) Bool)

;; hi__post_axiom
(assert
  (forall ((a (_ BitVec 64)))
    (! (=>
         (dynamic_invariant2 a true true true true)
         (let ((result (hi a)))
           (=>
             (hi__function_guard result a)
             (dynamic_invariant3 result true false true true)))) :pattern (
    (hi
      a)) )))

;; hi__def_axiom
(assert
  (forall ((a (_ BitVec 64)))
    (! (=>
         (dynamic_invariant2 a true true true true)
         (= (hi a) ((_ extract 31 0) (bvlshr a (of_int1 32))))) :pattern (
    (hi
      a)) )))

;; to_neg_int
(declare-fun to_neg_int ((_ BitVec 64)) Int)

;; to_neg_int__function_guard
(declare-fun to_neg_int__function_guard (Int
  (_ BitVec 64)) Bool)

;; to_neg_int__post_axiom
(assert
  (forall ((a (_ BitVec 64)))
    (! (=>
         (and
           (dynamic_invariant2 a true true true true)
           (= (in_double_int_range (- (big1 a))) true))
         (let ((result (to_neg_int a)))
           (=>
             (to_neg_int__function_guard result a)
             (and
               (= (big result) (- (big1 a)))
               (dynamic_invariant1 result true false true true))))) :pattern (
    (to_neg_int
      a)) )))

;; to_pos_int
(declare-fun to_pos_int ((_ BitVec 64)) Int)

;; to_pos_int__function_guard
(declare-fun to_pos_int__function_guard (Int
  (_ BitVec 64)) Bool)

;; to_pos_int__post_axiom
(assert
  (forall ((a (_ BitVec 64)))
    (! (=>
         (and
           (dynamic_invariant2 a true true true true)
           (= (in_double_int_range (big1 a)) true))
         (let ((result (to_pos_int a)))
           (=>
             (to_pos_int__function_guard result a)
             (and
               (= (big result) (big1 a))
               (dynamic_invariant1 result true false true true))))) :pattern (
    (to_pos_int
      a)) )))

(declare-datatypes ((big_natural__ref 0))
  (((big_natural__refqtmk (big_natural__content Int)))))

;; big_natural__ref_big_natural__content__projection
(define-fun big_natural__ref_big_natural__content__projection ((a big_natural__ref)) Int
  (big_natural__content a))

(declare-const xu (_ BitVec 64))

(declare-const xhi (_ BitVec 32))

(declare-const xlo (_ BitVec 32))

(declare-const yu (_ BitVec 64))

(declare-const yhi (_ BitVec 32))

(declare-const ylo (_ BitVec 32))

(declare-datatypes ((uns32__init_wrapper 0))
  (((uns32__init_wrapperqtmk (rec__value uns32)(us_attr__init Bool)))))

;; uns32__init_wrapper_rec__value__projection
(define-fun uns32__init_wrapper_rec__value__projection ((a uns32__init_wrapper)) uns32
  (rec__value a))

;; uns32__init_wrapper___attr__init__projection
(define-fun uns32__init_wrapper___attr__init__projection ((a uns32__init_wrapper)) Bool
  (us_attr__init a))

(declare-const dummy6 uns32__init_wrapper)

;; dummy__def
(assert (= (us_attr__init dummy6) false))

(declare-datatypes ((uns32__init_wrapper__ref 0))
  (((uns32__init_wrapper__refqtmk
    (uns32__init_wrapper__content uns32__init_wrapper)))))

;; uns32__init_wrapper__ref_uns32__init_wrapper__content__projection
(define-fun uns32__init_wrapper__ref_uns32__init_wrapper__content__projection 
  ((a uns32__init_wrapper__ref)) uns32__init_wrapper
  (uns32__init_wrapper__content a))

(declare-datatypes ((map__ref 0))
  (((map__refqtmk (map__content (Array Int uns32__init_wrapper))))))

;; slide
(declare-fun slide ((Array Int uns32__init_wrapper)
  Int
  Int) (Array Int uns32__init_wrapper))

;; slide_eq
(assert
  (forall ((a (Array Int uns32__init_wrapper)))
    (forall ((first Int))
      (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
(assert
  (forall ((a (Array Int uns32__init_wrapper)))
    (forall ((old_first Int))
      (forall ((new_first Int))
        (forall ((i Int))
          (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
          (slide
            a
            old_first
            new_first) i)) ))))))

;; const
(declare-fun const1 (uns32__init_wrapper) (Array Int uns32__init_wrapper))

;; const_def
(assert
  (forall ((v uns32__init_wrapper))
    (forall ((i Int))
      (! (= (select (const1 v) i) v) :pattern ((select (const1 v) i)) ))))

(declare-const mult Int)

;; to_rep
(declare-fun to_rep1 (uns32) (_ BitVec 32))

;; of_rep
(declare-fun of_rep1 ((_ BitVec 32)) uns32)

;; inversion_axiom
(assert
  (forall ((x1 uns32))
    (! (= (of_rep1 (to_rep1 x1)) x1) :pattern ((to_rep1 x1)) )))

;; range_axiom
(assert true)

;; coerce_axiom
(assert
  (forall ((x1 (_ BitVec 32)))
    (! (= (to_rep1 (of_rep1 x1)) x1) :pattern ((to_rep1 (of_rep1 x1))) )))

;; to_int
(define-fun to_int4 ((x1 uns32)) Int
  (bv2nat32 (to_rep1 x1)))

;; range_int_axiom
(assert
  (forall ((x1 uns32))
    (! (uint_in_range (to_int4 x1)) :pattern ((to_int4 x1)) )))

(declare-sort tdD1 0)

;; tdD1'int
(declare-fun tdD1qtint (tdD1) Int)

;; tdD1'axiom
(assert (forall ((i tdD1)) (and (<= 1 (tdD1qtint i)) (<= (tdD1qtint i) 4))))

;; in_range
(define-fun in_range5 ((x1 Int)) Bool
  (and (<= 1 x1) (<= x1 4)))

;; bool_eq
(define-fun bool_eq9 ((x1 Int) (y1 Int)) Bool
  (ite (= x1 y1) true false))

;; attr__ATTRIBUTE_IMAGE
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

;; attr__ATTRIBUTE_VALUE__pre_check
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

;; attr__ATTRIBUTE_VALUE
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

;; user_eq
(declare-fun user_eq6 (tdD1
  tdD1) Bool)

(declare-const dummy7 tdD1)

(declare-datatypes ((tdD1__ref 0))
  (((tdD1__refqtmk (tdD1__content tdD1)))))

;; tdD1__ref_tdD1__content__projection
(define-fun tdD1__ref_tdD1__content__projection ((a tdD1__ref)) tdD1
  (tdD1__content a))

(declare-const big_0 Int)

(declare-const shift_prev Int)

(declare-const mask_prev (_ BitVec 32))

(declare-const zu_prev (_ BitVec 64))

(declare-const d123 Int)

(declare-sort tqdD1 0)

;; tqdD1'int
(declare-fun tqdD1qtint (tqdD1) Int)

;; tqdD1'axiom
(assert
  (forall ((i tqdD1)) (and (<= 1 (tqdD1qtint i)) (<= (tqdD1qtint i) 2))))

;; in_range
(define-fun in_range6 ((x1 Int)) Bool
  (and (<= 1 x1) (<= x1 2)))

;; bool_eq
(define-fun bool_eq10 ((x1 Int) (y1 Int)) Bool
  (ite (= x1 y1) true false))

;; attr__ATTRIBUTE_IMAGE
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

;; attr__ATTRIBUTE_VALUE__pre_check
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

;; attr__ATTRIBUTE_VALUE
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

;; user_eq
(declare-fun user_eq7 (tqdD1
  tqdD1) Bool)

(declare-const dummy8 tqdD1)

(declare-datatypes ((tqdD1__ref 0))
  (((tqdD1__refqtmk (tqdD1__content tqdD1)))))

;; tqdD1__ref_tqdD1__content__projection
(define-fun tqdD1__ref_tqdD1__content__projection ((a tqdD1__ref)) tqdD1
  (tqdD1__content a))

;; dynamic_invariant
(define-fun dynamic_invariant4 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool
  (=>
    (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647))
    (in_range1 temp___expr_18)))

;; dynamic_invariant
(define-fun dynamic_invariant5 ((temp___expr_265 Int) (temp___is_init_261 Bool) (temp___skip_constant_262 Bool) (temp___do_toplevel_263 Bool) (temp___do_typ_inv_264 Bool)) Bool
  true)

;; dynamic_invariant
(define-fun dynamic_invariant6 ((temp___expr_335 Int) (temp___is_init_331 Bool) (temp___skip_constant_332 Bool) (temp___do_toplevel_333 Bool) (temp___do_typ_inv_334 Bool)) Bool
  (=>
    (= temp___do_toplevel_333 true)
    (=> (= temp___is_init_331 true) (<= 0 temp___expr_335))))

;; in_range__post_axiom
(assert true)

;; in_range__def_axiom
(assert
  (forall ((arg Int))
    (forall ((low Int) (high Int))
      (! (=
           (= (in_range4 arg low high) true)
           (and (<= low arg) (<= arg high))) :pattern ((in_range4
                                                         arg
                                                         low
                                                         high)) ))))

;; same_sign__post_axiom
(assert true)

;; same_sign__def_axiom
(assert
  (forall ((x1 Int) (y1 Int))
    (! (=
         (= (same_sign x1 y1) true)
         (or
           (or (= x1 (big 0)) (= y1 (big 0)))
           (= (< x1 (big 0)) (< y1 (big 0))))) :pattern ((same_sign x1 y1)) )))

;; log_single_size__def_axiom
(assert
  (= log_single_size (let ((temp___187 32))
                       (ite (= temp___187 32)
                         5
                         (ite (= temp___187 64)
                           6
                           (ite (= temp___187 128) 7 (to_rep dummy1)))))))

;; big_0__def_axiom
(assert (= big_0 (big1 #x0000000000000000)))

;; big_2xxsingle__def_axiom
(assert (= big_2xxsingle (big 4294967296)))

;; big_2xxdouble__def_axiom
(assert (= big_2xxdouble (+ (big1 #xFFFFFFFFFFFFFFFF) 1)))

;; xu__def_axiom
(assert (= xu (oabs x)))

;; xhi__def_axiom
(assert (and (hi__function_guard (hi xu) xu) (= xhi (hi xu))))

;; xlo__def_axiom
(assert (= xlo (lo xu)))

;; yu__def_axiom
(assert (= yu (oabs y)))

;; yhi__def_axiom
(assert (and (hi__function_guard (hi yu) yu) (= yhi (hi yu))))

;; ylo__def_axiom
(assert (= ylo (lo yu)))

;; mult__def_axiom
(assert (= mult (abs1 (* (big x) (big y)))))

(declare-const q Int)

(declare-const r Int)

(declare-const d (Array Int uns32__init_wrapper))

(declare-const qd (Array Int uns32__init_wrapper))

(declare-const s1 (_ BitVec 32))

(declare-const s2 (_ BitVec 32))

(declare-const s3 (_ BitVec 32))

(declare-const qu (_ BitVec 64))

(declare-const ru (_ BitVec 64))

(declare-const mask (_ BitVec 32))

(declare-const scale Int)

(declare-const shift Int)

(declare-const t1 (_ BitVec 64))

(declare-const t2 (_ BitVec 64))

(declare-const t3 (_ BitVec 64))

(declare-const quot Int)

(declare-const big_r Int)

(declare-const big_q Int)

(declare-const inter Int)

(declare-const prev (_ BitVec 32))

;; Assume
(assert (dynamic_invariant log_single_size true false true true))

;; H
(assert (= log_single_size 5))

;; Assume
(assert true)

;; Assume
(assert (= (big 4294967296) big_2xxsingle))

;; Assume
(assert true)

;; Assume
(assert (= (+ (big1 #xFFFFFFFFFFFFFFFF) 1) big_2xxdouble))

;; Assume
(assert (dynamic_invariant1 x true false true true))

;; Assume
(assert (dynamic_invariant1 y true false true true))

;; Assume
(assert (dynamic_invariant1 z true false true true))

;; Assume
(assert (dynamic_invariant1 q false false true true))

;; Assume
(assert (dynamic_invariant1 r false false true true))

;; Assume
(assert
  (and
    (not (= z 0))
    (= (in_double_int_range
         (ite (= round true)
           (round_quotient
             (* (big x) (big y))
             (big z)
             (div1 (* (big x) (big y)) (big z))
             (mod1 (* (big x) (big y)) (big z)))
           (div1 (* (big x) (big y)) (big z)))) true)))

;; H
(assert (dynamic_invariant2 (oabs x) true false true true))

;; H
(assert
  (= (oabs x) (ite (= x (- 9223372036854775808))
                #x8000000000000000
                (of_int1 (abs1 x)))))

;; Assume
(assert (= (oabs x) xu))

;; Assume
(assert (dynamic_invariant2 xu true false true true))

;; H
(assert (hi__function_guard (hi xu) xu))

;; H
(assert (dynamic_invariant3 (hi xu) true false true true))

;; H
(assert (= (hi xu) ((_ extract 31 0) (bvlshr xu (of_int1 32)))))

;; Assume
(assert (= (hi xu) xhi))

;; Assume
(assert (dynamic_invariant3 xhi true false true true))

;; H
(assert (dynamic_invariant3 (lo xu) true false true true))

;; H
(assert (= (lo xu) ((_ extract 31 0) (bvand xu #x00000000FFFFFFFF))))

;; Assume
(assert (= (lo xu) xlo))

;; Assume
(assert (dynamic_invariant3 xlo true false true true))

;; H
(assert (dynamic_invariant2 (oabs y) true false true true))

;; H
(assert
  (= (oabs y) (ite (= y (- 9223372036854775808))
                #x8000000000000000
                (of_int1 (abs1 y)))))

;; Assume
(assert (= (oabs y) yu))

;; Assume
(assert (dynamic_invariant2 yu true false true true))

;; H
(assert (hi__function_guard (hi yu) yu))

;; H
(assert (dynamic_invariant3 (hi yu) true false true true))

;; H
(assert (= (hi yu) ((_ extract 31 0) (bvlshr yu (of_int1 32)))))

;; Assume
(assert (= (hi yu) yhi))

;; Assume
(assert (dynamic_invariant3 yhi true false true true))

;; H
(assert (dynamic_invariant3 (lo yu) true false true true))

;; H
(assert (= (lo yu) ((_ extract 31 0) (bvand yu #x00000000FFFFFFFF))))

;; Assume
(assert (= (lo yu) ylo))

;; Assume
(assert (dynamic_invariant3 ylo true false true true))

;; H
(assert (dynamic_invariant2 (oabs z) true false true true))

;; H
(assert
  (= (oabs z) (ite (= z (- 9223372036854775808))
                #x8000000000000000
                (of_int1 (abs1 z)))))

(declare-const zu (_ BitVec 64))

;; H
(assert (= zu (oabs z)))

;; Assume
(assert (dynamic_invariant2 zu true false true true))

;; H
(assert (hi__function_guard (hi zu) zu))

;; H
(assert (dynamic_invariant3 (hi zu) true false true true))

;; H
(assert (= (hi zu) ((_ extract 31 0) (bvlshr zu (of_int1 32)))))

(declare-const zhi (_ BitVec 32))

;; H
(assert (= zhi (hi zu)))

;; Assume
(assert (dynamic_invariant3 zhi true false true true))

;; H
(assert (dynamic_invariant3 (lo zu) true false true true))

;; H
(assert (= (lo zu) ((_ extract 31 0) (bvand zu #x00000000FFFFFFFF))))

(declare-const zlo (_ BitVec 32))

;; H
(assert (= zlo (lo zu)))

;; Assume
(assert (dynamic_invariant3 zlo true false true true))

;; Assume
(assert true)

;; Assume
(assert (dynamic_invariant3 s1 false false true true))

;; Assume
(assert true)

;; Assume
(assert (dynamic_invariant3 s2 false false true true))

;; Assume
(assert true)

;; Assume
(assert (dynamic_invariant3 s3 false false true true))

;; Assume
(assert true)

;; Assume
(assert (dynamic_invariant2 qu false false true true))

;; Assume
(assert true)

;; Assume
(assert (dynamic_invariant2 ru false false true true))

;; Assume
(assert true)

;; Assume
(assert (dynamic_invariant3 mask false false true true))

;; Assume
(assert true)

;; Assume
(assert (dynamic_invariant scale false false true true))

;; Assume
(assert true)

;; Assume
(assert (dynamic_invariant shift false false true true))

;; Assume
(assert true)

;; Assume
(assert (dynamic_invariant2 t1 false false true true))

;; Assume
(assert true)

;; Assume
(assert (dynamic_invariant2 t2 false false true true))

;; Assume
(assert true)

;; Assume
(assert (dynamic_invariant2 t3 false false true true))

;; H
(assert true)

;; H
(assert (= (big y) y))

;; Assert
(assert true)

;; H
(assert true)

;; H
(assert (= (big x) x))

;; Assert
(assert true)

;; Assume
(assert (= (abs1 (* (big x) (big y))) mult))

;; Assume
(assert true)

;; Assume
(assert true)

;; Assume
(assert true)

;; Assume
(assert true)

;; Assume
(assert true)

;; Assume
(assert true)

;; Assume
(assert true)

;; Assume
(assert true)

;; Assume
(assert (dynamic_invariant inter false false true true))

(declare-const spark__branch Bool)

;; H
(assert (= spark__branch (ite (= z 0) true false)))

;; H
(assert (not (= spark__branch true)))

;; H
(assert true)

;; H
(assert (= (big z) z))

;; Assert
(assert true)

;; H
(assert true)

;; H
(assert (= (big y) y))

;; Assert
(assert true)

;; H
(assert true)

;; H
(assert (= (big x) x))

;; Assert
(assert true)

(declare-const quot1 Int)

;; H
(assert (= quot1 (div1 (* (big x) (big y)) (big z))))

;; H
(assert true)

;; H
(assert (= (big z) z))

;; Assert
(assert true)

;; H
(assert true)

;; H
(assert (= (big y) y))

;; Assert
(assert true)

;; H
(assert true)

;; H
(assert (= (big x) x))

;; Assert
(assert true)

(declare-const big_r1 Int)

;; H
(assert (= big_r1 (mod1 (* (big x) (big y)) (big z))))

(declare-const spark__branch1 Bool)

(declare-const big_q1 Int)

;; H
(assert (= spark__branch1 round))

;; H
(assert
  (ite (= spark__branch1 true)
    (let ((o z))
      (let ((o1 (big o)))
        (and
          (= o1 o)
          (let ((o2 y))
            (let ((o3 (big o2)))
              (and
                (= o3 o2)
                (let ((o4 x))
                  (let ((o5 (big o4)))
                    (and
                      (= o5 o4)
                      (let ((o6 (* o5 o3)))
                        (let ((o7 (round_quotient o6 o1 quot1 big_r1)))
                          (and
                            (= o7 (ite (< (div1
                                            (- (abs1 o1) (big 1))
                                            (big 2)) (abs1 big_r1))
                                    (ite (= (same_sign o6 o1) true)
                                      (+ quot1 (big 1))
                                      (- quot1 (big 1)))
                                    quot1))
                            (= big_q1 o7)))))))))))))
    (= big_q1 quot1)))

;; H
(assert true)

;; H
(assert (= (big y) y))

;; H
(assert true)

;; H
(assert (= (big x) x))

;; Ensures
(assert (= (abs1 (* (big x) (big y))) (* (abs1 (big x)) (abs1 (big y)))))

;; Ensures
(assert (= (abs1 (big x)) (big1 (oabs x))))

;; Ensures
(assert (= (abs1 (big y)) (big1 (oabs y))))

;; Ensures
(assert
  (= mult (+ (+ (+ (* (* big_2xxsingle big_2xxsingle) (big1
                                                        (omultiply xhi yhi))) (* 
  big_2xxsingle (big1 (omultiply xhi ylo)))) (* big_2xxsingle (big1
                                                                (omultiply
                                                                  xlo
                                                                  yhi)))) 
  (big1
    (omultiply xlo ylo)))))

;; H
(assert (dynamic_invariant2 (omultiply xlo ylo) true false true true))

;; H
(assert
  (= (omultiply xlo ylo) (bvmul ((_ zero_extend 32) xlo) ((_ zero_extend 32) 
  ylo))))

(declare-const t11 (_ BitVec 64))

;; H
(assert (= t11 (omultiply xlo ylo)))

;; H
(assert (dynamic_invariant3 (lo t11) true false true true))

;; H
(assert (= (lo t11) ((_ extract 31 0) (bvand t11 #x00000000FFFFFFFF))))

(declare-const o uns32)

;; Ensures
(assert (= (to_rep1 o) (lo t11)))

(declare-const d1 (Array Int uns32__init_wrapper))

;; H
(assert (= d1 (store d 4 (uns32__init_wrapperqtmk o true))))

;; H
(assert (hi__function_guard (hi t11) t11))

;; H
(assert (dynamic_invariant3 (hi t11) true false true true))

;; H
(assert (= (hi t11) ((_ extract 31 0) (bvlshr t11 (of_int1 32)))))

(declare-const o1 uns32)

;; Ensures
(assert (= (to_rep1 o1) (hi t11)))

(declare-const d2 (Array Int uns32__init_wrapper))

;; H
(assert (= d2 (store d1 3 (uns32__init_wrapperqtmk o1 true))))

;; Assert
(assert (= (us_attr__init (select d2 4)) true))

;; Assert
(assert (= (us_attr__init (select d2 3)) true))

;; Ensures
(assert
  (= (big1 t11) (+ (* big_2xxsingle (big1
                                      ((_ zero_extend 32) (to_rep1
                                                            (rec__value
                                                              (select 
                                                              d2 3)))))) 
  (big1
    ((_ zero_extend 32) (to_rep1 (rec__value (select d2 4))))))))

(declare-const spark__branch2 Bool)

(declare-const d3 (Array Int uns32__init_wrapper))

(declare-const t12 (_ BitVec 64))

(declare-const t21 (_ BitVec 64))

(declare-const t31 (_ BitVec 64))

(declare-const spark__branch3 Bool)

;; H
(assert (= spark__branch3 (ite (not (= yhi #x00000000)) true false)))

(declare-const d4 (Array Int uns32__init_wrapper))

(declare-const o2 uns32)

(declare-const o3 uns32)

(declare-const o4 (_ BitVec 32))

(declare-const o5 (_ BitVec 32))

(declare-const o6 uns32)

(declare-const d5 (Array Int uns32__init_wrapper))

(declare-const o7 uns32)

(declare-const t13 (_ BitVec 64))

(declare-const o8 (_ BitVec 32))

(declare-const t22 (_ BitVec 64))

(declare-const o9 (_ BitVec 32))

(declare-const o10 uns32)

(declare-const d6 (Array Int uns32__init_wrapper))

(declare-const o11 uns32)

(declare-const d7 (Array Int uns32__init_wrapper))

(declare-const o12 uns32)

(declare-const t14 (_ BitVec 64))

(declare-const o13 (_ BitVec 32))

(declare-const t23 (_ BitVec 64))

(declare-const o14 uns32)

(declare-const d8 (Array Int uns32__init_wrapper))

(declare-const o15 (_ BitVec 32))

(declare-const t32 (_ BitVec 64))

(declare-const o16 uns32)

(declare-const d9 (Array Int uns32__init_wrapper))

(declare-const o17 (_ BitVec 32))

(declare-const o18 uns32)

;; H
(assert
  (and
    (hi__function_guard (hi t13) t13)
    (and
      (hi__function_guard (hi t22) t22)
      (and
        (hi__function_guard (hi t13) t13)
        (and
          (hi__function_guard (hi t22) t22)
          (and
            (hi__function_guard (hi t21) t21)
            (and
              (hi__function_guard (hi t12) t12)
              (and
                (hi__function_guard (hi t21) t21)
                (and
                  (hi__function_guard (hi t12) t12)
                  (and
                    (hi__function_guard (hi t12) t12)
                    (and
                      (hi__function_guard (hi t21) t21)
                      (and
                        (hi__function_guard (hi t12) t12)
                        (and
                          (hi__function_guard (hi t21) t21)
                          (ite (= spark__branch3 true)
                            (let ((o19 yhi))
                              (let ((o20 xlo))
                                (let ((o21 (omultiply o20 o19)))
                                  (and
                                    (and
                                      (dynamic_invariant2
                                        o21
                                        true
                                        false
                                        true
                                        true)
                                      (= o21 (bvmul ((_ zero_extend 32) o20) ((_ zero_extend 32) o19))))
                                    (and
                                      (= t13 o21)
                                      (let ((o22 (lo t13)))
                                        (and
                                          (and
                                            (dynamic_invariant3
                                              o22
                                              true
                                              false
                                              true
                                              true)
                                            (= o22 ((_ extract 31 0) (bvand 
                                            t13 #x00000000FFFFFFFF))))
                                          (let ((o23 (hi t13)))
                                            (and
                                              (and
                                                (hi__function_guard o23 t13)
                                                (and
                                                  (dynamic_invariant3
                                                    o23
                                                    true
                                                    false
                                                    true
                                                    true)
                                                  (= o23 ((_ extract 31 0) (bvlshr 
                                                  t13 (of_int1 32))))))
                                              (and
                                                (= (big1 t13) (+ (* big_2xxsingle 
                                                (big1
                                                  ((_ zero_extend 32) o23))) 
                                                (big1
                                                  ((_ zero_extend 32) o22))))
                                                (let ((o24 (lo t13)))
                                                  (and
                                                    (and
                                                      (dynamic_invariant3
                                                        o24
                                                        true
                                                        false
                                                        true
                                                        true)
                                                      (= o24 ((_ extract 31 0) (bvand 
                                                      t13 #x00000000FFFFFFFF))))
                                                    (let ((temp___801 (select 
                                                      d2 3)))
                                                      (and
                                                        (= (us_attr__init
                                                             temp___801) true)
                                                        (and
                                                          (= (to_rep1
                                                               (rec__value
                                                                 temp___801)) 
                                                          o8)
                                                          (let ((o25 
                                                            (oadd
                                                              o8
                                                              o24)))
                                                            (and
                                                              (and
                                                                (dynamic_invariant2
                                                                  o25
                                                                  true
                                                                  false
                                                                  true
                                                                  true)
                                                                (= o25 (bvadd ((_ zero_extend 32) 
                                                                o8) ((_ zero_extend 32) o24))))
                                                              (and
                                                                (= t22 o25)
                                                                (let ((o26 
                                                                  (lo
                                                                    t13)))
                                                                  (and
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o26
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o26 ((_ extract 31 0) (bvand 
                                                                    t13 #x00000000FFFFFFFF))))
                                                                    (let ((o27 ((_ zero_extend 32) o26)))
                                                                    (let ((o28 
                                                                    (big1
                                                                    o27)))
                                                                    (and
                                                                    (= o28 (bv2nat64 o27))
                                                                    (let ((temp___803 (select 
                                                                    d2 3)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___803) true)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___803)) 
                                                                    o9)
                                                                    (let ((o29 ((_ zero_extend 32) 
                                                                    o9)))
                                                                    (let ((o30 
                                                                    (big1
                                                                    o29)))
                                                                    (and
                                                                    (= o30 (bv2nat64 o29))
                                                                    (let ((o31 
                                                                    big_2xxsingle))
                                                                    (and
                                                                    (= (* o31 (+ o30 o28)) (+ (* o31 o30) (* o31 o28)))
                                                                    (let ((o32 
                                                                    (lo
                                                                    t22)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o32
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o32 ((_ extract 31 0) (bvand 
                                                                    t22 #x00000000FFFFFFFF))))
                                                                    (let ((o33 
                                                                    (hi
                                                                    t22)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o33
                                                                    t22)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o33
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o33 ((_ extract 31 0) (bvlshr 
                                                                    t22 
                                                                    (of_int1
                                                                    32))))))
                                                                    (and
                                                                    (= 
                                                                    (big1
                                                                    t22) (+ (* 
                                                                    big_2xxsingle 
                                                                    (big1
                                                                    ((_ zero_extend 32) o33))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) o32))))
                                                                    (let ((o34 
                                                                    (lo
                                                                    t22)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o34
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o34 ((_ extract 31 0) (bvand 
                                                                    t22 #x00000000FFFFFFFF))))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o10) o34)
                                                                    (and
                                                                    (= 
                                                                    d6 (store 
                                                                    d2 3 
                                                                    (uns32__init_wrapperqtmk
                                                                    o10
                                                                    true)))
                                                                    (let ((o35 
                                                                    (hi
                                                                    t22)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o35
                                                                    t22)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o35
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o35 ((_ extract 31 0) (bvlshr 
                                                                    t22 
                                                                    (of_int1
                                                                    32))))))
                                                                    (let ((o36 
                                                                    (hi
                                                                    t13)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o36
                                                                    t13)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o36
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o36 ((_ extract 31 0) (bvlshr 
                                                                    t13 
                                                                    (of_int1
                                                                    32))))))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o11) (bvadd o36 o35))
                                                                    (and
                                                                    (= 
                                                                    d7 (store 
                                                                    d6 2 
                                                                    (uns32__init_wrapperqtmk
                                                                    o11
                                                                    true)))
                                                                    (and
                                                                    (= 
                                                                    (oadd1
                                                                    ((_ zero_extend 32) 
                                                                    (hi
                                                                    t13))
                                                                    (hi t22)) ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d7 2)))))
                                                                    (let ((o37 
                                                                    (hi
                                                                    t22)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o37
                                                                    t22)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o37
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o37 ((_ extract 31 0) (bvlshr 
                                                                    t22 
                                                                    (of_int1
                                                                    32))))))
                                                                    (let ((o38 
                                                                    (hi
                                                                    t13)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o38
                                                                    t13)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o38
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o38 ((_ extract 31 0) (bvlshr 
                                                                    t13 
                                                                    (of_int1
                                                                    32))))))
                                                                    (let ((o39 ((_ zero_extend 32) o38)))
                                                                    (and
                                                                    (= (+ 
                                                                    (big1
                                                                    o39) 
                                                                    (big1
                                                                    ((_ zero_extend 32) o37))) 
                                                                    (big1
                                                                    (bvadd o39 ((_ zero_extend 32) o37))))
                                                                    (and
                                                                    (= (+ 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (hi
                                                                    t13))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (hi
                                                                    t22)))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d7 2))))))
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    spark__branch2 
                                                                    (ite 
                                                                    (not
                                                                    (= 
                                                                    xhi #x00000000))
                                                                    true
                                                                    false))
                                                                    (ite (= 
                                                                    spark__branch2 true)
                                                                    (let ((o40 
                                                                    ylo))
                                                                    (let ((o41 
                                                                    xhi))
                                                                    (let ((o42 
                                                                    (omultiply
                                                                    o41
                                                                    o40)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant2
                                                                    o42
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o42 (bvmul ((_ zero_extend 32) o41) ((_ zero_extend 32) o40))))
                                                                    (and
                                                                    (= 
                                                                    t14 o42)
                                                                    (let ((o43 
                                                                    (lo
                                                                    t14)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o43
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o43 ((_ extract 31 0) (bvand 
                                                                    t14 #x00000000FFFFFFFF))))
                                                                    (let ((o44 
                                                                    (hi
                                                                    t14)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o44
                                                                    t14)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o44
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o44 ((_ extract 31 0) (bvlshr 
                                                                    t14 
                                                                    (of_int1
                                                                    32))))))
                                                                    (and
                                                                    (= 
                                                                    (big1
                                                                    t14) (+ (* 
                                                                    big_2xxsingle 
                                                                    (big1
                                                                    ((_ zero_extend 32) o44))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) o43))))
                                                                    (let ((o45 
                                                                    (lo
                                                                    t14)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o45
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o45 ((_ extract 31 0) (bvand 
                                                                    t14 #x00000000FFFFFFFF))))
                                                                    (let ((temp___823 (select 
                                                                    d7 3)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___823) true)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___823)) 
                                                                    o13)
                                                                    (let ((o46 
                                                                    (oadd
                                                                    o13
                                                                    o45)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant2
                                                                    o46
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o46 (bvadd ((_ zero_extend 32) 
                                                                    o13) ((_ zero_extend 32) o45))))
                                                                    (and
                                                                    (= 
                                                                    t23 o46)
                                                                    (let ((o47 
                                                                    (lo
                                                                    t23)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o47
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o47 ((_ extract 31 0) (bvand 
                                                                    t23 #x00000000FFFFFFFF))))
                                                                    (let ((o48 
                                                                    (hi
                                                                    t23)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o48
                                                                    t23)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o48
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o48 ((_ extract 31 0) (bvlshr 
                                                                    t23 
                                                                    (of_int1
                                                                    32))))))
                                                                    (and
                                                                    (= 
                                                                    (big1
                                                                    t23) (+ (* 
                                                                    big_2xxsingle 
                                                                    (big1
                                                                    ((_ zero_extend 32) o48))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) o47))))
                                                                    (let ((o49 
                                                                    (lo
                                                                    t23)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o49
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o49 ((_ extract 31 0) (bvand 
                                                                    t23 #x00000000FFFFFFFF))))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o14) o49)
                                                                    (and
                                                                    (= 
                                                                    d8 (store 
                                                                    d7 3 
                                                                    (uns32__init_wrapperqtmk
                                                                    o14
                                                                    true)))
                                                                    (let ((o50 
                                                                    (hi
                                                                    t14)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o50
                                                                    t14)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o50
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o50 ((_ extract 31 0) (bvlshr 
                                                                    t14 
                                                                    (of_int1
                                                                    32))))))
                                                                    (let ((temp___827 (select 
                                                                    d8 2)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___827) true)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___827)) 
                                                                    o15)
                                                                    (let ((o51 
                                                                    (oadd
                                                                    o15
                                                                    o50)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant2
                                                                    o51
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o51 (bvadd ((_ zero_extend 32) 
                                                                    o15) ((_ zero_extend 32) o50))))
                                                                    (and
                                                                    (= 
                                                                    t32 o51)
                                                                    (let ((o52 
                                                                    (hi
                                                                    t23)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o52
                                                                    t23)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o52
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o52 ((_ extract 31 0) (bvlshr 
                                                                    t23 
                                                                    (of_int1
                                                                    32))))))
                                                                    (and
                                                                    (= (+ 
                                                                    (big1
                                                                    t32) 
                                                                    (big1
                                                                    ((_ zero_extend 32) o52))) 
                                                                    (big1
                                                                    (bvadd 
                                                                    t32 ((_ zero_extend 32) o52))))
                                                                    (let ((o53 
                                                                    (hi
                                                                    t23)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o53
                                                                    t23)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o53
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o53 ((_ extract 31 0) (bvlshr 
                                                                    t23 
                                                                    (of_int1
                                                                    32))))))
                                                                    (let ((o54 
                                                                    (oadd1
                                                                    t32
                                                                    o53)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant2
                                                                    o54
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o54 (bvadd 
                                                                    t32 ((_ zero_extend 32) o53))))
                                                                    (and
                                                                    (= 
                                                                    t31 o54)
                                                                    (let ((o55 
                                                                    yhi))
                                                                    (let ((o56 
                                                                    xhi))
                                                                    (let ((o57 
                                                                    (omultiply
                                                                    o56
                                                                    o55)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant2
                                                                    o57
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o57 (bvmul ((_ zero_extend 32) o56) ((_ zero_extend 32) o55))))
                                                                    (and
                                                                    (= 
                                                                    t21 o57)
                                                                    (let ((o58 
                                                                    (lo
                                                                    t21)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o58
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o58 ((_ extract 31 0) (bvand 
                                                                    t21 #x00000000FFFFFFFF))))
                                                                    (let ((o59 
                                                                    (hi
                                                                    t21)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o59
                                                                    t21)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o59
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o59 ((_ extract 31 0) (bvlshr 
                                                                    t21 
                                                                    (of_int1
                                                                    32))))))
                                                                    (and
                                                                    (= 
                                                                    (big1
                                                                    t21) (+ (* 
                                                                    big_2xxsingle 
                                                                    (big1
                                                                    ((_ zero_extend 32) o59))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) o58))))
                                                                    (let ((o60 
                                                                    (lo
                                                                    t21)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o60
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o60 ((_ extract 31 0) (bvand 
                                                                    t21 #x00000000FFFFFFFF))))
                                                                    (and
                                                                    (= (+ 
                                                                    (big1
                                                                    t31) 
                                                                    (big1
                                                                    ((_ zero_extend 32) o60))) 
                                                                    (big1
                                                                    (bvadd 
                                                                    t31 ((_ zero_extend 32) o60))))
                                                                    (let ((o61 
                                                                    (lo
                                                                    t21)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o61
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o61 ((_ extract 31 0) (bvand 
                                                                    t21 #x00000000FFFFFFFF))))
                                                                    (let ((o62 
                                                                    (oadd1
                                                                    t31
                                                                    o61)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant2
                                                                    o62
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o62 (bvadd 
                                                                    t31 ((_ zero_extend 32) o61))))
                                                                    (and
                                                                    (= 
                                                                    t12 o62)
                                                                    (let ((o63 
                                                                    (lo
                                                                    t12)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o63
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o63 ((_ extract 31 0) (bvand 
                                                                    t12 #x00000000FFFFFFFF))))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o16) o63)
                                                                    (and
                                                                    (= 
                                                                    d9 (store 
                                                                    d8 2 
                                                                    (uns32__init_wrapperqtmk
                                                                    o16
                                                                    true)))
                                                                    (let ((temp___833 (select 
                                                                    d9 2)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___833) true)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___833)) 
                                                                    o17)
                                                                    (let ((o64 
                                                                    (hi
                                                                    t12)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o64
                                                                    t12)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o64
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o64 ((_ extract 31 0) (bvlshr 
                                                                    t12 
                                                                    (of_int1
                                                                    32))))))
                                                                    (and
                                                                    (= 
                                                                    (big1
                                                                    t12) (+ (* 
                                                                    big_2xxsingle 
                                                                    (big1
                                                                    ((_ zero_extend 32) o64))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    o17))))
                                                                    (let ((o65 
                                                                    (hi
                                                                    t12)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o65
                                                                    t12)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o65
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o65 ((_ extract 31 0) (bvlshr 
                                                                    t12 
                                                                    (of_int1
                                                                    32))))))
                                                                    (let ((o66 
                                                                    (hi
                                                                    t21)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o66
                                                                    t21)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o66
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o66 ((_ extract 31 0) (bvlshr 
                                                                    t21 
                                                                    (of_int1
                                                                    32))))))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o18) (bvadd o66 o65))
                                                                    (and
                                                                    (= 
                                                                    d3 (store 
                                                                    d9 1 
                                                                    (uns32__init_wrapperqtmk
                                                                    o18
                                                                    true)))
                                                                    (and
                                                                    (= 
                                                                    (oadd1
                                                                    ((_ zero_extend 32) 
                                                                    (hi
                                                                    t21))
                                                                    (hi t12)) ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d3 1)))))
                                                                    (let ((o67 
                                                                    (hi
                                                                    t12)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o67
                                                                    t12)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o67
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o67 ((_ extract 31 0) (bvlshr 
                                                                    t12 
                                                                    (of_int1
                                                                    32))))))
                                                                    (let ((o68 
                                                                    (hi
                                                                    t21)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o68
                                                                    t21)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o68
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o68 ((_ extract 31 0) (bvlshr 
                                                                    t21 
                                                                    (of_int1
                                                                    32))))))
                                                                    (let ((o69 ((_ zero_extend 32) o68)))
                                                                    (and
                                                                    (= (+ 
                                                                    (big1
                                                                    o69) 
                                                                    (big1
                                                                    ((_ zero_extend 32) o67))) 
                                                                    (big1
                                                                    (bvadd o69 ((_ zero_extend 32) o67))))
                                                                    (and
                                                                    (= (+ 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (hi
                                                                    t21))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (hi
                                                                    t12)))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d3 1))))))
                                                                    (= 
                                                                    mult (+ (+ (+ (* (* (* 
                                                                    big_2xxsingle 
                                                                    big_2xxsingle) 
                                                                    big_2xxsingle) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d3 1)))))) (* (* 
                                                                    big_2xxsingle 
                                                                    big_2xxsingle) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d3 2))))))) (* 
                                                                    big_2xxsingle 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d3 3))))))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d3 4))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o12) #x00000000)
                                                                    (= 
                                                                    d3 (store 
                                                                    d7 1 
                                                                    (uns32__init_wrapperqtmk
                                                                    o12
                                                                    true))))
                                                                    (= 
                                                                    t12 
                                                                    t13))
                                                                    (= 
                                                                    t21 
                                                                    t22))
                                                                    (= 
                                                                    t31 
                                                                    t3))))
                                                                    (= 
                                                                    mult (+ (+ (+ (* (* (* 
                                                                    big_2xxsingle 
                                                                    big_2xxsingle) 
                                                                    big_2xxsingle) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d3 1)))))) (* (* 
                                                                    big_2xxsingle 
                                                                    big_2xxsingle) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d3 2))))))) (* 
                                                                    big_2xxsingle 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d3 3))))))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d3 4))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                            (and
                              (and
                                (and
                                  (= spark__branch2 (ite (not
                                                           (= xhi #x00000000))
                                                      true
                                                      false))
                                  (ite (= spark__branch2 true)
                                    (let ((o19 ylo))
                                      (let ((o20 xhi))
                                        (let ((o21 (omultiply o20 o19)))
                                          (and
                                            (and
                                              (dynamic_invariant2
                                                o21
                                                true
                                                false
                                                true
                                                true)
                                              (= o21 (bvmul ((_ zero_extend 32) o20) ((_ zero_extend 32) o19))))
                                            (and
                                              (= t12 o21)
                                              (let ((o22 (lo t12)))
                                                (and
                                                  (and
                                                    (dynamic_invariant3
                                                      o22
                                                      true
                                                      false
                                                      true
                                                      true)
                                                    (= o22 ((_ extract 31 0) (bvand 
                                                    t12 #x00000000FFFFFFFF))))
                                                  (let ((o23 (hi t12)))
                                                    (and
                                                      (and
                                                        (hi__function_guard
                                                          o23
                                                          t12)
                                                        (and
                                                          (dynamic_invariant3
                                                            o23
                                                            true
                                                            false
                                                            true
                                                            true)
                                                          (= o23 ((_ extract 31 0) (bvlshr 
                                                          t12 (of_int1 32))))))
                                                      (and
                                                        (= (big1 t12) (+ (* 
                                                        big_2xxsingle 
                                                        (big1
                                                          ((_ zero_extend 32) o23))) 
                                                        (big1
                                                          ((_ zero_extend 32) o22))))
                                                        (let ((o24 (lo t12)))
                                                          (and
                                                            (and
                                                              (dynamic_invariant3
                                                                o24
                                                                true
                                                                false
                                                                true
                                                                true)
                                                              (= o24 ((_ extract 31 0) (bvand 
                                                              t12 #x00000000FFFFFFFF))))
                                                            (let ((temp___913 (select 
                                                              d2 3)))
                                                              (and
                                                                (= (us_attr__init
                                                                    temp___913) true)
                                                                (and
                                                                  (= 
                                                                  (to_rep1
                                                                    (rec__value
                                                                    temp___913)) 
                                                                  o4)
                                                                  (let ((o25 
                                                                    (oadd
                                                                    o4
                                                                    o24)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant2
                                                                    o25
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o25 (bvadd ((_ zero_extend 32) 
                                                                    o4) ((_ zero_extend 32) o24))))
                                                                    (and
                                                                    (= 
                                                                    t21 o25)
                                                                    (let ((o26 
                                                                    (lo
                                                                    t12)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o26
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o26 ((_ extract 31 0) (bvand 
                                                                    t12 #x00000000FFFFFFFF))))
                                                                    (let ((o27 ((_ zero_extend 32) o26)))
                                                                    (let ((o28 
                                                                    (big1
                                                                    o27)))
                                                                    (and
                                                                    (= o28 (bv2nat64 o27))
                                                                    (let ((temp___915 (select 
                                                                    d2 3)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___915) true)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___915)) 
                                                                    o5)
                                                                    (let ((o29 ((_ zero_extend 32) 
                                                                    o5)))
                                                                    (let ((o30 
                                                                    (big1
                                                                    o29)))
                                                                    (and
                                                                    (= o30 (bv2nat64 o29))
                                                                    (let ((o31 
                                                                    big_2xxsingle))
                                                                    (and
                                                                    (= (* o31 (+ o30 o28)) (+ (* o31 o30) (* o31 o28)))
                                                                    (let ((o32 
                                                                    (lo
                                                                    t21)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o32
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o32 ((_ extract 31 0) (bvand 
                                                                    t21 #x00000000FFFFFFFF))))
                                                                    (let ((o33 
                                                                    (hi
                                                                    t21)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o33
                                                                    t21)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o33
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o33 ((_ extract 31 0) (bvlshr 
                                                                    t21 
                                                                    (of_int1
                                                                    32))))))
                                                                    (and
                                                                    (= 
                                                                    (big1
                                                                    t21) (+ (* 
                                                                    big_2xxsingle 
                                                                    (big1
                                                                    ((_ zero_extend 32) o33))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) o32))))
                                                                    (let ((o34 
                                                                    (lo
                                                                    t21)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o34
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o34 ((_ extract 31 0) (bvand 
                                                                    t21 #x00000000FFFFFFFF))))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o6) o34)
                                                                    (and
                                                                    (= 
                                                                    d5 (store 
                                                                    d2 3 
                                                                    (uns32__init_wrapperqtmk
                                                                    o6
                                                                    true)))
                                                                    (let ((o35 
                                                                    (hi
                                                                    t21)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o35
                                                                    t21)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o35
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o35 ((_ extract 31 0) (bvlshr 
                                                                    t21 
                                                                    (of_int1
                                                                    32))))))
                                                                    (let ((o36 
                                                                    (hi
                                                                    t12)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o36
                                                                    t12)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o36
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o36 ((_ extract 31 0) (bvlshr 
                                                                    t12 
                                                                    (of_int1
                                                                    32))))))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o7) (bvadd o36 o35))
                                                                    (and
                                                                    (= 
                                                                    d4 (store 
                                                                    d5 2 
                                                                    (uns32__init_wrapperqtmk
                                                                    o7
                                                                    true)))
                                                                    (and
                                                                    (= 
                                                                    (oadd1
                                                                    ((_ zero_extend 32) 
                                                                    (hi
                                                                    t12))
                                                                    (hi t21)) ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d4 2)))))
                                                                    (let ((o37 
                                                                    (hi
                                                                    t21)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o37
                                                                    t21)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o37
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o37 ((_ extract 31 0) (bvlshr 
                                                                    t21 
                                                                    (of_int1
                                                                    32))))))
                                                                    (let ((o38 
                                                                    (hi
                                                                    t12)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o38
                                                                    t12)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o38
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o38 ((_ extract 31 0) (bvlshr 
                                                                    t12 
                                                                    (of_int1
                                                                    32))))))
                                                                    (let ((o39 ((_ zero_extend 32) o38)))
                                                                    (and
                                                                    (= (+ 
                                                                    (big1
                                                                    o39) 
                                                                    (big1
                                                                    ((_ zero_extend 32) o37))) 
                                                                    (big1
                                                                    (bvadd o39 ((_ zero_extend 32) o37))))
                                                                    (and
                                                                    (= (+ 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (hi
                                                                    t12))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (hi
                                                                    t21)))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d4 2))))))
                                                                    (= 
                                                                    mult (+ (+ (* (* 
                                                                    big_2xxsingle 
                                                                    big_2xxsingle) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d4 2)))))) (* 
                                                                    big_2xxsingle 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d4 3))))))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d4 4)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                    (and
                                      (and
                                        (and
                                          (= (to_rep1 o3) #x00000000)
                                          (and
                                            (= d4 (store d2 2 (uns32__init_wrapperqtmk
                                                                o3
                                                                true)))
                                            (= mult (+ (+ (* (* big_2xxsingle 
                                            big_2xxsingle) (big1
                                                             ((_ zero_extend 32) 
                                                             (to_rep1
                                                               (rec__value
                                                                 (select 
                                                                 d4 2)))))) (* 
                                            big_2xxsingle (big1
                                                            ((_ zero_extend 32) 
                                                            (to_rep1
                                                              (rec__value
                                                                (select 
                                                                d4 3))))))) 
                                            (big1
                                              ((_ zero_extend 32) (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d4 4)))))))))
                                        (= t12 t11))
                                      (= t21 t2))))
                                (and
                                  (= (to_rep1 o2) #x00000000)
                                  (= d3 (store d4 1 (uns32__init_wrapperqtmk
                                                      o2
                                                      true)))))
                              (= t31 t3))))))))))))))))

;; Assert
(assert
  (= mult (+ (+ (+ (* (* (* big_2xxsingle big_2xxsingle) big_2xxsingle) 
  (big1
    ((_ zero_extend 32) (to_rep1 (rec__value (select d3 1)))))) (* (* 
  big_2xxsingle big_2xxsingle) (big1
                                 ((_ zero_extend 32) (to_rep1
                                                       (rec__value
                                                         (select d3 2))))))) (* 
  big_2xxsingle (big1
                  ((_ zero_extend 32) (to_rep1 (rec__value (select d3 3))))))) 
  (big1
    ((_ zero_extend 32) (to_rep1 (rec__value (select d3 4))))))))

;; eq'result'unused'unused
(define-fun eqqtresultqtunusedqtunused () Bool
  (ite (= zhi #x00000000) true false))

(declare-const spark__branch4 Bool)

;; H
(assert (= spark__branch4 (ite (= zhi #x00000000) true false)))

;; H
(assert (not (= spark__branch4 true)))

;; Assert
(assert (= (us_attr__init (select d3 2)) true))

;; Assert
(assert (= (us_attr__init (select d3 1)) true))

;; H
(assert
  (oconcat__function_guard
    (oconcat
      (to_rep1 (rec__value (select d3 1)))
      (to_rep1 (rec__value (select d3 2))))
    (to_rep1 (rec__value (select d3 1)))
    (to_rep1 (rec__value (select d3 2)))))

;; H
(assert
  (dynamic_invariant2
    (oconcat
      (to_rep1 (rec__value (select d3 1)))
      (to_rep1 (rec__value (select d3 2))))
    true
    false
    true
    true))

;; H
(assert
  (= (oconcat
       (to_rep1 (rec__value (select d3 1)))
       (to_rep1 (rec__value (select d3 2)))) (bvor (bvshl ((_ zero_extend 32) 
  (to_rep1
    (rec__value (select d3 1)))) (of_int1 32)) ((_ zero_extend 32) (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d3 2)))))))

(declare-const spark__branch5 Bool)

;; H
(assert
  (= spark__branch5 (ite (bvuge (oconcat
                                  (to_rep1 (rec__value (select d3 1)))
                                  (to_rep1 (rec__value (select d3 2)))) 
                      zu)
                      true
                      false)))

;; H
(assert (not (= spark__branch5 true)))

(declare-const shift1 Int)

;; H
(assert (= shift1 32))

(declare-const mask1 (_ BitVec 32))

;; H
(assert (= mask1 #xFFFFFFFF))

(declare-const scale1 Int)

;; H
(assert (= scale1 0))

(declare-const inter1 Int)

;; H
(assert (= inter1 0))

;; Assert
(assert
  (and
    (big_2xx__function_guard (big_2xx scale1) scale1)
    (= (big_2xx scale1) 1)))

(declare-const spark__branch6 Bool)

(declare-const zu1 (_ BitVec 64))

(declare-const mask2 (_ BitVec 32))

(declare-const scale2 Int)

(declare-const shift2 Int)

;; H
(assert
  (and
    (hi__function_guard (hi zu1) zu1)
    (and
      (big_2xx__function_guard (big_2xx scale2) scale2)
      (and
        (forall ((zu2 (_ BitVec 64))) (hi__function_guard (hi zu2) zu2))
        (and
          (forall ((scale3 Int))
            (big_2xx__function_guard (big_2xx scale3) scale3))
          (and
            (hi__function_guard (hi zu1) zu1)
            (and
              (forall ((scale3 Int))
                (big_2xx__function_guard (big_2xx scale3) scale3))
              (and
                (big_2xx__function_guard (big_2xx shift2) shift2)
                (and
                  (big_2xx__function_guard (big_2xx shift2) shift2)
                  (and
                    (forall ((scale3 Int))
                      (big_2xx__function_guard (big_2xx scale3) scale3))
                    (and
                      (forall ((scale3 Int))
                        (big_2xx__function_guard
                          (big_2xx (+ shift2 scale3))
                          (+ shift2 scale3)))
                      (and
                        (big_2xx__function_guard (big_2xx scale2) scale2)
                        (and
                          (big_2xx__function_guard (big_2xx scale2) scale2)
                          (ite (< 1 shift1)
                            (exists ((zu2 (_ BitVec 64)) (mask3 (_ BitVec 32)) (scale3 Int) (shift3 Int) (inter2 Int))
                              (and
                                (and
                                  (<= scale3 (- 32 shift3))
                                  (and
                                    (not
                                      (= (bvand (hi zu2) mask3) #x00000000))
                                    (and
                                      (= mask3 (bvshl #xFFFFFFFF (of_int
                                                                   (- 32 shift3))))
                                      (and
                                        (= zu2 (bvshl (oabs z) (of_int1
                                                                 scale3)))
                                        (and
                                          (= (big1 zu2) (* (big1 (oabs z)) 
                                          (big_2xx
                                            scale3)))
                                          (and
                                            (and
                                              (<= 0 inter2)
                                              (<= inter2 (- log_single_size 1)))
                                            (and
                                              (= shift3 (power
                                                          2
                                                          (- log_single_size inter2)))
                                              (= (mod2 shift3 2) 0))))))))
                                (and
                                  (= (and (ite (and
                                                 (and
                                                   (and
                                                     (and
                                                       (dynamic_invariant
                                                         inter2
                                                         false
                                                         true
                                                         true
                                                         true)
                                                       (dynamic_invariant3
                                                         mask3
                                                         false
                                                         true
                                                         true
                                                         true))
                                                     (dynamic_invariant2
                                                       zu2
                                                       true
                                                       true
                                                       true
                                                       true))
                                                   (dynamic_invariant
                                                     scale3
                                                     false
                                                     true
                                                     true
                                                     true))
                                                 (dynamic_invariant
                                                   shift3
                                                   false
                                                   true
                                                   true
                                                   true))
                                            true
                                            false) (ite (< 1 shift3)
                                                     true
                                                     false)) true)
                                  (and
                                    (= shift3 shift_prev)
                                    (and
                                      (dynamic_invariant
                                        shift_prev
                                        true
                                        false
                                        true
                                        true)
                                      (and
                                        (= mask3 mask_prev)
                                        (and
                                          (dynamic_invariant3
                                            mask_prev
                                            true
                                            false
                                            true
                                            true)
                                          (and
                                            (= zu2 zu_prev)
                                            (and
                                              (dynamic_invariant2
                                                zu_prev
                                                true
                                                false
                                                true
                                                true)
                                              (and
                                                (and
                                                  (= (div1 shift3 2) 
                                                  (power
                                                    2
                                                    (- log_single_size (+ inter2 1))))
                                                  (or
                                                    (= shift3 2)
                                                    (= (mod2
                                                         (div1 shift3 2)
                                                         2) 0)))
                                                (and
                                                  (= shift2 (div1 shift3 2))
                                                  (let ((o19 (+ inter2 1)))
                                                    (and
                                                      (in_range1 o19)
                                                      (exists ((inter3 Int))
                                                        (and
                                                          (= inter3 o19)
                                                          (and
                                                            (= shift_prev (* 2 
                                                            shift2))
                                                            (and
                                                              (= mask2 (bvshl mask3 
                                                              (of_int
                                                                shift2)))
                                                              (let ((o20 (- 32 
                                                                shift_prev)))
                                                                (and
                                                                  (in_range2
                                                                    o20)
                                                                  (and
                                                                    (= (bvshl (bvshl #xFFFFFFFF 
                                                                    (of_int
                                                                    o20)) 
                                                                    (of_int
                                                                    shift2)) (bvshl #xFFFFFFFF 
                                                                    (of_int
                                                                    (+ o20 
                                                                    shift2))))
                                                                    (and
                                                                    (and
                                                                    (= 
                                                                    mask_prev (bvshl #xFFFFFFFF 
                                                                    (of_int
                                                                    (- 32 (* 2 
                                                                    shift2)))))
                                                                    (= 
                                                                    mask2 (bvshl #xFFFFFFFF 
                                                                    (of_int
                                                                    (- 32 
                                                                    shift2)))))
                                                                    (and
                                                                    (let ((o21 
                                                                    (hi
                                                                    zu2)))
                                                                    (and
                                                                    (and
                                                                    (hi__function_guard
                                                                    o21
                                                                    zu2)
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    o21
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o21 ((_ extract 31 0) (bvlshr zu2 
                                                                    (of_int1
                                                                    32))))))
                                                                    (and
                                                                    (= 
                                                                    spark__branch6 
                                                                    (ite (= (bvand o21 
                                                                    mask2) #x00000000)
                                                                    true
                                                                    false))
                                                                    (ite (= 
                                                                    spark__branch6 true)
                                                                    (and
                                                                    (= 
                                                                    zu1 (bvshl zu2 
                                                                    (of_int1
                                                                    shift2)))
                                                                    (and
                                                                    (not
                                                                    (= (bvand 
                                                                    (hi
                                                                    zu1) 
                                                                    mask2) #x00000000))
                                                                    (and
                                                                    (= 
                                                                    (big1
                                                                    zu_prev) (* 
                                                                    (big1
                                                                    (oabs z)) 
                                                                    (big_2xx
                                                                    scale3)))
                                                                    (and
                                                                    (= 
                                                                    (big1
                                                                    zu1) (* 
                                                                    (big_2xx
                                                                    shift2) 
                                                                    (big1
                                                                    zu_prev)))
                                                                    (let ((o22 
                                                                    (big_2xx
                                                                    scale3)))
                                                                    (and
                                                                    (and
                                                                    (big_2xx__function_guard
                                                                    o22
                                                                    scale3)
                                                                    (and
                                                                    (= o22 
                                                                    (big1
                                                                    (ite (< scale3 18446744073709551616)
                                                                    (bvshl #x0000000000000001 
                                                                    (of_int1
                                                                    scale3))
                                                                    #x0000000000000000)))
                                                                    (< 0 o22)))
                                                                    (let ((o23 
                                                                    z))
                                                                    (let ((o24 
                                                                    (oabs
                                                                    o23)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant2
                                                                    o24
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o24 
                                                                    (ite (= o23 (- 9223372036854775808))
                                                                    #x8000000000000000
                                                                    (of_int1
                                                                    (abs1
                                                                    o23)))))
                                                                    (let ((o25 
                                                                    (big1
                                                                    o24)))
                                                                    (and
                                                                    (= o25 (bv2nat64 o24))
                                                                    (let ((o26 
                                                                    zu_prev))
                                                                    (and
                                                                    (= 
                                                                    (big1
                                                                    o26) (bv2nat64 o26))
                                                                    (let ((o27 
                                                                    (big_2xx
                                                                    shift2)))
                                                                    (and
                                                                    (and
                                                                    (big_2xx__function_guard
                                                                    o27
                                                                    shift2)
                                                                    (and
                                                                    (= o27 
                                                                    (big1
                                                                    (ite (< 
                                                                    shift2 18446744073709551616)
                                                                    (bvshl #x0000000000000001 
                                                                    (of_int1
                                                                    shift2))
                                                                    #x0000000000000000)))
                                                                    (< 0 o27)))
                                                                    (let ((o28 
                                                                    (big1
                                                                    zu1)))
                                                                    (and
                                                                    (= o28 (bv2nat64 
                                                                    zu1))
                                                                    (and
                                                                    (= o28 (+ (* o27 (* o25 o22)) 0))
                                                                    (and
                                                                    (= (* 
                                                                    (big_2xx
                                                                    shift2) 
                                                                    (big_2xx
                                                                    scale3)) 
                                                                    (ite (= (+ 
                                                                    shift2 scale3) 64)
                                                                    big_2xxdouble
                                                                    (big_2xx
                                                                    (+ 
                                                                    shift2 scale3))))
                                                                    (let ((o29 (+ 
                                                                    shift2 scale3)))
                                                                    (and
                                                                    (in_range1
                                                                    o29)
                                                                    (let ((o30 
                                                                    (big_2xx
                                                                    o29)))
                                                                    (and
                                                                    (and
                                                                    (big_2xx__function_guard
                                                                    o30
                                                                    o29)
                                                                    (and
                                                                    (= o30 
                                                                    (big1
                                                                    (ite (< o29 18446744073709551616)
                                                                    (bvshl #x0000000000000001 
                                                                    (of_int1
                                                                    o29))
                                                                    #x0000000000000000)))
                                                                    (< 0 o30)))
                                                                    (let ((o31 
                                                                    (big_2xx
                                                                    scale3)))
                                                                    (and
                                                                    (and
                                                                    (big_2xx__function_guard
                                                                    o31
                                                                    scale3)
                                                                    (and
                                                                    (= o31 
                                                                    (big1
                                                                    (ite (< scale3 18446744073709551616)
                                                                    (bvshl #x0000000000000001 
                                                                    (of_int1
                                                                    scale3))
                                                                    #x0000000000000000)))
                                                                    (< 0 o31)))
                                                                    (let ((o32 
                                                                    (big_2xx
                                                                    shift2)))
                                                                    (and
                                                                    (and
                                                                    (big_2xx__function_guard
                                                                    o32
                                                                    shift2)
                                                                    (and
                                                                    (= o32 
                                                                    (big1
                                                                    (ite (< 
                                                                    shift2 18446744073709551616)
                                                                    (bvshl #x0000000000000001 
                                                                    (of_int1
                                                                    shift2))
                                                                    #x0000000000000000)))
                                                                    (< 0 o32)))
                                                                    (let ((o33 
                                                                    z))
                                                                    (let ((o34 
                                                                    (oabs
                                                                    o33)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant2
                                                                    o34
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o34 
                                                                    (ite (= o33 (- 9223372036854775808))
                                                                    #x8000000000000000
                                                                    (of_int1
                                                                    (abs1
                                                                    o33)))))
                                                                    (let ((o35 
                                                                    (big1
                                                                    o34)))
                                                                    (and
                                                                    (= o35 (bv2nat64 o34))
                                                                    (let ((o36 
                                                                    (big1
                                                                    zu1)))
                                                                    (and
                                                                    (= o36 (bv2nat64 
                                                                    zu1))
                                                                    (and
                                                                    (= o36 (+ (* o35 o30) 0))
                                                                    (let ((o37 
                                                                    z))
                                                                    (let ((o38 
                                                                    (oabs
                                                                    o37)))
                                                                    (and
                                                                    (and
                                                                    (dynamic_invariant2
                                                                    o38
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (= o38 
                                                                    (ite (= o37 (- 9223372036854775808))
                                                                    #x8000000000000000
                                                                    (of_int1
                                                                    (abs1
                                                                    o37)))))
                                                                    (and
                                                                    (= (bvshl (bvshl o38 
                                                                    (of_int1
                                                                    scale3)) 
                                                                    (of_int1
                                                                    shift2)) (bvshl o38 
                                                                    (of_int1
                                                                    (+ scale3 
                                                                    shift2))))
                                                                    (let ((o39 (+ scale3 
                                                                    shift2)))
                                                                    (and
                                                                    (in_range1
                                                                    o39)
                                                                    (and
                                                                    (= 
                                                                    scale2 o39)
                                                                    (and
                                                                    (= 
                                                                    zu1 (bvshl 
                                                                    (oabs
                                                                    z) 
                                                                    (of_int1
                                                                    scale2)))
                                                                    (= 
                                                                    (big1
                                                                    zu1) (* 
                                                                    (big1
                                                                    (oabs z)) 
                                                                    (big_2xx
                                                                    scale2))))))))))))))))))))))))))))))))))))))))))))))
                                                                    (and
                                                                    (= 
                                                                    zu1 zu2)
                                                                    (= 
                                                                    scale2 scale3))))))
                                                                    (and
                                                                    (= 
                                                                    (big1
                                                                    zu1) (* 
                                                                    (big1
                                                                    (oabs z)) 
                                                                    (big_2xx
                                                                    scale2)))
                                                                    (not
                                                                    (< 1 
                                                                    shift2)))))))))))))))))))))))))
                            (and
                              (and
                                (and
                                  (and
                                    (= spark__branch6 spark__branch5)
                                    (= zu1 zu))
                                  (= mask2 mask1))
                                (= scale2 scale1))
                              (= shift2 shift1))))))))))))))))

;; H
(assert (hi__function_guard (hi zu1) zu1))

;; H
(assert (dynamic_invariant3 (hi zu1) true false true true))

;; H
(assert (= (hi zu1) ((_ extract 31 0) (bvlshr zu1 (of_int1 32)))))

(declare-const zhi1 (_ BitVec 32))

;; H
(assert (= zhi1 (hi zu1)))

;; H
(assert (dynamic_invariant3 (lo zu1) true false true true))

;; H
(assert (= (lo zu1) ((_ extract 31 0) (bvand zu1 #x00000000FFFFFFFF))))

(declare-const zlo1 (_ BitVec 32))

;; H
(assert (= zlo1 (lo zu1)))

;; Assert
(assert (= shift2 1))

;; Assert
(assert (= mask2 #x80000000))

;; Assert
(assert (not (= (bvand zhi1 mask2) #x00000000)))

;; Assert
(assert (bvuge zhi1 #x80000000))

;; Assert
(assert
  (and
    (big_2xx__function_guard (big_2xx scale2) scale2)
    (= (big1 zu1) (* (big1 (oabs z)) (big_2xx scale2)))))

;; H
(assert (dynamic_invariant2 (oabs z) true false true true))

;; H
(assert
  (= (oabs z) (ite (= z (- 9223372036854775808))
                #x8000000000000000
                (of_int1 (abs1 z)))))

;; Assert
(assert (= (us_attr__init (select d3 2)) true))

;; Assert
(assert (= (us_attr__init (select d3 1)) true))

;; H
(assert
  (oconcat__function_guard
    (oconcat
      (to_rep1 (rec__value (select d3 1)))
      (to_rep1 (rec__value (select d3 2))))
    (to_rep1 (rec__value (select d3 1)))
    (to_rep1 (rec__value (select d3 2)))))

;; H
(assert
  (dynamic_invariant2
    (oconcat
      (to_rep1 (rec__value (select d3 1)))
      (to_rep1 (rec__value (select d3 2))))
    true
    false
    true
    true))

;; H
(assert
  (= (oconcat
       (to_rep1 (rec__value (select d3 1)))
       (to_rep1 (rec__value (select d3 2)))) (bvor (bvshl ((_ zero_extend 32) 
  (to_rep1
    (rec__value (select d3 1)))) (of_int1 32)) ((_ zero_extend 32) (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d3 2)))))))

;; Ensures
(assert
  (< (big1
       (oconcat
         (to_rep1 (rec__value (select d3 1)))
         (to_rep1 (rec__value (select d3 2))))) (big1 (oabs z))))

;; H
(assert (big_2xx__function_guard (big_2xx scale2) scale2))

;; H
(assert true)

;; H
(assert
  (= (big_2xx scale2) (big1
                        (ite (< scale2 18446744073709551616)
                          (bvshl #x0000000000000001 (of_int1 scale2))
                          #x0000000000000000))))

;; H
(assert (< 0 (big_2xx scale2)))

;; H
(assert (dynamic_invariant2 (oabs z) true false true true))

;; H
(assert
  (= (oabs z) (ite (= z (- 9223372036854775808))
                #x8000000000000000
                (of_int1 (abs1 z)))))

;; H
(assert true)

;; H
(assert (= (big1 (oabs z)) (bv2nat64 (oabs z))))

;; Assert
(assert (= (us_attr__init (select d3 2)) true))

;; Assert
(assert (= (us_attr__init (select d3 1)) true))

;; H
(assert
  (oconcat__function_guard
    (oconcat
      (to_rep1 (rec__value (select d3 1)))
      (to_rep1 (rec__value (select d3 2))))
    (to_rep1 (rec__value (select d3 1)))
    (to_rep1 (rec__value (select d3 2)))))

;; H
(assert
  (dynamic_invariant2
    (oconcat
      (to_rep1 (rec__value (select d3 1)))
      (to_rep1 (rec__value (select d3 2))))
    true
    false
    true
    true))

;; H
(assert
  (= (oconcat
       (to_rep1 (rec__value (select d3 1)))
       (to_rep1 (rec__value (select d3 2)))) (bvor (bvshl ((_ zero_extend 32) 
  (to_rep1
    (rec__value (select d3 1)))) (of_int1 32)) ((_ zero_extend 32) (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d3 2)))))))

;; H
(assert true)

;; H
(assert
  (= (big1
       (oconcat
         (to_rep1 (rec__value (select d3 1)))
         (to_rep1 (rec__value (select d3 2))))) (bv2nat64 (oconcat
                                                            (to_rep1
                                                              (rec__value
                                                                (select 
                                                                d3 1)))
                                                            (to_rep1
                                                              (rec__value
                                                                (select 
                                                                d3 2)))))))

;; Ensures
(assert
  (< (* (big1
          (oconcat
            (to_rep1 (rec__value (select d3 1)))
            (to_rep1 (rec__value (select d3 2))))) (big_2xx scale2)) 
  big_2xxdouble))

;; Assert
(assert (= (us_attr__init (select d3 2)) true))

;; Assert
(assert (= (us_attr__init (select d3 1)) true))

;; H
(assert
  (oconcat__function_guard
    (oconcat
      (to_rep1 (rec__value (select d3 1)))
      (to_rep1 (rec__value (select d3 2))))
    (to_rep1 (rec__value (select d3 1)))
    (to_rep1 (rec__value (select d3 2)))))

;; H
(assert
  (dynamic_invariant2
    (oconcat
      (to_rep1 (rec__value (select d3 1)))
      (to_rep1 (rec__value (select d3 2))))
    true
    false
    true
    true))

;; H
(assert
  (= (oconcat
       (to_rep1 (rec__value (select d3 1)))
       (to_rep1 (rec__value (select d3 2)))) (bvor (bvshl ((_ zero_extend 32) 
  (to_rep1
    (rec__value (select d3 1)))) (of_int1 32)) ((_ zero_extend 32) (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d3 2)))))))

(declare-const t15 (_ BitVec 64))

;; H
(assert
  (= t15 (bvshl (oconcat
                  (to_rep1 (rec__value (select d3 1)))
                  (to_rep1 (rec__value (select d3 2)))) (of_int1 scale2))))

;; Assert
(assert (= (us_attr__init (select d3 3)) true))

(declare-const t24 (_ BitVec 64))

;; H
(assert
  (= t24 (bvshl ((_ zero_extend 32) (to_rep1 (rec__value (select d3 3)))) 
  (of_int1
    scale2))))

;; Assert
(assert (= (us_attr__init (select d3 4)) true))

(declare-const t33 (_ BitVec 64))

;; H
(assert
  (= t33 (bvshl ((_ zero_extend 32) (to_rep1 (rec__value (select d3 4)))) 
  (of_int1
    scale2))))

;; Ensures
(assert
  (and
    (big_2xx__function_guard (big_2xx scale2) scale2)
    (and
      (hi__function_guard (hi t15) t15)
      (and
        (hi__function_guard (hi t24) t24)
        (and
          (hi__function_guard (hi t33) t33)
          (= (* mult (big_2xx scale2)) (+ (+ (+ (* (* (* big_2xxsingle 
          big_2xxsingle) big_2xxsingle) (big1 ((_ zero_extend 32) (hi t15)))) (* (* 
          big_2xxsingle big_2xxsingle) (big1
                                         ((_ zero_extend 32) (bvor (lo t15) 
                                         (hi
                                           t24)))))) (* big_2xxsingle 
          (big1
            ((_ zero_extend 32) (bvor (lo t24) (hi t33)))))) (big1
                                                               ((_ zero_extend 32) 
                                                               (lo
                                                                 t33))))))))))

;; H
(assert (hi__function_guard (hi t15) t15))

;; H
(assert (dynamic_invariant3 (hi t15) true false true true))

;; H
(assert (= (hi t15) ((_ extract 31 0) (bvlshr t15 (of_int1 32)))))

(declare-const o19 uns32)

;; Ensures
(assert (= (to_rep1 o19) (hi t15)))

(declare-const d10 (Array Int uns32__init_wrapper))

;; H
(assert (= d10 (store d3 1 (uns32__init_wrapperqtmk o19 true))))

;; H
(assert (hi__function_guard (hi t24) t24))

;; H
(assert (dynamic_invariant3 (hi t24) true false true true))

;; H
(assert (= (hi t24) ((_ extract 31 0) (bvlshr t24 (of_int1 32)))))

;; H
(assert (dynamic_invariant3 (lo t15) true false true true))

;; H
(assert (= (lo t15) ((_ extract 31 0) (bvand t15 #x00000000FFFFFFFF))))

(declare-const o20 uns32)

;; Ensures
(assert (= (to_rep1 o20) (bvor (lo t15) (hi t24))))

(declare-const d11 (Array Int uns32__init_wrapper))

;; H
(assert (= d11 (store d10 2 (uns32__init_wrapperqtmk o20 true))))

;; H
(assert (hi__function_guard (hi t33) t33))

;; H
(assert (dynamic_invariant3 (hi t33) true false true true))

;; H
(assert (= (hi t33) ((_ extract 31 0) (bvlshr t33 (of_int1 32)))))

;; H
(assert (dynamic_invariant3 (lo t24) true false true true))

;; H
(assert (= (lo t24) ((_ extract 31 0) (bvand t24 #x00000000FFFFFFFF))))

(declare-const o21 uns32)

;; Ensures
(assert (= (to_rep1 o21) (bvor (lo t24) (hi t33))))

(declare-const d12 (Array Int uns32__init_wrapper))

;; H
(assert (= d12 (store d11 3 (uns32__init_wrapperqtmk o21 true))))

;; H
(assert (dynamic_invariant3 (lo t33) true false true true))

;; H
(assert (= (lo t33) ((_ extract 31 0) (bvand t33 #x00000000FFFFFFFF))))

(declare-const o22 uns32)

;; Ensures
(assert (= (to_rep1 o22) (lo t33)))

(declare-const d13 (Array Int uns32__init_wrapper))

;; H
(assert (= d13 (store d12 4 (uns32__init_wrapperqtmk o22 true))))

;; Assert
(assert
  (and
    (big_2xx__function_guard (big_2xx scale2) scale2)
    (= (* mult (big_2xx scale2)) (+ (+ (+ (* (* (* big_2xxsingle big_2xxsingle) 
    big_2xxsingle) (big1
                     ((_ zero_extend 32) (to_rep1
                                           (rec__value (select d13 1)))))) (* (* 
    big_2xxsingle big_2xxsingle) (big1
                                   ((_ zero_extend 32) (to_rep1
                                                         (rec__value
                                                           (select d13 2))))))) (* 
    big_2xxsingle (big1
                    ((_ zero_extend 32) (to_rep1 (rec__value (select d13 3))))))) 
    (big1
      ((_ zero_extend 32) (to_rep1 (rec__value (select d13 4)))))))))

;; H
(assert (big_2xx__function_guard (big_2xx scale2) scale2))

;; H
(assert true)

;; H
(assert
  (= (big_2xx scale2) (big1
                        (ite (< scale2 18446744073709551616)
                          (bvshl #x0000000000000001 (of_int1 scale2))
                          #x0000000000000000))))

;; H
(assert (< 0 (big_2xx scale2)))

;; Assert
(assert true)

;; H
(assert (dynamic_invariant2 (oabs z) true false true true))

;; H
(assert
  (= (oabs z) (ite (= z (- 9223372036854775808))
                #x8000000000000000
                (of_int1 (abs1 z)))))

;; H
(assert true)

;; H
(assert (= (big1 (oabs z)) (bv2nat64 (oabs z))))

;; Assert
(assert true)

;; H
(assert true)

;; H
(assert (= (big1 zu1) (bv2nat64 zu1)))

;; H
(assert true)

;; H
(assert (= (big1 zu1) (bv2nat64 zu1)))

;; Assert
(assert true)

;; Assert
(assert true)

;; Ensures
(assert
  (= (* big_2xxdouble (big1 zu1)) (+ (* big_2xxdouble (* (big1 (oabs z)) 
  (big_2xx
    scale2))) 0)))

;; H
(assert true)

;; H
(assert (= (big1 zu1) (bv2nat64 zu1)))

;; Assert
(assert true)

;; Assert
(assert true)

;; H
(assert (big_2xx__function_guard (big_2xx scale2) scale2))

;; H
(assert true)

;; H
(assert
  (= (big_2xx scale2) (big1
                        (ite (< scale2 18446744073709551616)
                          (bvshl #x0000000000000001 (of_int1 scale2))
                          #x0000000000000000))))

;; H
(assert (< 0 (big_2xx scale2)))

;; H
(assert (dynamic_invariant2 (oabs z) true false true true))

;; H
(assert
  (= (oabs z) (ite (= z (- 9223372036854775808))
                #x8000000000000000
                (of_int1 (abs1 z)))))

;; H
(assert true)

;; H
(assert (= (big1 (oabs z)) (bv2nat64 (oabs z))))

;; Assert
(assert true)

;; Assert
(assert true)

;; Ensures
(assert (< (* mult (big_2xx scale2)) (* big_2xxdouble (big1 zu1))))

;; Assert
(assert (<= 0 big_2xxdouble))

;; H
(assert true)

;; H
(assert (= (big1 zu1) (bv2nat64 zu1)))

;; Assert
(assert (<= 0 (big1 zu1)))

;; H
(assert (big_2xx__function_guard (big_2xx scale2) scale2))

;; H
(assert true)

;; H
(assert
  (= (big_2xx scale2) (big1
                        (ite (< scale2 18446744073709551616)
                          (bvshl #x0000000000000001 (of_int1 scale2))
                          #x0000000000000000))))

;; H
(assert (< 0 (big_2xx scale2)))

;; Assert
(assert true)

;; Assert
(assert true)

;; Assert
(assert (<= 0 (* mult (big_2xx scale2))))

;; Ensures
(assert (< (div1 (* mult (big_2xx scale2)) big_2xxdouble) (big1 zu1)))

;; Assert
(assert (= (us_attr__init (select d13 4)) true))

;; H
(assert true)

;; H
(assert
  (= (big1 ((_ zero_extend 32) (to_rep1 (rec__value (select d13 4))))) (bv2nat64 ((_ zero_extend 32) 
  (to_rep1
    (rec__value (select d13 4)))))))

;; Assert
(assert (= (us_attr__init (select d13 3)) true))

;; Assert
(assert (= (us_attr__init (select d13 2)) true))

;; Assert
(assert (= (us_attr__init (select d13 1)) true))

;; H
(assert true)

;; H
(assert
  (= (big3
       (to_rep1 (rec__value (select d13 1)))
       (to_rep1 (rec__value (select d13 2)))
       (to_rep1 (rec__value (select d13 3)))) (+ (+ (* (* big_2xxsingle 
  big_2xxsingle) (big1
                   ((_ zero_extend 32) (to_rep1 (rec__value (select d13 1)))))) (* 
  big_2xxsingle (big1
                  ((_ zero_extend 32) (to_rep1 (rec__value (select d13 2))))))) 
  (big1
    ((_ zero_extend 32) (to_rep1 (rec__value (select d13 3))))))))

;; Assert
(assert (= (us_attr__init (select d13 3)) true))

;; H
(assert true)

;; H
(assert
  (= (big1 ((_ zero_extend 32) (to_rep1 (rec__value (select d13 3))))) (bv2nat64 ((_ zero_extend 32) 
  (to_rep1
    (rec__value (select d13 3)))))))

;; Assert
(assert true)

;; Assert
(assert (= (us_attr__init (select d13 2)) true))

;; H
(assert true)

;; H
(assert
  (= (big1 ((_ zero_extend 32) (to_rep1 (rec__value (select d13 2))))) (bv2nat64 ((_ zero_extend 32) 
  (to_rep1
    (rec__value (select d13 2)))))))

;; Assert
(assert true)

;; Assert
(assert true)

;; Assert
(assert (= (us_attr__init (select d13 1)) true))

;; H
(assert true)

;; H
(assert
  (= (big1 ((_ zero_extend 32) (to_rep1 (rec__value (select d13 1))))) (bv2nat64 ((_ zero_extend 32) 
  (to_rep1
    (rec__value (select d13 1)))))))

;; Assert
(assert true)

;; Assert
(assert true)

;; Assert
(assert true)

;; H
(assert (big_2xx__function_guard (big_2xx scale2) scale2))

;; H
(assert true)

;; H
(assert
  (= (big_2xx scale2) (big1
                        (ite (< scale2 18446744073709551616)
                          (bvshl #x0000000000000001 (of_int1 scale2))
                          #x0000000000000000))))

;; H
(assert (< 0 (big_2xx scale2)))

;; Assert
(assert true)

;; Assert
(assert true)

;; Ensures
(assert
  (= (* mult (big_2xx scale2)) (+ (* big_2xxsingle (big3
                                                     (to_rep1
                                                       (rec__value
                                                         (select d13 1)))
                                                     (to_rep1
                                                       (rec__value
                                                         (select d13 2)))
                                                     (to_rep1
                                                       (rec__value
                                                         (select d13 3))))) 
  (big1
    ((_ zero_extend 32) (to_rep1 (rec__value (select d13 4))))))))

(declare-const qd1 (_ BitVec 32))

;; H
(assert (= qd1 #x00000000))

;; Assume
(assert (dynamic_invariant3 qd1 true false true true))

;; Assert
(assert (= (us_attr__init (select d13 3)) true))

;; Assert
(assert (= (us_attr__init (select d13 2)) true))

;; Assert
(assert (= (us_attr__init (select d13 1)) true))

;; H
(assert true)

;; H
(assert
  (= (big3
       (to_rep1 (rec__value (select d13 1)))
       (to_rep1 (rec__value (select d13 2)))
       (to_rep1 (rec__value (select d13 3)))) (+ (+ (* (* big_2xxsingle 
  big_2xxsingle) (big1
                   ((_ zero_extend 32) (to_rep1 (rec__value (select d13 1)))))) (* 
  big_2xxsingle (big1
                  ((_ zero_extend 32) (to_rep1 (rec__value (select d13 2))))))) 
  (big1
    ((_ zero_extend 32) (to_rep1 (rec__value (select d13 3))))))))

;; Assume
(assert
  (= (big3
       (to_rep1 (rec__value (select d13 1)))
       (to_rep1 (rec__value (select d13 2)))
       (to_rep1 (rec__value (select d13 3)))) d123))

;; Assume
(assert true)

(declare-const j Int)

;; H
(assert (= j 1))

;; Assert
(assert (= (us_attr__init (select d13 (+ j 1))) true))

;; Assert
(assert (= (us_attr__init (select d13 j)) true))

;; Assert
(assert (= (us_attr__init (select d13 (+ j 1))) true))

;; Assert
(assert (= (us_attr__init (select d13 j)) true))

;; H
(assert
  (oconcat__function_guard
    (oconcat
      (to_rep1 (rec__value (select d13 j)))
      (to_rep1 (rec__value (select d13 (+ j 1)))))
    (to_rep1 (rec__value (select d13 j)))
    (to_rep1 (rec__value (select d13 (+ j 1))))))

;; H
(assert
  (dynamic_invariant2
    (oconcat
      (to_rep1 (rec__value (select d13 j)))
      (to_rep1 (rec__value (select d13 (+ j 1)))))
    true
    false
    true
    true))

;; H
(assert
  (= (oconcat
       (to_rep1 (rec__value (select d13 j)))
       (to_rep1 (rec__value (select d13 (+ j 1))))) (bvor (bvshl ((_ zero_extend 32) 
  (to_rep1
    (rec__value (select d13 j)))) (of_int1 32)) ((_ zero_extend 32) (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d13 (+ 
                                                                    j 1))))))))

;; Ensures
(assert
  (= (big1
       (oconcat
         (to_rep1 (rec__value (select d13 j)))
         (to_rep1 (rec__value (select d13 (+ j 1)))))) (+ (* big_2xxsingle 
  (big1
    ((_ zero_extend 32) (to_rep1 (rec__value (select d13 j)))))) (big1
                                                                   ((_ zero_extend 32) 
                                                                   (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d13 (+ 
                                                                    j 1)))))))))

;; Assert
(assert
  (and
    (oconcat__function_guard
      (oconcat
        (to_rep1 (rec__value (select d13 j)))
        (to_rep1 (rec__value (select d13 (+ j 1)))))
      (to_rep1 (rec__value (select d13 j)))
      (to_rep1 (rec__value (select d13 (+ j 1)))))
    (< (big1
         (oconcat
           (to_rep1 (rec__value (select d13 j)))
           (to_rep1 (rec__value (select d13 (+ j 1)))))) (big1 zu1))))

(declare-const spark__branch7 Bool)

(declare-const qd2 (Array Int uns32__init_wrapper))

;; H
(assert (= (us_attr__init (select d13 j)) true))

(declare-const o23 (_ BitVec 32))

;; H
(assert (= (to_rep1 (rec__value (select d13 j))) o23))

(declare-const spark__branch8 Bool)

;; H
(assert (= spark__branch8 (ite (bvugt o23 zhi1) true false)))

;; H
(assert (not (= spark__branch8 true)))

;; H
(assert (= (us_attr__init (select d13 j)) true))

(declare-const o24 (_ BitVec 32))

;; H
(assert (= (to_rep1 (rec__value (select d13 j))) o24))

;; H
(assert (= spark__branch7 (ite (= o24 zhi1) true false)))

(declare-const o25 (_ BitVec 32))

(declare-const o26 (_ BitVec 32))

(declare-const o27 uns32)

(declare-const o28 uns32)

(declare-const o29 (_ BitVec 32))

(declare-const o30 (_ BitVec 32))

(declare-const o31 (_ BitVec 32))

(declare-const o32 (_ BitVec 32))

(declare-const o33 (_ BitVec 32))

(declare-const o34 (_ BitVec 32))

(declare-const o35 (_ BitVec 32))

(declare-const o36 (_ BitVec 32))

;; H
(assert
  (ite (= spark__branch7 true)
    (and
      (= (to_rep1 o28) #xFFFFFFFF)
      (and
        (= qd2 (store qd j (uns32__init_wrapperqtmk o28 true)))
        (let ((temp___1295 (select d13 (+ j 2))))
          (and
            (= (us_attr__init temp___1295) true)
            (and
              (= (to_rep1 (rec__value temp___1295)) o29)
              (let ((temp___1293 (select d13 (+ j 1))))
                (and
                  (= (us_attr__init temp___1293) true)
                  (and
                    (= (to_rep1 (rec__value temp___1293)) o30)
                    (let ((temp___1291 (select d13 j)))
                      (and
                        (= (us_attr__init temp___1291) true)
                        (and
                          (= (to_rep1 (rec__value temp___1291)) o31)
                          (let ((o37 (big3 o31 o30 o29)))
                            (and
                              (= o37 (+ (+ (* (* big_2xxsingle big_2xxsingle) 
                              (big1
                                ((_ zero_extend 32) o31))) (* big_2xxsingle 
                              (big1
                                ((_ zero_extend 32) o30)))) (big1
                                                              ((_ zero_extend 32) 
                                                              o29))))
                              (let ((temp___1282 (select d13 (+ j 1))))
                                (and
                                  (= (us_attr__init temp___1282) true)
                                  (and
                                    (= (to_rep1 (rec__value temp___1282)) 
                                    o32)
                                    (let ((temp___1280 (select d13 j)))
                                      (and
                                        (= (us_attr__init temp___1280) true)
                                        (and
                                          (= (to_rep1
                                               (rec__value temp___1280)) 
                                          o33)
                                          (let ((o38 (oconcat o33 o32)))
                                            (and
                                              (and
                                                (oconcat__function_guard
                                                  o38
                                                  o33
                                                  o32)
                                                (and
                                                  (dynamic_invariant2
                                                    o38
                                                    true
                                                    false
                                                    true
                                                    true)
                                                  (= o38 (bvor (bvshl ((_ zero_extend 32) 
                                                  o33) (of_int1 32)) ((_ zero_extend 32) 
                                                  o32)))))
                                              (and
                                                (= (big1 o38) (bv2nat64 o38))
                                                (let ((o39 (big1 zu1)))
                                                  (and
                                                    (= o39 (bv2nat64 
                                                    zu1))
                                                    (and
                                                      (< o37 (* o39 big_2xxsingle))
                                                      (let ((o40 (big1 zu1)))
                                                        (and
                                                          (= o40 (bv2nat64 
                                                          zu1))
                                                          (and
                                                            (<= 0 o40)
                                                            (let ((temp___1305 
                                                              big_2xxsingle))
                                                              (and
                                                                (<= 0 temp___1305)
                                                                (let ((temp___1301 (select 
                                                                  d13 (+ 
                                                                  j 2))))
                                                                  (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1301) true)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1301)) 
                                                                    o34)
                                                                    (let ((temp___1299 (select 
                                                                    d13 (+ 
                                                                    j 1))))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1299) true)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1299)) 
                                                                    o35)
                                                                    (let ((temp___1297 (select 
                                                                    d13 
                                                                    j)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1297) true)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1297)) 
                                                                    o36)
                                                                    (let ((o41 
                                                                    (big3
                                                                    o36
                                                                    o35
                                                                    o34)))
                                                                    (and
                                                                    (= o41 (+ (+ (* (* 
                                                                    big_2xxsingle 
                                                                    big_2xxsingle) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    o36))) (* 
                                                                    big_2xxsingle 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    o35)))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    o34))))
                                                                    (and
                                                                    (<= 0 o41)
                                                                    (< 
                                                                    (div1
                                                                    o41
                                                                    o40) temp___1305)))))))))))))))))))))))))))))))))))))))))))
    (let ((temp___1277 (select d13 (+ j 1))))
      (and
        (= (us_attr__init temp___1277) true)
        (and
          (= (to_rep1 (rec__value temp___1277)) o25)
          (let ((temp___1275 (select d13 j)))
            (and
              (= (us_attr__init temp___1275) true)
              (and
                (= (to_rep1 (rec__value temp___1275)) o26)
                (let ((o37 (oconcat o26 o25)))
                  (and
                    (and
                      (oconcat__function_guard o37 o26 o25)
                      (and
                        (dynamic_invariant2 o37 true false true true)
                        (= o37 (bvor (bvshl ((_ zero_extend 32) o26) 
                        (of_int1
                          32)) ((_ zero_extend 32) o25)))))
                    (let ((o38 (odivide o37 zhi1)))
                      (and
                        (and
                          (dynamic_invariant2 o38 true false true true)
                          (= o38 (bvudiv o37 ((_ zero_extend 32) zhi1))))
                        (let ((o39 (lo o38)))
                          (and
                            (and
                              (dynamic_invariant3 o39 true false true true)
                              (= o39 ((_ extract 31 0) (bvand o38 #x00000000FFFFFFFF))))
                            (and
                              (= (to_rep1 o27) o39)
                              (and
                                (= qd2 (store qd j (uns32__init_wrapperqtmk
                                                     o27
                                                     true)))
                                (<= (div1
                                      (big3
                                        (to_rep1 (rec__value (select d13 j)))
                                        (to_rep1
                                          (rec__value (select d13 (+ j 1))))
                                        (to_rep1
                                          (rec__value (select d13 (+ j 2)))))
                                      (big1 zu1)) (big1
                                                    ((_ zero_extend 32) 
                                                    (to_rep1
                                                      (rec__value
                                                        (select qd2 j))))))))))))))))))))))

;; H
(assert true)

;; H
(assert (= (big1 zu1) (bv2nat64 zu1)))

;; Assert
(assert true)

;; Assert
(assert (= (us_attr__init (select d13 (+ j 2))) true))

;; Assert
(assert (= (us_attr__init (select d13 (+ j 1))) true))

;; Assert
(assert (= (us_attr__init (select d13 j)) true))

;; H
(assert true)

;; H
(assert
  (= (big3
       (to_rep1 (rec__value (select d13 j)))
       (to_rep1 (rec__value (select d13 (+ j 1))))
       (to_rep1 (rec__value (select d13 (+ j 2))))) (+ (+ (* (* big_2xxsingle 
  big_2xxsingle) (big1
                   ((_ zero_extend 32) (to_rep1 (rec__value (select d13 j)))))) (* 
  big_2xxsingle (big1
                  ((_ zero_extend 32) (to_rep1
                                        (rec__value (select d13 (+ j 1)))))))) 
  (big1
    ((_ zero_extend 32) (to_rep1 (rec__value (select d13 (+ j 2)))))))))

;; Assert
(assert true)

;; H
(assert true)

;; H
(assert (= (big1 zu1) (bv2nat64 zu1)))

;; H
(assert true)

;; H
(assert (= (big1 zu1) (bv2nat64 zu1)))

;; Assert
(assert true)

;; Assert
(assert (= (us_attr__init (select d13 (+ j 2))) true))

;; Assert
(assert (= (us_attr__init (select d13 (+ j 1))) true))

;; Assert
(assert (= (us_attr__init (select d13 j)) true))

;; H
(assert true)

;; H
(assert
  (= (big3
       (to_rep1 (rec__value (select d13 j)))
       (to_rep1 (rec__value (select d13 (+ j 1))))
       (to_rep1 (rec__value (select d13 (+ j 2))))) (+ (+ (* (* big_2xxsingle 
  big_2xxsingle) (big1
                   ((_ zero_extend 32) (to_rep1 (rec__value (select d13 j)))))) (* 
  big_2xxsingle (big1
                  ((_ zero_extend 32) (to_rep1
                                        (rec__value (select d13 (+ j 1)))))))) 
  (big1
    ((_ zero_extend 32) (to_rep1 (rec__value (select d13 (+ j 2)))))))))

;; Assert
(assert true)

;; Assert
(assert (= (us_attr__init (select qd2 j)) true))

;; H
(assert true)

;; H
(assert
  (= (big1 ((_ zero_extend 32) (to_rep1 (rec__value (select qd2 j))))) (bv2nat64 ((_ zero_extend 32) 
  (to_rep1
    (rec__value (select qd2 j)))))))

;; Ensures
(assert
  (< (- (big3
          (to_rep1 (rec__value (select d13 j)))
          (to_rep1 (rec__value (select d13 (+ j 1))))
          (to_rep1 (rec__value (select d13 (+ j 2))))) (big1 zu1)) (* 
  (big1
    ((_ zero_extend 32) (to_rep1 (rec__value (select qd2 j))))) (big1 zu1))))

;; Assert
(assert (= (us_attr__init (select qd2 j)) true))

;; H
(assert
  (dynamic_invariant2
    (omultiply (to_rep1 (rec__value (select qd2 j))) zlo1)
    true
    false
    true
    true))

;; H
(assert
  (= (omultiply (to_rep1 (rec__value (select qd2 j))) zlo1) (bvmul ((_ zero_extend 32) 
  (to_rep1
    (rec__value (select qd2 j)))) ((_ zero_extend 32) zlo1))))

(declare-const t16 (_ BitVec 64))

;; H
(assert (= t16 (omultiply (to_rep1 (rec__value (select qd2 j))) zlo1)))

;; Assert
(assert (= (us_attr__init (select qd2 j)) true))

;; H
(assert
  (dynamic_invariant2
    (omultiply (to_rep1 (rec__value (select qd2 j))) zhi1)
    true
    false
    true
    true))

;; H
(assert
  (= (omultiply (to_rep1 (rec__value (select qd2 j))) zhi1) (bvmul ((_ zero_extend 32) 
  (to_rep1
    (rec__value (select qd2 j)))) ((_ zero_extend 32) zhi1))))

(declare-const t25 (_ BitVec 64))

;; H
(assert (= t25 (omultiply (to_rep1 (rec__value (select qd2 j))) zhi1)))

;; H
(assert (dynamic_invariant3 (lo t16) true false true true))

;; H
(assert (= (lo t16) ((_ extract 31 0) (bvand t16 #x00000000FFFFFFFF))))

(declare-const s31 (_ BitVec 32))

;; H
(assert (= s31 (lo t16)))

;; H
(assert (dynamic_invariant3 (lo t25) true false true true))

;; H
(assert (= (lo t25) ((_ extract 31 0) (bvand t25 #x00000000FFFFFFFF))))

;; H
(assert (hi__function_guard (hi t16) t16))

;; H
(assert (dynamic_invariant3 (hi t16) true false true true))

;; H
(assert (= (hi t16) ((_ extract 31 0) (bvlshr t16 (of_int1 32)))))

;; H
(assert (dynamic_invariant2 (oadd (hi t16) (lo t25)) true false true true))

;; H
(assert
  (= (oadd (hi t16) (lo t25)) (bvadd ((_ zero_extend 32) (hi t16)) ((_ zero_extend 32) 
  (lo
    t25)))))

(declare-const t34 (_ BitVec 64))

;; H
(assert (= t34 (oadd (hi t16) (lo t25))))

;; H
(assert (dynamic_invariant3 (lo t34) true false true true))

;; H
(assert (= (lo t34) ((_ extract 31 0) (bvand t34 #x00000000FFFFFFFF))))

(declare-const s21 (_ BitVec 32))

;; H
(assert (= s21 (lo t34)))

;; H
(assert (hi__function_guard (hi t25) t25))

;; H
(assert (dynamic_invariant3 (hi t25) true false true true))

;; H
(assert (= (hi t25) ((_ extract 31 0) (bvlshr t25 (of_int1 32)))))

;; H
(assert (hi__function_guard (hi t34) t34))

;; H
(assert (dynamic_invariant3 (hi t34) true false true true))

;; H
(assert (= (hi t34) ((_ extract 31 0) (bvlshr t34 (of_int1 32)))))

(declare-const s11 (_ BitVec 32))

;; H
(assert (= s11 (bvadd (hi t34) (hi t25))))

;; Assert
(assert (= (us_attr__init (select qd2 j)) true))

;; Ensures
(assert
  (= (big3 s11 s21 s31) (* (big1
                             ((_ zero_extend 32) (to_rep1
                                                   (rec__value
                                                     (select qd2 j))))) 
  (big1
    zu1))))

;; Ensures
(assert (= (big1 zu1) (big3 #x00000000 zhi1 zlo1)))

(declare-const spark__branch9 Bool)

(declare-const qd3 (Array Int uns32__init_wrapper))

(declare-const s12 (_ BitVec 32))

(declare-const s22 (_ BitVec 32))

(declare-const s32 (_ BitVec 32))

(declare-const prev1 (_ BitVec 32))

;; H
(assert (= (us_attr__init (select d13 (+ j 2))) true))

(declare-const o37 (_ BitVec 32))

;; H
(assert (= (to_rep1 (rec__value (select d13 (+ j 2)))) o37))

;; H
(assert (= (us_attr__init (select d13 (+ j 1))) true))

(declare-const o38 (_ BitVec 32))

;; H
(assert (= (to_rep1 (rec__value (select d13 (+ j 1)))) o38))

;; H
(assert (= (us_attr__init (select d13 j)) true))

(declare-const o39 (_ BitVec 32))

;; H
(assert (= (to_rep1 (rec__value (select d13 j))) o39))

;; H
(assert
  (le3__function_guard (le3 s11 s21 s31 o39 o38 o37) s11 s21 s31 o39 o38 o37))

;; H
(assert
  (=
    (= (le3 s11 s21 s31 o39 o38 o37) true)
    (<= (big3 s11 s21 s31) (big3 o39 o38 o37))))

;; H
(assert
  (and
    (forall ((s13 (_ BitVec 32)) (s23 (_ BitVec 32)) (s33 (_ BitVec 32)))
      (le3__function_guard
        (le3
          s13
          s23
          s33
          (to_rep1 (rec__value (select d13 j)))
          (to_rep1 (rec__value (select d13 (+ j 1))))
          (to_rep1 (rec__value (select d13 (+ j 2)))))
        s13
        s23
        s33
        (to_rep1 (rec__value (select d13 j)))
        (to_rep1 (rec__value (select d13 (+ j 1))))
        (to_rep1 (rec__value (select d13 (+ j 2))))))
    (ite (not (= (le3 s11 s21 s31 o39 o38 o37) true))
      (exists ((qd4 (Array Int uns32__init_wrapper)) (s13 (_ BitVec 32)) (s23 (_ BitVec 32)) (s33 (_ BitVec 32)))
        (and
          (and
            (= (us_attr__init (select qd4 j)) true)
            (= (big3 s13 s23 s33) (* (big1
                                       ((_ zero_extend 32) (to_rep1
                                                             (rec__value
                                                               (select qd4 
                                                               j))))) 
            (big1
              zu1))))
          (and
            (= (and (ite (and
                           (and
                             (and
                               (forall ((temp___1425 Int))
                                 (=>
                                   (and
                                     (<= 1 temp___1425)
                                     (<= temp___1425 2))
                                   (=>
                                     (not (= j temp___1425))
                                     (= (select qd4 temp___1425) (select 
                                     qd2 temp___1425)))))
                               (dynamic_invariant3 s13 false true true true))
                             (dynamic_invariant3 s23 false true true true))
                           (dynamic_invariant3 s33 false true true true))
                      true
                      false) (ite (not
                                    (= (le3
                                         s13
                                         s23
                                         s33
                                         (to_rep1
                                           (rec__value (select d13 j)))
                                         (to_rep1
                                           (rec__value (select d13 (+ j 1))))
                                         (to_rep1
                                           (rec__value (select d13 (+ j 2))))) true))
                               true
                               false)) true)
            (and
              (< 0 (big3 s13 s23 s33))
              (let ((temp___1365 (select qd4 j)))
                (and
                  (= (us_attr__init temp___1365) true)
                  (exists ((o40 (_ BitVec 32)))
                    (and
                      (= (to_rep1 (rec__value temp___1365)) o40)
                      (and
                        (= spark__branch9 (ite (= o40 #x00000000) true false))
                        (and
                          (not (= spark__branch9 true))
                          (let ((temp___1367 (select qd4 j)))
                            (and
                              (= (us_attr__init temp___1367) true)
                              (exists ((o41 (_ BitVec 32)))
                                (and
                                  (= (to_rep1 (rec__value temp___1367)) o41)
                                  (and
                                    (<= (big1 #x0000000000000001) (big1
                                                                    ((_ zero_extend 32) o41)))
                                    (let ((o42 (big1 zu1)))
                                      (and
                                        (= o42 (bv2nat64 zu1))
                                        (let ((o43 (big1 zu1)))
                                          (and
                                            (= o43 (bv2nat64 zu1))
                                            (let ((temp___1369 (select qd4 
                                              j)))
                                              (and
                                                (= (us_attr__init
                                                     temp___1369) true)
                                                (exists ((o44 (_ BitVec 32)))
                                                  (and
                                                    (= (to_rep1
                                                         (rec__value
                                                           temp___1369)) o44)
                                                    (let ((o45 ((_ zero_extend 32) o44)))
                                                      (let ((o46 (big1 o45)))
                                                        (and
                                                          (= o46 (bv2nat64 o45))
                                                          (and
                                                            (<= o42 (* o46 o43))
                                                            (and
                                                              (and
                                                                (= (big3
                                                                    s12
                                                                    s22
                                                                    s32) (- 
                                                                (big3
                                                                  s13
                                                                  s23
                                                                  s33) 
                                                                (big3
                                                                  #x00000000
                                                                  zhi1
                                                                  zlo1)))
                                                                (and
                                                                  (and
                                                                    (dynamic_invariant3
                                                                    s12
                                                                    true
                                                                    true
                                                                    true
                                                                    true)
                                                                    (dynamic_invariant3
                                                                    s22
                                                                    true
                                                                    true
                                                                    true
                                                                    true))
                                                                  (dynamic_invariant3
                                                                    s32
                                                                    true
                                                                    true
                                                                    true
                                                                    true)))
                                                              (and
                                                                (< (- 
                                                                (big3
                                                                  (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d13 
                                                                    j)))
                                                                  (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d13 (+ 
                                                                    j 1))))
                                                                  (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d13 (+ 
                                                                    j 2))))) 
                                                                (big1
                                                                  zu1)) 
                                                                (big3
                                                                  s12
                                                                  s22
                                                                  s32))
                                                                (let ((temp___1389 (select qd4 
                                                                  j)))
                                                                  (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1389) true)
                                                                    (exists 
                                                                    ((o47 (_ BitVec 32)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1389)) o47)
                                                                    (let ((o48 ((_ zero_extend 32) o47)))
                                                                    (and
                                                                    (= (- 
                                                                    (big1
                                                                    o48) 
                                                                    (big1
                                                                    #x0000000000000001)) 
                                                                    (big1
                                                                    (bvsub o48 #x0000000000000001)))
                                                                    (let ((temp___1400 (select qd4 
                                                                    j)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1400) true)
                                                                    (exists 
                                                                    ((o49 (_ BitVec 32)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1400)) o49)
                                                                    (let ((o50 ((_ zero_extend 32) (bvsub o49 #x00000001))))
                                                                    (let ((o51 
                                                                    (big1
                                                                    o50)))
                                                                    (and
                                                                    (= o51 (bv2nat64 o50))
                                                                    (let ((temp___1391 (select qd4 
                                                                    j)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1391) true)
                                                                    (exists 
                                                                    ((o52 (_ BitVec 32)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1391)) o52)
                                                                    (let ((o53 ((_ zero_extend 32) o52)))
                                                                    (and
                                                                    (= 
                                                                    (big1
                                                                    o53) (bv2nat64 o53))
                                                                    (let ((o54 
                                                                    (big1
                                                                    zu1)))
                                                                    (and
                                                                    (= o54 (bv2nat64 
                                                                    zu1))
                                                                    (let ((o55 
                                                                    (big3
                                                                    s12
                                                                    s22
                                                                    s32)))
                                                                    (and
                                                                    (= o55 (+ (+ (* (* 
                                                                    big_2xxsingle 
                                                                    big_2xxsingle) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    s12))) (* 
                                                                    big_2xxsingle 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    s22)))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    s32))))
                                                                    (and
                                                                    (= o55 (+ (* o54 o51) 0))
                                                                    (let ((temp___1405 (select qd4 
                                                                    j)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1405) true)
                                                                    (exists 
                                                                    ((o56 (_ BitVec 32)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1405)) o56)
                                                                    (and
                                                                    (= 
                                                                    prev1 (bvsub o56 #x00000001))
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    prev1
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (let ((temp___1408 (select qd4 
                                                                    j)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1408) true)
                                                                    (exists 
                                                                    ((o57 (_ BitVec 32)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1408)) o57)
                                                                    (exists 
                                                                    ((o58 uns32))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o58) (bvsub o57 #x00000001))
                                                                    (and
                                                                    (= 
                                                                    qd3 (store qd4 
                                                                    j (uns32__init_wrapperqtmk
                                                                    o58
                                                                    true)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    qd3 
                                                                    j))) 
                                                                    prev1)
                                                                    (and
                                                                    (= 
                                                                    (big3
                                                                    s12
                                                                    s22
                                                                    s32) (* 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    qd3 
                                                                    j))))) 
                                                                    (big1
                                                                    zu1)))
                                                                    (let ((temp___1442 (select 
                                                                    d13 (+ 
                                                                    j 2))))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1442) true)
                                                                    (exists 
                                                                    ((o59 (_ BitVec 32)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1442)) o59)
                                                                    (let ((temp___1440 (select 
                                                                    d13 (+ 
                                                                    j 1))))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1440) true)
                                                                    (exists 
                                                                    ((o60 (_ BitVec 32)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1440)) o60)
                                                                    (let ((temp___1438 (select 
                                                                    d13 
                                                                    j)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1438) true)
                                                                    (exists 
                                                                    ((o61 (_ BitVec 32)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1438)) o61)
                                                                    (let ((o62 
                                                                    (le3
                                                                    s12
                                                                    s22
                                                                    s32
                                                                    o61
                                                                    o60
                                                                    o59)))
                                                                    (and
                                                                    (and
                                                                    (le3__function_guard
                                                                    o62
                                                                    s12
                                                                    s22
                                                                    s32
                                                                    o61
                                                                    o60
                                                                    o59)
                                                                    (=
                                                                    (= o62 true)
                                                                    (<= 
                                                                    (big3
                                                                    s12
                                                                    s22
                                                                    s32) 
                                                                    (big3
                                                                    o61
                                                                    o60
                                                                    o59))))
                                                                    (= o62 true)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
      (and
        (and
          (and
            (and
              (and (= spark__branch9 spark__branch7) (= qd3 qd2))
              (= s12 s11))
            (= s22 s21))
          (= s32 s31))
        (= prev1 prev)))))

;; Assert
(assert
  (= (big3 s12 s22 s32) (* (big1
                             ((_ zero_extend 32) (to_rep1
                                                   (rec__value
                                                     (select qd3 j))))) 
  (big1
    zu1))))

;; Assert
(assert
  (< (- (big3
          (to_rep1 (rec__value (select d13 j)))
          (to_rep1 (rec__value (select d13 (+ j 1))))
          (to_rep1 (rec__value (select d13 (+ j 2))))) (big1 zu1)) (big3
                                                                    s12
                                                                    s22
                                                                    s32)))

;; Assert
(assert (= (us_attr__init (select d13 (+ j 2))) true))

;; Assert
(assert (= (us_attr__init (select d13 (+ j 1))) true))

;; Assert
(assert (= (us_attr__init (select d13 j)) true))

;; Ensures
(assert
  (<= (big3 s12 s22 s32) (big3
                           (to_rep1 (rec__value (select d13 j)))
                           (to_rep1 (rec__value (select d13 (+ j 1))))
                           (to_rep1 (rec__value (select d13 (+ j 2)))))))

;; Assert
(assert (= (us_attr__init (select d13 j)) true))

;; Assert
(assert (= (us_attr__init (select d13 (+ j 1))) true))

;; Assert
(assert (= (us_attr__init (select d13 (+ j 2))) true))

(declare-const x1 (_ BitVec 32))

(declare-const x2 (_ BitVec 32))

(declare-const x3 (_ BitVec 32))

;; H
(assert
  (= (big3 x1 x2 x3) (- (big3
                          (to_rep1 (rec__value (select d13 j)))
                          (to_rep1 (rec__value (select d13 (+ j 1))))
                          (to_rep1 (rec__value (select d13 (+ j 2))))) 
  (big3
    s12
    s22
    s32))))

;; H
(assert (dynamic_invariant3 x1 true true true true))

;; H
(assert (dynamic_invariant3 x2 true true true true))

;; H
(assert (dynamic_invariant3 x3 true true true true))

(declare-const o40 uns32)

;; Ensures
(assert (= (to_rep1 o40) x1))

(declare-const d14 (Array Int uns32__init_wrapper))

;; H
(assert (= d14 (store d13 j (uns32__init_wrapperqtmk o40 true))))

(declare-const o41 uns32)

;; Ensures
(assert (= (to_rep1 o41) x2))

(declare-const d15 (Array Int uns32__init_wrapper))

;; H
(assert (= d15 (store d14 (+ j 1) (uns32__init_wrapperqtmk o41 true))))

(declare-const o42 uns32)

;; Ensures
(assert (= (to_rep1 o42) x3))

(declare-const d16 (Array Int uns32__init_wrapper))

;; H
(assert (= d16 (store d15 (+ j 2) (uns32__init_wrapperqtmk o42 true))))

;; Assert
(assert
  (< (big3
       (to_rep1 (rec__value (select d16 j)))
       (to_rep1 (rec__value (select d16 (+ j 1))))
       (to_rep1 (rec__value (select d16 (+ j 2))))) (big1 zu1)))

;; Assert
(assert (= (us_attr__init (select d16 j)) true))

(declare-const spark__branch10 Bool)

;; H
(assert
  (= spark__branch10 (ite (bvugt (to_rep1 (rec__value (select d16 j))) #x00000000)
                       true
                       false)))

;; H
(assert (not (= spark__branch10 true)))

(declare-const spark__branch11 Bool)

(declare-const qd11 (_ BitVec 32))

;; H
(assert (= spark__branch11 (ite (= j 1) true false)))

(declare-const o43 (_ BitVec 32))

(declare-const o44 (_ BitVec 32))

(declare-const o45 (_ BitVec 32))

(declare-const o46 (_ BitVec 32))

(declare-const o47 (_ BitVec 32))

(declare-const o48 (_ BitVec 32))

(declare-const o49 (_ BitVec 32))

(declare-const o50 (_ BitVec 32))

(declare-const o51 (_ BitVec 32))

(declare-const o52 (_ BitVec 32))

(declare-const o53 (_ BitVec 32))

(declare-const o54 (_ BitVec 32))

;; H
(assert
  (and
    (big_2xx__function_guard (big_2xx scale2) scale2)
    (and
      (big_2xx__function_guard (big_2xx scale2) scale2)
      (ite (= spark__branch11 true)
        (let ((temp___1575 (select qd3 1)))
          (and
            (= (us_attr__init temp___1575) true)
            (and
              (= (to_rep1 (rec__value temp___1575)) o43)
              (and
                (= qd11 o43)
                (let ((temp___1591 (select d16 4)))
                  (and
                    (= (us_attr__init temp___1591) true)
                    (and
                      (= (to_rep1 (rec__value temp___1591)) o44)
                      (let ((o55 ((_ zero_extend 32) o44)))
                        (let ((o56 (big1 o55)))
                          (and
                            (= o56 (bv2nat64 o55))
                            (let ((o57 (big3 s12 s22 s32)))
                              (and
                                (= o57 (+ (+ (* (* big_2xxsingle big_2xxsingle) 
                                (big1
                                  ((_ zero_extend 32) s12))) (* big_2xxsingle 
                                (big1
                                  ((_ zero_extend 32) s22)))) (big1
                                                                ((_ zero_extend 32) 
                                                                s32))))
                                (let ((temp___1585 (select d16 3)))
                                  (and
                                    (= (us_attr__init temp___1585) true)
                                    (and
                                      (= (to_rep1 (rec__value temp___1585)) 
                                      o45)
                                      (let ((temp___1583 (select d16 2)))
                                        (and
                                          (= (us_attr__init temp___1583) true)
                                          (and
                                            (= (to_rep1
                                                 (rec__value temp___1583)) 
                                            o46)
                                            (let ((temp___1581 (select 
                                              d16 1)))
                                              (and
                                                (= (us_attr__init
                                                     temp___1581) true)
                                                (and
                                                  (= (to_rep1
                                                       (rec__value
                                                         temp___1581)) 
                                                  o47)
                                                  (let ((o58 (big3
                                                               o47
                                                               o46
                                                               o45)))
                                                    (and
                                                      (= o58 (+ (+ (* (* 
                                                      big_2xxsingle big_2xxsingle) 
                                                      (big1
                                                        ((_ zero_extend 32) 
                                                        o47))) (* big_2xxsingle 
                                                      (big1
                                                        ((_ zero_extend 32) 
                                                        o46)))) (big1
                                                                  ((_ zero_extend 32) 
                                                                  o45))))
                                                      (let ((o59 (big_2xx
                                                                   scale2)))
                                                        (and
                                                          (and
                                                            (big_2xx__function_guard
                                                              o59
                                                              scale2)
                                                            (and
                                                              (= o59 
                                                              (big1
                                                                (ite (< 
                                                                  scale2 18446744073709551616)
                                                                  (bvshl #x0000000000000001 
                                                                  (of_int1
                                                                    scale2))
                                                                  #x0000000000000000)))
                                                              (< 0 o59)))
                                                          (and
                                                            (= (* mult o59) (+ (* 
                                                            big_2xxsingle (+ o58 o57)) o56))
                                                            (let ((temp___1599 (select 
                                                              d16 4)))
                                                              (and
                                                                (= (us_attr__init
                                                                    temp___1599) true)
                                                                (and
                                                                  (= 
                                                                  (to_rep1
                                                                    (rec__value
                                                                    temp___1599)) 
                                                                  o48)
                                                                  (let ((temp___1597 (select 
                                                                    d16 3)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1597) true)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1597)) 
                                                                    o49)
                                                                    (let ((temp___1595 (select 
                                                                    d16 2)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1595) true)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1595)) 
                                                                    o50)
                                                                    (let ((temp___1593 (select 
                                                                    d16 1)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1593) true)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1593)) 
                                                                    o51)
                                                                    (and
                                                                    (= (+ (* 
                                                                    big_2xxsingle 
                                                                    (big3
                                                                    o51
                                                                    o50
                                                                    o49)) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    o48))) 
                                                                    (big3
                                                                    o50
                                                                    o49
                                                                    o48))
                                                                    (let ((temp___1613 (select 
                                                                    d16 4)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1613) true)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1613)) 
                                                                    o52)
                                                                    (let ((temp___1611 (select 
                                                                    d16 3)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1611) true)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1611)) 
                                                                    o53)
                                                                    (let ((temp___1609 (select 
                                                                    d16 2)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1609) true)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1609)) 
                                                                    o54)
                                                                    (let ((o60 
                                                                    (big3
                                                                    o54
                                                                    o53
                                                                    o52)))
                                                                    (and
                                                                    (= o60 (+ (+ (* (* 
                                                                    big_2xxsingle 
                                                                    big_2xxsingle) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    o54))) (* 
                                                                    big_2xxsingle 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    o53)))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    o52))))
                                                                    (let ((o61 
                                                                    (big1
                                                                    zu1)))
                                                                    (and
                                                                    (= o61 (bv2nat64 
                                                                    zu1))
                                                                    (let ((o62 ((_ zero_extend 32) 
                                                                    qd11)))
                                                                    (let ((o63 
                                                                    (big1
                                                                    o62)))
                                                                    (and
                                                                    (= o63 (bv2nat64 o62))
                                                                    (and
                                                                    (= 
                                                                    (big3
                                                                    s12
                                                                    s22
                                                                    s32) (+ (+ (* (* 
                                                                    big_2xxsingle 
                                                                    big_2xxsingle) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    s12))) (* 
                                                                    big_2xxsingle 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    s22)))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    s32))))
                                                                    (let ((o64 
                                                                    (big_2xx
                                                                    scale2)))
                                                                    (and
                                                                    (and
                                                                    (big_2xx__function_guard
                                                                    o64
                                                                    scale2)
                                                                    (and
                                                                    (= o64 
                                                                    (big1
                                                                    (ite (< 
                                                                    scale2 18446744073709551616)
                                                                    (bvshl #x0000000000000001 
                                                                    (of_int1
                                                                    scale2))
                                                                    #x0000000000000000)))
                                                                    (< 0 o64)))
                                                                    (= (* 
                                                                    mult o64) (+ (* 
                                                                    big_2xxsingle (* o63 o61)) o60))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
        (and
          (and
            (= qd1 (to_rep1 (rec__value (select qd3 1))))
            (and
              (= (* (* big_2xxsingle big_2xxsingle) (big1
                                                      ((_ zero_extend 32) 
                                                      (to_rep1
                                                        (rec__value
                                                          (select d16 2)))))) 0)
              (and
                (= (* mult (big_2xx scale2)) (+ (+ (* (* big_2xxsingle 
                (big1
                  ((_ zero_extend 32) (to_rep1 (rec__value (select qd3 1)))))) 
                (big1
                  zu1)) (big3 s12 s22 s32)) (big3
                                              (to_rep1
                                                (rec__value (select d16 2)))
                                              (to_rep1
                                                (rec__value (select d16 3)))
                                              (to_rep1
                                                (rec__value (select d16 4))))))
                (= (* mult (big_2xx scale2)) (+ (+ (+ (* (* big_2xxsingle 
                (big1
                  ((_ zero_extend 32) (to_rep1 (rec__value (select qd3 1)))))) 
                (big1
                  zu1)) (* (big1
                             ((_ zero_extend 32) (to_rep1
                                                   (rec__value
                                                     (select qd3 2))))) 
                (big1
                  zu1))) (* big_2xxsingle (big1
                                            ((_ zero_extend 32) (to_rep1
                                                                  (rec__value
                                                                    (select 
                                                                    d16 3))))))) 
                (big1
                  ((_ zero_extend 32) (to_rep1 (rec__value (select d16 4))))))))))
          (= qd11 qd1))))))

(declare-const j1 Int)

;; H
(assert (= j1 2))

;; Assert
(assert (= (us_attr__init (select d16 (+ j1 1))) true))

;; Assert
(assert (= (us_attr__init (select d16 j1)) true))

;; Assert
(assert (= (us_attr__init (select d16 (+ j1 1))) true))

;; Assert
(assert (= (us_attr__init (select d16 j1)) true))

;; H
(assert
  (oconcat__function_guard
    (oconcat
      (to_rep1 (rec__value (select d16 j1)))
      (to_rep1 (rec__value (select d16 (+ j1 1)))))
    (to_rep1 (rec__value (select d16 j1)))
    (to_rep1 (rec__value (select d16 (+ j1 1))))))

;; H
(assert
  (dynamic_invariant2
    (oconcat
      (to_rep1 (rec__value (select d16 j1)))
      (to_rep1 (rec__value (select d16 (+ j1 1)))))
    true
    false
    true
    true))

;; H
(assert
  (= (oconcat
       (to_rep1 (rec__value (select d16 j1)))
       (to_rep1 (rec__value (select d16 (+ j1 1))))) (bvor (bvshl ((_ zero_extend 32) 
  (to_rep1
    (rec__value (select d16 j1)))) (of_int1 32)) ((_ zero_extend 32) 
  (to_rep1
    (rec__value (select d16 (+ j1 1))))))))

;; Ensures
(assert
  (= (big1
       (oconcat
         (to_rep1 (rec__value (select d16 j1)))
         (to_rep1 (rec__value (select d16 (+ j1 1)))))) (+ (* big_2xxsingle 
  (big1
    ((_ zero_extend 32) (to_rep1 (rec__value (select d16 j1)))))) (big1
                                                                    ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d16 (+ 
                                                                    j1 1)))))))))

;; Assert
(assert
  (and
    (oconcat__function_guard
      (oconcat
        (to_rep1 (rec__value (select d16 j1)))
        (to_rep1 (rec__value (select d16 (+ j1 1)))))
      (to_rep1 (rec__value (select d16 j1)))
      (to_rep1 (rec__value (select d16 (+ j1 1)))))
    (< (big1
         (oconcat
           (to_rep1 (rec__value (select d16 j1)))
           (to_rep1 (rec__value (select d16 (+ j1 1)))))) (big1 zu1))))

(declare-const spark__branch12 Bool)

(declare-const qd4 (Array Int uns32__init_wrapper))

;; H
(assert (= (us_attr__init (select d16 j1)) true))

(declare-const o55 (_ BitVec 32))

;; H
(assert (= (to_rep1 (rec__value (select d16 j1))) o55))

(declare-const spark__branch13 Bool)

;; H
(assert (= spark__branch13 (ite (bvugt o55 zhi1) true false)))

;; H
(assert (not (= spark__branch13 true)))

;; H
(assert (= (us_attr__init (select d16 j1)) true))

(declare-const o56 (_ BitVec 32))

;; H
(assert (= (to_rep1 (rec__value (select d16 j1))) o56))

;; H
(assert (= spark__branch12 (ite (= o56 zhi1) true false)))

(declare-const o57 (_ BitVec 32))

(declare-const o58 (_ BitVec 32))

(declare-const o59 uns32)

(declare-const o60 uns32)

(declare-const o61 (_ BitVec 32))

(declare-const o62 (_ BitVec 32))

(declare-const o63 (_ BitVec 32))

(declare-const o64 (_ BitVec 32))

(declare-const o65 (_ BitVec 32))

(declare-const o66 (_ BitVec 32))

(declare-const o67 (_ BitVec 32))

(declare-const o68 (_ BitVec 32))

;; H
(assert
  (ite (= spark__branch12 true)
    (and
      (= (to_rep1 o60) #xFFFFFFFF)
      (and
        (= qd4 (store qd3 j1 (uns32__init_wrapperqtmk o60 true)))
        (let ((temp___1295 (select d16 (+ j1 2))))
          (and
            (= (us_attr__init temp___1295) true)
            (and
              (= (to_rep1 (rec__value temp___1295)) o61)
              (let ((temp___1293 (select d16 (+ j1 1))))
                (and
                  (= (us_attr__init temp___1293) true)
                  (and
                    (= (to_rep1 (rec__value temp___1293)) o62)
                    (let ((temp___1291 (select d16 j1)))
                      (and
                        (= (us_attr__init temp___1291) true)
                        (and
                          (= (to_rep1 (rec__value temp___1291)) o63)
                          (let ((o69 (big3 o63 o62 o61)))
                            (and
                              (= o69 (+ (+ (* (* big_2xxsingle big_2xxsingle) 
                              (big1
                                ((_ zero_extend 32) o63))) (* big_2xxsingle 
                              (big1
                                ((_ zero_extend 32) o62)))) (big1
                                                              ((_ zero_extend 32) 
                                                              o61))))
                              (let ((temp___1282 (select d16 (+ j1 1))))
                                (and
                                  (= (us_attr__init temp___1282) true)
                                  (and
                                    (= (to_rep1 (rec__value temp___1282)) 
                                    o64)
                                    (let ((temp___1280 (select d16 j1)))
                                      (and
                                        (= (us_attr__init temp___1280) true)
                                        (and
                                          (= (to_rep1
                                               (rec__value temp___1280)) 
                                          o65)
                                          (let ((o70 (oconcat o65 o64)))
                                            (and
                                              (and
                                                (oconcat__function_guard
                                                  o70
                                                  o65
                                                  o64)
                                                (and
                                                  (dynamic_invariant2
                                                    o70
                                                    true
                                                    false
                                                    true
                                                    true)
                                                  (= o70 (bvor (bvshl ((_ zero_extend 32) 
                                                  o65) (of_int1 32)) ((_ zero_extend 32) 
                                                  o64)))))
                                              (and
                                                (= (big1 o70) (bv2nat64 o70))
                                                (let ((o71 (big1 zu1)))
                                                  (and
                                                    (= o71 (bv2nat64 
                                                    zu1))
                                                    (and
                                                      (< o69 (* o71 big_2xxsingle))
                                                      (let ((o72 (big1 zu1)))
                                                        (and
                                                          (= o72 (bv2nat64 
                                                          zu1))
                                                          (and
                                                            (<= 0 o72)
                                                            (let ((temp___1305 
                                                              big_2xxsingle))
                                                              (and
                                                                (<= 0 temp___1305)
                                                                (let ((temp___1301 (select 
                                                                  d16 (+ 
                                                                  j1 2))))
                                                                  (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1301) true)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1301)) 
                                                                    o66)
                                                                    (let ((temp___1299 (select 
                                                                    d16 (+ 
                                                                    j1 1))))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1299) true)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1299)) 
                                                                    o67)
                                                                    (let ((temp___1297 (select 
                                                                    d16 
                                                                    j1)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1297) true)
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1297)) 
                                                                    o68)
                                                                    (let ((o73 
                                                                    (big3
                                                                    o68
                                                                    o67
                                                                    o66)))
                                                                    (and
                                                                    (= o73 (+ (+ (* (* 
                                                                    big_2xxsingle 
                                                                    big_2xxsingle) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    o68))) (* 
                                                                    big_2xxsingle 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    o67)))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    o66))))
                                                                    (and
                                                                    (<= 0 o73)
                                                                    (< 
                                                                    (div1
                                                                    o73
                                                                    o72) temp___1305)))))))))))))))))))))))))))))))))))))))))))
    (let ((temp___1277 (select d16 (+ j1 1))))
      (and
        (= (us_attr__init temp___1277) true)
        (and
          (= (to_rep1 (rec__value temp___1277)) o57)
          (let ((temp___1275 (select d16 j1)))
            (and
              (= (us_attr__init temp___1275) true)
              (and
                (= (to_rep1 (rec__value temp___1275)) o58)
                (let ((o69 (oconcat o58 o57)))
                  (and
                    (and
                      (oconcat__function_guard o69 o58 o57)
                      (and
                        (dynamic_invariant2 o69 true false true true)
                        (= o69 (bvor (bvshl ((_ zero_extend 32) o58) 
                        (of_int1
                          32)) ((_ zero_extend 32) o57)))))
                    (let ((o70 (odivide o69 zhi1)))
                      (and
                        (and
                          (dynamic_invariant2 o70 true false true true)
                          (= o70 (bvudiv o69 ((_ zero_extend 32) zhi1))))
                        (let ((o71 (lo o70)))
                          (and
                            (and
                              (dynamic_invariant3 o71 true false true true)
                              (= o71 ((_ extract 31 0) (bvand o70 #x00000000FFFFFFFF))))
                            (and
                              (= (to_rep1 o59) o71)
                              (and
                                (= qd4 (store qd3 j1 (uns32__init_wrapperqtmk
                                                       o59
                                                       true)))
                                (<= (div1
                                      (big3
                                        (to_rep1
                                          (rec__value (select d16 j1)))
                                        (to_rep1
                                          (rec__value (select d16 (+ j1 1))))
                                        (to_rep1
                                          (rec__value (select d16 (+ j1 2)))))
                                      (big1 zu1)) (big1
                                                    ((_ zero_extend 32) 
                                                    (to_rep1
                                                      (rec__value
                                                        (select qd4 j1))))))))))))))))))))))

;; H
(assert true)

;; H
(assert (= (big1 zu1) (bv2nat64 zu1)))

;; Assert
(assert true)

;; Assert
(assert (= (us_attr__init (select d16 (+ j1 2))) true))

;; Assert
(assert (= (us_attr__init (select d16 (+ j1 1))) true))

;; Assert
(assert (= (us_attr__init (select d16 j1)) true))

;; H
(assert true)

;; H
(assert
  (= (big3
       (to_rep1 (rec__value (select d16 j1)))
       (to_rep1 (rec__value (select d16 (+ j1 1))))
       (to_rep1 (rec__value (select d16 (+ j1 2))))) (+ (+ (* (* big_2xxsingle 
  big_2xxsingle) (big1
                   ((_ zero_extend 32) (to_rep1 (rec__value (select d16 j1)))))) (* 
  big_2xxsingle (big1
                  ((_ zero_extend 32) (to_rep1
                                        (rec__value (select d16 (+ j1 1)))))))) 
  (big1
    ((_ zero_extend 32) (to_rep1 (rec__value (select d16 (+ j1 2)))))))))

;; Assert
(assert true)

;; H
(assert true)

;; H
(assert (= (big1 zu1) (bv2nat64 zu1)))

;; H
(assert true)

;; H
(assert (= (big1 zu1) (bv2nat64 zu1)))

;; Assert
(assert true)

;; Assert
(assert (= (us_attr__init (select d16 (+ j1 2))) true))

;; Assert
(assert (= (us_attr__init (select d16 (+ j1 1))) true))

;; Assert
(assert (= (us_attr__init (select d16 j1)) true))

;; H
(assert true)

;; H
(assert
  (= (big3
       (to_rep1 (rec__value (select d16 j1)))
       (to_rep1 (rec__value (select d16 (+ j1 1))))
       (to_rep1 (rec__value (select d16 (+ j1 2))))) (+ (+ (* (* big_2xxsingle 
  big_2xxsingle) (big1
                   ((_ zero_extend 32) (to_rep1 (rec__value (select d16 j1)))))) (* 
  big_2xxsingle (big1
                  ((_ zero_extend 32) (to_rep1
                                        (rec__value (select d16 (+ j1 1)))))))) 
  (big1
    ((_ zero_extend 32) (to_rep1 (rec__value (select d16 (+ j1 2)))))))))

;; Assert
(assert true)

;; Assert
(assert (= (us_attr__init (select qd4 j1)) true))

;; H
(assert true)

;; H
(assert
  (= (big1 ((_ zero_extend 32) (to_rep1 (rec__value (select qd4 j1))))) (bv2nat64 ((_ zero_extend 32) 
  (to_rep1
    (rec__value (select qd4 j1)))))))

;; Ensures
(assert
  (< (- (big3
          (to_rep1 (rec__value (select d16 j1)))
          (to_rep1 (rec__value (select d16 (+ j1 1))))
          (to_rep1 (rec__value (select d16 (+ j1 2))))) (big1 zu1)) (* 
  (big1
    ((_ zero_extend 32) (to_rep1 (rec__value (select qd4 j1))))) (big1 zu1))))

;; Assert
(assert (= (us_attr__init (select qd4 j1)) true))

;; H
(assert
  (dynamic_invariant2
    (omultiply (to_rep1 (rec__value (select qd4 j1))) zlo1)
    true
    false
    true
    true))

;; H
(assert
  (= (omultiply (to_rep1 (rec__value (select qd4 j1))) zlo1) (bvmul ((_ zero_extend 32) 
  (to_rep1
    (rec__value (select qd4 j1)))) ((_ zero_extend 32) zlo1))))

(declare-const t17 (_ BitVec 64))

;; H
(assert (= t17 (omultiply (to_rep1 (rec__value (select qd4 j1))) zlo1)))

;; Assert
(assert (= (us_attr__init (select qd4 j1)) true))

;; H
(assert
  (dynamic_invariant2
    (omultiply (to_rep1 (rec__value (select qd4 j1))) zhi1)
    true
    false
    true
    true))

;; H
(assert
  (= (omultiply (to_rep1 (rec__value (select qd4 j1))) zhi1) (bvmul ((_ zero_extend 32) 
  (to_rep1
    (rec__value (select qd4 j1)))) ((_ zero_extend 32) zhi1))))

(declare-const t26 (_ BitVec 64))

;; H
(assert (= t26 (omultiply (to_rep1 (rec__value (select qd4 j1))) zhi1)))

;; H
(assert (dynamic_invariant3 (lo t17) true false true true))

;; H
(assert (= (lo t17) ((_ extract 31 0) (bvand t17 #x00000000FFFFFFFF))))

(declare-const s33 (_ BitVec 32))

;; H
(assert (= s33 (lo t17)))

;; H
(assert (dynamic_invariant3 (lo t26) true false true true))

;; H
(assert (= (lo t26) ((_ extract 31 0) (bvand t26 #x00000000FFFFFFFF))))

;; H
(assert (hi__function_guard (hi t17) t17))

;; H
(assert (dynamic_invariant3 (hi t17) true false true true))

;; H
(assert (= (hi t17) ((_ extract 31 0) (bvlshr t17 (of_int1 32)))))

;; H
(assert (dynamic_invariant2 (oadd (hi t17) (lo t26)) true false true true))

;; H
(assert
  (= (oadd (hi t17) (lo t26)) (bvadd ((_ zero_extend 32) (hi t17)) ((_ zero_extend 32) 
  (lo
    t26)))))

(declare-const t35 (_ BitVec 64))

;; H
(assert (= t35 (oadd (hi t17) (lo t26))))

;; H
(assert (dynamic_invariant3 (lo t35) true false true true))

;; H
(assert (= (lo t35) ((_ extract 31 0) (bvand t35 #x00000000FFFFFFFF))))

(declare-const s23 (_ BitVec 32))

;; H
(assert (= s23 (lo t35)))

;; H
(assert (hi__function_guard (hi t26) t26))

;; H
(assert (dynamic_invariant3 (hi t26) true false true true))

;; H
(assert (= (hi t26) ((_ extract 31 0) (bvlshr t26 (of_int1 32)))))

;; H
(assert (hi__function_guard (hi t35) t35))

;; H
(assert (dynamic_invariant3 (hi t35) true false true true))

;; H
(assert (= (hi t35) ((_ extract 31 0) (bvlshr t35 (of_int1 32)))))

(declare-const s13 (_ BitVec 32))

;; H
(assert (= s13 (bvadd (hi t35) (hi t26))))

;; Assert
(assert (= (us_attr__init (select qd4 j1)) true))

;; Ensures
(assert
  (= (big3 s13 s23 s33) (* (big1
                             ((_ zero_extend 32) (to_rep1
                                                   (rec__value
                                                     (select qd4 j1))))) 
  (big1
    zu1))))

;; Ensures
(assert (= (big1 zu1) (big3 #x00000000 zhi1 zlo1)))

(declare-const spark__branch14 Bool)

(declare-const qd5 (Array Int uns32__init_wrapper))

(declare-const s14 (_ BitVec 32))

(declare-const s24 (_ BitVec 32))

(declare-const s34 (_ BitVec 32))

;; H
(assert (= (us_attr__init (select d16 (+ j1 2))) true))

(declare-const o69 (_ BitVec 32))

;; H
(assert (= (to_rep1 (rec__value (select d16 (+ j1 2)))) o69))

;; H
(assert (= (us_attr__init (select d16 (+ j1 1))) true))

(declare-const o70 (_ BitVec 32))

;; H
(assert (= (to_rep1 (rec__value (select d16 (+ j1 1)))) o70))

;; H
(assert (= (us_attr__init (select d16 j1)) true))

(declare-const o71 (_ BitVec 32))

;; H
(assert (= (to_rep1 (rec__value (select d16 j1))) o71))

;; H
(assert
  (le3__function_guard (le3 s13 s23 s33 o71 o70 o69) s13 s23 s33 o71 o70 o69))

;; H
(assert
  (=
    (= (le3 s13 s23 s33 o71 o70 o69) true)
    (<= (big3 s13 s23 s33) (big3 o71 o70 o69))))

;; H
(assert
  (and
    (forall ((s15 (_ BitVec 32)) (s25 (_ BitVec 32)) (s35 (_ BitVec 32)))
      (le3__function_guard
        (le3
          s15
          s25
          s35
          (to_rep1 (rec__value (select d16 j1)))
          (to_rep1 (rec__value (select d16 (+ j1 1))))
          (to_rep1 (rec__value (select d16 (+ j1 2)))))
        s15
        s25
        s35
        (to_rep1 (rec__value (select d16 j1)))
        (to_rep1 (rec__value (select d16 (+ j1 1))))
        (to_rep1 (rec__value (select d16 (+ j1 2))))))
    (ite (not (= (le3 s13 s23 s33 o71 o70 o69) true))
      (exists ((qd6 (Array Int uns32__init_wrapper)) (s15 (_ BitVec 32)) (s25 (_ BitVec 32)) (s35 (_ BitVec 32)))
        (and
          (and
            (= (us_attr__init (select qd6 j1)) true)
            (= (big3 s15 s25 s35) (* (big1
                                       ((_ zero_extend 32) (to_rep1
                                                             (rec__value
                                                               (select qd6 
                                                               j1))))) 
            (big1
              zu1))))
          (and
            (= (and (ite (and
                           (and
                             (and
                               (forall ((temp___1425 Int))
                                 (=>
                                   (and
                                     (<= 1 temp___1425)
                                     (<= temp___1425 2))
                                   (=>
                                     (not (= j1 temp___1425))
                                     (= (select qd6 temp___1425) (select 
                                     qd4 temp___1425)))))
                               (dynamic_invariant3 s15 false true true true))
                             (dynamic_invariant3 s25 false true true true))
                           (dynamic_invariant3 s35 false true true true))
                      true
                      false) (ite (not
                                    (= (le3
                                         s15
                                         s25
                                         s35
                                         (to_rep1
                                           (rec__value (select d16 j1)))
                                         (to_rep1
                                           (rec__value (select d16 (+ j1 1))))
                                         (to_rep1
                                           (rec__value (select d16 (+ j1 2))))) true))
                               true
                               false)) true)
            (and
              (< 0 (big3 s15 s25 s35))
              (let ((temp___1365 (select qd6 j1)))
                (and
                  (= (us_attr__init temp___1365) true)
                  (exists ((o72 (_ BitVec 32)))
                    (and
                      (= (to_rep1 (rec__value temp___1365)) o72)
                      (and
                        (= spark__branch14 (ite (= o72 #x00000000)
                                             true
                                             false))
                        (and
                          (not (= spark__branch14 true))
                          (let ((temp___1367 (select qd6 j1)))
                            (and
                              (= (us_attr__init temp___1367) true)
                              (exists ((o73 (_ BitVec 32)))
                                (and
                                  (= (to_rep1 (rec__value temp___1367)) o73)
                                  (and
                                    (<= (big1 #x0000000000000001) (big1
                                                                    ((_ zero_extend 32) o73)))
                                    (let ((o74 (big1 zu1)))
                                      (and
                                        (= o74 (bv2nat64 zu1))
                                        (let ((o75 (big1 zu1)))
                                          (and
                                            (= o75 (bv2nat64 zu1))
                                            (let ((temp___1369 (select qd6 
                                              j1)))
                                              (and
                                                (= (us_attr__init
                                                     temp___1369) true)
                                                (exists ((o76 (_ BitVec 32)))
                                                  (and
                                                    (= (to_rep1
                                                         (rec__value
                                                           temp___1369)) o76)
                                                    (let ((o77 ((_ zero_extend 32) o76)))
                                                      (let ((o78 (big1 o77)))
                                                        (and
                                                          (= o78 (bv2nat64 o77))
                                                          (and
                                                            (<= o74 (* o78 o75))
                                                            (and
                                                              (and
                                                                (= (big3
                                                                    s14
                                                                    s24
                                                                    s34) (- 
                                                                (big3
                                                                  s15
                                                                  s25
                                                                  s35) 
                                                                (big3
                                                                  #x00000000
                                                                  zhi1
                                                                  zlo1)))
                                                                (and
                                                                  (and
                                                                    (dynamic_invariant3
                                                                    s14
                                                                    true
                                                                    true
                                                                    true
                                                                    true)
                                                                    (dynamic_invariant3
                                                                    s24
                                                                    true
                                                                    true
                                                                    true
                                                                    true))
                                                                  (dynamic_invariant3
                                                                    s34
                                                                    true
                                                                    true
                                                                    true
                                                                    true)))
                                                              (and
                                                                (< (- 
                                                                (big3
                                                                  (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d16 
                                                                    j1)))
                                                                  (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d16 (+ 
                                                                    j1 1))))
                                                                  (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    d16 (+ 
                                                                    j1 2))))) 
                                                                (big1
                                                                  zu1)) 
                                                                (big3
                                                                  s14
                                                                  s24
                                                                  s34))
                                                                (let ((temp___1389 (select qd6 
                                                                  j1)))
                                                                  (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1389) true)
                                                                    (exists 
                                                                    ((o79 (_ BitVec 32)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1389)) o79)
                                                                    (let ((o80 ((_ zero_extend 32) o79)))
                                                                    (and
                                                                    (= (- 
                                                                    (big1
                                                                    o80) 
                                                                    (big1
                                                                    #x0000000000000001)) 
                                                                    (big1
                                                                    (bvsub o80 #x0000000000000001)))
                                                                    (let ((temp___1400 (select qd6 
                                                                    j1)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1400) true)
                                                                    (exists 
                                                                    ((o81 (_ BitVec 32)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1400)) o81)
                                                                    (let ((o82 ((_ zero_extend 32) (bvsub o81 #x00000001))))
                                                                    (let ((o83 
                                                                    (big1
                                                                    o82)))
                                                                    (and
                                                                    (= o83 (bv2nat64 o82))
                                                                    (let ((temp___1391 (select qd6 
                                                                    j1)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1391) true)
                                                                    (exists 
                                                                    ((o84 (_ BitVec 32)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1391)) o84)
                                                                    (let ((o85 ((_ zero_extend 32) o84)))
                                                                    (and
                                                                    (= 
                                                                    (big1
                                                                    o85) (bv2nat64 o85))
                                                                    (let ((o86 
                                                                    (big1
                                                                    zu1)))
                                                                    (and
                                                                    (= o86 (bv2nat64 
                                                                    zu1))
                                                                    (let ((o87 
                                                                    (big3
                                                                    s14
                                                                    s24
                                                                    s34)))
                                                                    (and
                                                                    (= o87 (+ (+ (* (* 
                                                                    big_2xxsingle 
                                                                    big_2xxsingle) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    s14))) (* 
                                                                    big_2xxsingle 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    s24)))) 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    s34))))
                                                                    (and
                                                                    (= o87 (+ (* o86 o83) 0))
                                                                    (let ((temp___1405 (select qd6 
                                                                    j1)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1405) true)
                                                                    (exists 
                                                                    ((o88 (_ BitVec 32)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1405)) o88)
                                                                    (exists 
                                                                    ((prev2 (_ BitVec 32)))
                                                                    (and
                                                                    (= prev2 (bvsub o88 #x00000001))
                                                                    (and
                                                                    (dynamic_invariant3
                                                                    prev2
                                                                    true
                                                                    false
                                                                    true
                                                                    true)
                                                                    (let ((temp___1408 (select qd6 
                                                                    j1)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1408) true)
                                                                    (exists 
                                                                    ((o89 (_ BitVec 32)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1408)) o89)
                                                                    (exists 
                                                                    ((o90 uns32))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    o90) (bvsub o89 #x00000001))
                                                                    (and
                                                                    (= 
                                                                    qd5 (store qd6 
                                                                    j1 
                                                                    (uns32__init_wrapperqtmk
                                                                    o90
                                                                    true)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    qd5 
                                                                    j1))) prev2)
                                                                    (and
                                                                    (= 
                                                                    (big3
                                                                    s14
                                                                    s24
                                                                    s34) (* 
                                                                    (big1
                                                                    ((_ zero_extend 32) 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    (select 
                                                                    qd5 
                                                                    j1))))) 
                                                                    (big1
                                                                    zu1)))
                                                                    (let ((temp___1442 (select 
                                                                    d16 (+ 
                                                                    j1 2))))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1442) true)
                                                                    (exists 
                                                                    ((o91 (_ BitVec 32)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1442)) o91)
                                                                    (let ((temp___1440 (select 
                                                                    d16 (+ 
                                                                    j1 1))))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1440) true)
                                                                    (exists 
                                                                    ((o92 (_ BitVec 32)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1440)) o92)
                                                                    (let ((temp___1438 (select 
                                                                    d16 
                                                                    j1)))
                                                                    (and
                                                                    (= 
                                                                    (us_attr__init
                                                                    temp___1438) true)
                                                                    (exists 
                                                                    ((o93 (_ BitVec 32)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep1
                                                                    (rec__value
                                                                    temp___1438)) o93)
                                                                    (let ((o94 
                                                                    (le3
                                                                    s14
                                                                    s24
                                                                    s34
                                                                    o93
                                                                    o92
                                                                    o91)))
                                                                    (and
                                                                    (and
                                                                    (le3__function_guard
                                                                    o94
                                                                    s14
                                                                    s24
                                                                    s34
                                                                    o93
                                                                    o92
                                                                    o91)
                                                                    (=
                                                                    (= o94 true)
                                                                    (<= 
                                                                    (big3
                                                                    s14
                                                                    s24
                                                                    s34) 
                                                                    (big3
                                                                    o93
                                                                    o92
                                                                    o91))))
                                                                    (= o94 true))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
      (and
        (and
          (and
            (and (= spark__branch14 spark__branch12) (= qd5 qd4))
            (= s14 s13))
          (= s24 s23))
        (= s34 s33)))))

;; Assert
(assert
  (= (big3 s14 s24 s34) (* (big1
                             ((_ zero_extend 32) (to_rep1
                                                   (rec__value
                                                     (select qd5 j1))))) 
  (big1
    zu1))))

;; Assert
(assert
  (< (- (big3
          (to_rep1 (rec__value (select d16 j1)))
          (to_rep1 (rec__value (select d16 (+ j1 1))))
          (to_rep1 (rec__value (select d16 (+ j1 2))))) (big1 zu1)) (big3
                                                                    s14
                                                                    s24
                                                                    s34)))

;; Assert
(assert (= (us_attr__init (select d16 (+ j1 2))) true))

;; Assert
(assert (= (us_attr__init (select d16 (+ j1 1))) true))

;; Assert
(assert (= (us_attr__init (select d16 j1)) true))

;; Ensures
(assert
  (<= (big3 s14 s24 s34) (big3
                           (to_rep1 (rec__value (select d16 j1)))
                           (to_rep1 (rec__value (select d16 (+ j1 1))))
                           (to_rep1 (rec__value (select d16 (+ j1 2)))))))

;; Assert
(assert (= (us_attr__init (select d16 j1)) true))

;; Assert
(assert (= (us_attr__init (select d16 (+ j1 1))) true))

;; Assert
(assert (= (us_attr__init (select d16 (+ j1 2))) true))

(declare-const x11 (_ BitVec 32))

(declare-const x21 (_ BitVec 32))

(declare-const x31 (_ BitVec 32))

;; H
(assert
  (= (big3 x11 x21 x31) (- (big3
                             (to_rep1 (rec__value (select d16 j1)))
                             (to_rep1 (rec__value (select d16 (+ j1 1))))
                             (to_rep1 (rec__value (select d16 (+ j1 2))))) 
  (big3
    s14
    s24
    s34))))

;; H
(assert (dynamic_invariant3 x11 true true true true))

;; H
(assert (dynamic_invariant3 x21 true true true true))

;; H
(assert (dynamic_invariant3 x31 true true true true))

(declare-const o72 uns32)

;; Ensures
(assert (= (to_rep1 o72) x11))

(declare-const d17 (Array Int uns32__init_wrapper))

;; H
(assert (= d17 (store d16 j1 (uns32__init_wrapperqtmk o72 true))))

(declare-const o73 uns32)

;; Ensures
(assert (= (to_rep1 o73) x21))

(declare-const d18 (Array Int uns32__init_wrapper))

;; H
(assert (= d18 (store d17 (+ j1 1) (uns32__init_wrapperqtmk o73 true))))

(declare-const o74 uns32)

;; Ensures
(assert (= (to_rep1 o74) x31))

(declare-const d19 (Array Int uns32__init_wrapper))

;; H
(assert (= d19 (store d18 (+ j1 2) (uns32__init_wrapperqtmk o74 true))))

;; Assert
(assert
  (< (big3
       (to_rep1 (rec__value (select d19 j1)))
       (to_rep1 (rec__value (select d19 (+ j1 1))))
       (to_rep1 (rec__value (select d19 (+ j1 2))))) (big1 zu1)))

;; Assert
(assert (= (us_attr__init (select d19 j1)) true))

(declare-const spark__branch15 Bool)

;; H
(assert
  (= spark__branch15 (ite (bvugt (to_rep1 (rec__value (select d19 j1))) #x00000000)
                       true
                       false)))

;; H
(assert (not (= spark__branch15 true)))

;; (=)'result'unused'unused
(define-fun lpeqrpqtresultqtunusedqtunused () Bool
  (ite (= j1 1) true false))

(declare-const spark__branch16 Bool)

;; H
(assert (= spark__branch16 (ite (= j1 1) true false)))

;; H
(assert (not (= spark__branch16 true)))

;; Assert
(assert (= qd11 (to_rep1 (rec__value (select qd5 1)))))

;; Assert
(assert
  (= (* (* big_2xxsingle big_2xxsingle) (big1
                                          ((_ zero_extend 32) (to_rep1
                                                                (rec__value
                                                                  (select 
                                                                  d19 2)))))) 0))

;; Assert
(assert (= (us_attr__init (select d19 4)) true))

;; Assert
(assert (= (us_attr__init (select d19 3)) true))

;; Assert
(assert (= (us_attr__init (select d19 2)) true))

;; H
(assert true)

;; H
(assert
  (= (big3
       (to_rep1 (rec__value (select d19 2)))
       (to_rep1 (rec__value (select d19 3)))
       (to_rep1 (rec__value (select d19 4)))) (+ (+ (* (* big_2xxsingle 
  big_2xxsingle) (big1
                   ((_ zero_extend 32) (to_rep1 (rec__value (select d19 2)))))) (* 
  big_2xxsingle (big1
                  ((_ zero_extend 32) (to_rep1 (rec__value (select d19 3))))))) 
  (big1
    ((_ zero_extend 32) (to_rep1 (rec__value (select d19 4))))))))

;; Assert
(assert true)

;; H
(assert true)

;; H
(assert
  (= (big3 s14 s24 s34) (+ (+ (* (* big_2xxsingle big_2xxsingle) (big1
                                                                   ((_ zero_extend 32) 
                                                                   s14))) (* 
  big_2xxsingle (big1 ((_ zero_extend 32) s24)))) (big1
                                                    ((_ zero_extend 32) 
                                                    s34)))))

;; Assert
(assert true)

;; H
(assert true)

;; H
(assert (= (big1 zu1) (bv2nat64 zu1)))

;; Assert
(assert true)

;; Assert
(assert (= (us_attr__init (select qd5 1)) true))

;; H
(assert true)

;; H
(assert
  (= (big1 ((_ zero_extend 32) (to_rep1 (rec__value (select qd5 1))))) (bv2nat64 ((_ zero_extend 32) 
  (to_rep1
    (rec__value (select qd5 1)))))))

;; Assert
(assert true)

;; Assert
(assert true)

;; Goal def'vc
;; File "s-aridou.ads", line 125, characters 0-0
(assert
  (not (< scale2 64)))

(check-sat)
(exit)
