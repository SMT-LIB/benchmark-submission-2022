(set-logic AUFDTLIA)
(set-info :smt-lib-version 2.6)
(set-info :source |
Generated by: Shaokai Lin
Generated on: 2021-03-15
Generator: UCLID5
Application: Distributed systems ordering verification
Target Solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)

(set-option :produce-assignments true)


(declare-datatypes ((_enum_0 0)) (((NULL) (A1) (B1))))
(declare-datatypes ((_tuple_0 0)) (((_tuple_0 (__f1 Int) (__f2 Int)))))
(declare-datatypes ((_tuple_1 0)) (((_tuple_1 (__f1 _enum_0) (__f2 _tuple_0)))))
(declare-datatypes ((_tuple_2 0)) (((_tuple_2 (__f1 _tuple_1) (__f2 _tuple_1) (__f3 _tuple_1) (__f4 _tuple_1) (__f5 _tuple_1) (__f6 _tuple_1) (__f7 _tuple_1) (__f8 _tuple_1) (__f9 _tuple_1) (__f10 _tuple_1)))))
(declare-fun initial_2_trace_B () _tuple_2)
(declare-fun initial_1_trace_A () _tuple_2)
(assert (forall ((i Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_2_trace_B)
                     (ite (= i 9)
                          (__f10 initial_2_trace_B)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_2_trace_B)
                     (ite (= i 6)
                          (__f7 initial_2_trace_B)
                          (ite (= i 7) (__f8 initial_2_trace_B) a!1)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_2_trace_B)
                     (ite (= i 3)
                          (__f4 initial_2_trace_B)
                          (ite (= i 4) (__f5 initial_2_trace_B) a!2)))))
     (let ((a!4 (__f2 (ite (= i 0)
                           (__f1 initial_2_trace_B)
                           (ite (= i 1) (__f2 initial_2_trace_B) a!3)))))
       (or (not (and (>= i 0) (<= i 9)))
           (and (>= (__f1 a!4) 0) (= (__f2 a!4) 0)))))))
     
     ))
(assert (forall ((i Int) (j Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_2_trace_B)
                     (ite (= i 9)
                          (__f10 initial_2_trace_B)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
           (a!5 (ite (= j 8)
                     (__f9 initial_2_trace_B)
                     (ite (= j 9)
                          (__f10 initial_2_trace_B)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_2_trace_B)
                     (ite (= i 6)
                          (__f7 initial_2_trace_B)
                          (ite (= i 7) (__f8 initial_2_trace_B) a!1))))
           (a!6 (ite (= j 5)
                     (__f6 initial_2_trace_B)
                     (ite (= j 6)
                          (__f7 initial_2_trace_B)
                          (ite (= j 7) (__f8 initial_2_trace_B) a!5)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_2_trace_B)
                     (ite (= i 3)
                          (__f4 initial_2_trace_B)
                          (ite (= i 4) (__f5 initial_2_trace_B) a!2))))
           (a!7 (ite (= j 2)
                     (__f3 initial_2_trace_B)
                     (ite (= j 3)
                          (__f4 initial_2_trace_B)
                          (ite (= j 4) (__f5 initial_2_trace_B) a!6)))))
     (let ((a!4 (ite (= i 0)
                     (__f1 initial_2_trace_B)
                     (ite (= i 1) (__f2 initial_2_trace_B) a!3)))
           (a!8 (ite (= j 0)
                     (__f1 initial_2_trace_B)
                     (ite (= j 1) (__f2 initial_2_trace_B) a!7))))
       (or (not (and (>= i 0) (<= i 9) (>= j 0) (<= j 9)))
           (not (= (__f1 a!4) (__f1 a!8)))
           (not (= (__f2 a!4) (__f2 a!8)))
           (= i j))))))
     
     ))
(assert (forall ((i Int) (j Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_1_trace_A)
                     (ite (= i 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
           (a!5 (ite (= j 8)
                     (__f9 initial_1_trace_A)
                     (ite (= j 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_1_trace_A)
                     (ite (= i 6)
                          (__f7 initial_1_trace_A)
                          (ite (= i 7) (__f8 initial_1_trace_A) a!1))))
           (a!6 (ite (= j 5)
                     (__f6 initial_1_trace_A)
                     (ite (= j 6)
                          (__f7 initial_1_trace_A)
                          (ite (= j 7) (__f8 initial_1_trace_A) a!5)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_1_trace_A)
                     (ite (= i 3)
                          (__f4 initial_1_trace_A)
                          (ite (= i 4) (__f5 initial_1_trace_A) a!2))))
           (a!7 (ite (= j 2)
                     (__f3 initial_1_trace_A)
                     (ite (= j 3)
                          (__f4 initial_1_trace_A)
                          (ite (= j 4) (__f5 initial_1_trace_A) a!6)))))
     (let ((a!4 (ite (= i 0)
                     (__f1 initial_1_trace_A)
                     (ite (= i 1) (__f2 initial_1_trace_A) a!3)))
           (a!8 (ite (= j 0)
                     (__f1 initial_1_trace_A)
                     (ite (= j 1) (__f2 initial_1_trace_A) a!7))))
       (or (not (and (>= i 0) (<= i 9) (>= j 0) (<= j 9)))
           (= i j)
           (not (= (__f1 a!4) (__f1 a!8)))
           (not (= (__f2 a!4) (__f2 a!8))))))))
     
     ))
(assert (forall ((i Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_1_trace_A)
                     (ite (= i 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_1_trace_A)
                     (ite (= i 6)
                          (__f7 initial_1_trace_A)
                          (ite (= i 7) (__f8 initial_1_trace_A) a!1)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_1_trace_A)
                     (ite (= i 3)
                          (__f4 initial_1_trace_A)
                          (ite (= i 4) (__f5 initial_1_trace_A) a!2)))))
     (let ((a!4 (__f1 (ite (= i 0)
                           (__f1 initial_1_trace_A)
                           (ite (= i 1) (__f2 initial_1_trace_A) a!3)))))
       (or (not (and (>= i 0) (<= i 9))) (= a!4 A1) (= a!4 NULL))))))
     
     ))
(assert (forall ((j Int))
   (let ((a!1 (ite (= j 8)
                     (__f9 initial_2_trace_B)
                     (ite (= j 9)
                          (__f10 initial_2_trace_B)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!2 (ite (= j 5)
                     (__f6 initial_2_trace_B)
                     (ite (= j 6)
                          (__f7 initial_2_trace_B)
                          (ite (= j 7) (__f8 initial_2_trace_B) a!1)))))
     (let ((a!3 (ite (= j 2)
                     (__f3 initial_2_trace_B)
                     (ite (= j 3)
                          (__f4 initial_2_trace_B)
                          (ite (= j 4) (__f5 initial_2_trace_B) a!2)))))
     (let ((a!4 (__f1 (ite (= j 0)
                           (__f1 initial_2_trace_B)
                           (ite (= j 1) (__f2 initial_2_trace_B) a!3)))))
       (or (not (and (>= j 0) (<= j 9))) (= a!4 NULL) (= a!4 B1))))))
     
     ))
(assert (forall ((i Int) (j Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_2_trace_B)
                     (ite (= i 9)
                          (__f10 initial_2_trace_B)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
           (a!5 (ite (= j 8)
                     (__f9 initial_2_trace_B)
                     (ite (= j 9)
                          (__f10 initial_2_trace_B)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
           (a!9 (not (and (not (<= j i)) (>= i 0) (<= i 9) (>= j 0) (<= j 9)))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_2_trace_B)
                     (ite (= i 6)
                          (__f7 initial_2_trace_B)
                          (ite (= i 7) (__f8 initial_2_trace_B) a!1))))
           (a!6 (ite (= j 5)
                     (__f6 initial_2_trace_B)
                     (ite (= j 6)
                          (__f7 initial_2_trace_B)
                          (ite (= j 7) (__f8 initial_2_trace_B) a!5)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_2_trace_B)
                     (ite (= i 3)
                          (__f4 initial_2_trace_B)
                          (ite (= i 4) (__f5 initial_2_trace_B) a!2))))
           (a!7 (ite (= j 2)
                     (__f3 initial_2_trace_B)
                     (ite (= j 3)
                          (__f4 initial_2_trace_B)
                          (ite (= j 4) (__f5 initial_2_trace_B) a!6)))))
     (let ((a!4 (__f2 (ite (= i 0)
                           (__f1 initial_2_trace_B)
                           (ite (= i 1) (__f2 initial_2_trace_B) a!3))))
           (a!8 (__f2 (ite (= j 0)
                           (__f1 initial_2_trace_B)
                           (ite (= j 1) (__f2 initial_2_trace_B) a!7)))))
     (let ((a!10 (and (= (__f1 a!4) (__f1 a!8))
                      (not (<= (__f2 a!4) (__f2 a!8))))))
     (let ((a!11 (or (not (<= (__f1 a!4) (__f1 a!8))) a!10)))
       (or (= a!4 a!8) a!9 (and (not a!11) (not (= a!4 a!8))))))))))
     
     ))
(assert (forall ((i Int) (j Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_1_trace_A)
                     (ite (= i 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
           (a!5 (ite (= j 8)
                     (__f9 initial_1_trace_A)
                     (ite (= j 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
           (a!9 (not (and (not (<= j i)) (>= i 0) (<= i 9) (>= j 0) (<= j 9)))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_1_trace_A)
                     (ite (= i 6)
                          (__f7 initial_1_trace_A)
                          (ite (= i 7) (__f8 initial_1_trace_A) a!1))))
           (a!6 (ite (= j 5)
                     (__f6 initial_1_trace_A)
                     (ite (= j 6)
                          (__f7 initial_1_trace_A)
                          (ite (= j 7) (__f8 initial_1_trace_A) a!5)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_1_trace_A)
                     (ite (= i 3)
                          (__f4 initial_1_trace_A)
                          (ite (= i 4) (__f5 initial_1_trace_A) a!2))))
           (a!7 (ite (= j 2)
                     (__f3 initial_1_trace_A)
                     (ite (= j 3)
                          (__f4 initial_1_trace_A)
                          (ite (= j 4) (__f5 initial_1_trace_A) a!6)))))
     (let ((a!4 (__f2 (ite (= i 0)
                           (__f1 initial_1_trace_A)
                           (ite (= i 1) (__f2 initial_1_trace_A) a!3))))
           (a!8 (__f2 (ite (= j 0)
                           (__f1 initial_1_trace_A)
                           (ite (= j 1) (__f2 initial_1_trace_A) a!7)))))
     (let ((a!10 (and (= (__f1 a!4) (__f1 a!8))
                      (not (<= (__f2 a!4) (__f2 a!8))))))
     (let ((a!11 (or (not (<= (__f1 a!4) (__f1 a!8))) a!10)))
       (or (= a!4 a!8) a!9 (and (not a!11) (not (= a!4 a!8))))))))))
     
     ))
(assert (forall ((i Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_1_trace_A)
                     (ite (= i 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_1_trace_A)
                     (ite (= i 6)
                          (__f7 initial_1_trace_A)
                          (ite (= i 7) (__f8 initial_1_trace_A) a!1)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_1_trace_A)
                     (ite (= i 3)
                          (__f4 initial_1_trace_A)
                          (ite (= i 4) (__f5 initial_1_trace_A) a!2)))))
     (let ((a!4 (__f2 (ite (= i 0)
                           (__f1 initial_1_trace_A)
                           (ite (= i 1) (__f2 initial_1_trace_A) a!3)))))
       (or (not (and (>= i 0) (<= i 9)))
           (and (>= (__f1 a!4) 0) (= (__f2 a!4) 0)))))))
     
     ))
(assert (forall ((i Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_1_trace_A)
                     (ite (= i 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
           (a!5 (exists ((j Int))
                   (let ((a!1 (ite (= j 8)
                                     (__f9 initial_2_trace_B)
                                     (ite (= j 9)
                                          (__f10 initial_2_trace_B)
                                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
                           (a!5 (ite (= i 8)
                                     (__f9 initial_1_trace_A)
                                     (ite (= i 9)
                                          (__f10 initial_1_trace_A)
                                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
                     (let ((a!2 (ite (= j 5)
                                     (__f6 initial_2_trace_B)
                                     (ite (= j 6)
                                          (__f7 initial_2_trace_B)
                                          (ite (= j 7)
                                               (__f8 initial_2_trace_B)
                                               a!1))))
                           (a!6 (ite (= i 5)
                                     (__f6 initial_1_trace_A)
                                     (ite (= i 6)
                                          (__f7 initial_1_trace_A)
                                          (ite (= i 7)
                                               (__f8 initial_1_trace_A)
                                               a!5)))))
                     (let ((a!3 (ite (= j 2)
                                     (__f3 initial_2_trace_B)
                                     (ite (= j 3)
                                          (__f4 initial_2_trace_B)
                                          (ite (= j 4)
                                               (__f5 initial_2_trace_B)
                                               a!2))))
                           (a!7 (ite (= i 2)
                                     (__f3 initial_1_trace_A)
                                     (ite (= i 3)
                                          (__f4 initial_1_trace_A)
                                          (ite (= i 4)
                                               (__f5 initial_1_trace_A)
                                               a!6)))))
                     (let ((a!4 (ite (= j 0)
                                     (__f1 initial_2_trace_B)
                                     (ite (= j 1) (__f2 initial_2_trace_B) a!3)))
                           (a!8 (__f2 (ite (= i 0)
                                           (__f1 initial_1_trace_A)
                                           (ite (= i 1)
                                                (__f2 initial_1_trace_A)
                                                a!7)))))
                       (and (= (__f1 a!4) B1)
                            (= (__f2 a!4) (_tuple_0 (__f1 a!8) (__f2 a!8))))))))
                     
                     )))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_1_trace_A)
                     (ite (= i 6)
                          (__f7 initial_1_trace_A)
                          (ite (= i 7) (__f8 initial_1_trace_A) a!1)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_1_trace_A)
                     (ite (= i 3)
                          (__f4 initial_1_trace_A)
                          (ite (= i 4) (__f5 initial_1_trace_A) a!2)))))
     (let ((a!4 (__f1 (ite (= i 0)
                           (__f1 initial_1_trace_A)
                           (ite (= i 1) (__f2 initial_1_trace_A) a!3)))))
       (or (not (= a!4 A1)) a!5)))))
     
     ))
(assert (forall ((i Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_2_trace_B)
                     (ite (= i 9)
                          (__f10 initial_2_trace_B)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
           (a!5 (exists ((j Int))
                   (let ((a!1 (ite (= j 8)
                                     (__f9 initial_1_trace_A)
                                     (ite (= j 9)
                                          (__f10 initial_1_trace_A)
                                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
                           (a!5 (ite (= i 8)
                                     (__f9 initial_2_trace_B)
                                     (ite (= i 9)
                                          (__f10 initial_2_trace_B)
                                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
                     (let ((a!2 (ite (= j 5)
                                     (__f6 initial_1_trace_A)
                                     (ite (= j 6)
                                          (__f7 initial_1_trace_A)
                                          (ite (= j 7)
                                               (__f8 initial_1_trace_A)
                                               a!1))))
                           (a!6 (ite (= i 5)
                                     (__f6 initial_2_trace_B)
                                     (ite (= i 6)
                                          (__f7 initial_2_trace_B)
                                          (ite (= i 7)
                                               (__f8 initial_2_trace_B)
                                               a!5)))))
                     (let ((a!3 (ite (= j 2)
                                     (__f3 initial_1_trace_A)
                                     (ite (= j 3)
                                          (__f4 initial_1_trace_A)
                                          (ite (= j 4)
                                               (__f5 initial_1_trace_A)
                                               a!2))))
                           (a!7 (ite (= i 2)
                                     (__f3 initial_2_trace_B)
                                     (ite (= i 3)
                                          (__f4 initial_2_trace_B)
                                          (ite (= i 4)
                                               (__f5 initial_2_trace_B)
                                               a!6)))))
                     (let ((a!4 (ite (= j 0)
                                     (__f1 initial_1_trace_A)
                                     (ite (= j 1) (__f2 initial_1_trace_A) a!3)))
                           (a!8 (__f2 (ite (= i 0)
                                           (__f1 initial_2_trace_B)
                                           (ite (= i 1)
                                                (__f2 initial_2_trace_B)
                                                a!7)))))
                     (let ((a!9 (= (__f2 a!4)
                                   (_tuple_0 (+ 10 (__f1 a!8)) (__f2 a!8)))))
                       (and (= (__f1 a!4) A1) a!9))))))
                     
                     )))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_2_trace_B)
                     (ite (= i 6)
                          (__f7 initial_2_trace_B)
                          (ite (= i 7) (__f8 initial_2_trace_B) a!1)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_2_trace_B)
                     (ite (= i 3)
                          (__f4 initial_2_trace_B)
                          (ite (= i 4) (__f5 initial_2_trace_B) a!2)))))
     (let ((a!4 (__f1 (ite (= i 0)
                           (__f1 initial_2_trace_B)
                           (ite (= i 1) (__f2 initial_2_trace_B) a!3)))))
       (or (not (= a!4 B1)) a!5)))))
     
     ))
(assert (exists ((i Int) (j Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_1_trace_A)
                     (ite (= i 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
           (a!5 (ite (= j 8)
                     (__f9 initial_2_trace_B)
                     (ite (= j 9)
                          (__f10 initial_2_trace_B)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_1_trace_A)
                     (ite (= i 6)
                          (__f7 initial_1_trace_A)
                          (ite (= i 7) (__f8 initial_1_trace_A) a!1))))
           (a!6 (ite (= j 5)
                     (__f6 initial_2_trace_B)
                     (ite (= j 6)
                          (__f7 initial_2_trace_B)
                          (ite (= j 7) (__f8 initial_2_trace_B) a!5)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_1_trace_A)
                     (ite (= i 3)
                          (__f4 initial_1_trace_A)
                          (ite (= i 4) (__f5 initial_1_trace_A) a!2))))
           (a!7 (ite (= j 2)
                     (__f3 initial_2_trace_B)
                     (ite (= j 3)
                          (__f4 initial_2_trace_B)
                          (ite (= j 4) (__f5 initial_2_trace_B) a!6)))))
     (let ((a!4 (ite (= i 0)
                     (__f1 initial_1_trace_A)
                     (ite (= i 1) (__f2 initial_1_trace_A) a!3)))
           (a!8 (ite (= j 0)
                     (__f1 initial_2_trace_B)
                     (ite (= j 1) (__f2 initial_2_trace_B) a!7))))
     (let ((a!9 (not (<= (__f1 (__f2 a!4)) (__f1 (__f2 a!8)))))
           (a!10 (not (<= (__f2 (__f2 a!4)) (__f2 (__f2 a!8)))))
           (a!12 (or (and (= (__f1 a!4) B1) (= (__f1 a!8) A1))
                     (= (__f1 a!4) (__f1 a!8))
                     (and (= (__f1 a!4) A1) (= (__f1 a!8) B1))))
           (a!15 (not (<= (__f1 (__f2 a!8)) (__f1 (__f2 a!4)))))
           (a!16 (not (<= (__f2 (__f2 a!8)) (__f2 (__f2 a!4)))))
           (a!18 (or (and (= (__f1 a!8) B1) (= (__f1 a!4) A1))
                     (= (__f1 a!8) (__f1 a!4))
                     (and (= (__f1 a!8) A1) (= (__f1 a!4) B1)))))
     (let ((a!11 (and (= (__f1 (__f2 a!4)) (__f1 (__f2 a!8))) a!10))
           (a!17 (and (= (__f1 (__f2 a!8)) (__f1 (__f2 a!4))) a!16)))
     (let ((a!13 (and (not (or a!9 a!11)) (not (= (__f2 a!4) (__f2 a!8))) a!12))
           (a!19 (and (not (or a!15 a!17)) (not (= (__f2 a!8) (__f2 a!4))) a!18)))
     (let ((a!14 (or (and (= (__f2 a!4) (__f2 a!8))
                          (= (__f1 a!4) A1)
                          (= (__f1 a!8) B1))
                     a!13))
           (a!20 (or (and (= (__f2 a!8) (__f2 a!4))
                          (= (__f1 a!8) A1)
                          (= (__f1 a!4) B1))
                     a!19)))
       (and (not (= (__f1 a!4) NULL)) (not (= (__f1 a!8) NULL)) a!14 a!20)))))))))
     
     ))


(check-sat)

(exit)
