(set-logic AUFDTLIA)
(set-info :smt-lib-version 2.6)
(set-info :source |
Generated by: Shaokai Lin
Generated on: 2021-03-15
Generator: UCLID5
Application: Distributed systems ordering verification
Target Solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)

(set-option :produce-assignments true)

(declare-datatypes ((_enum_0 0)) (((NULL) (A1) (B1) (C1))))
(declare-datatypes ((_tuple_0 0)) (((_tuple_0 (__f1 Int) (__f2 Int)))))
(declare-datatypes ((_tuple_1 0)) (((_tuple_1 (__f1 _enum_0) (__f2 _tuple_0)))))
(declare-datatypes ((_tuple_2 0)) (((_tuple_2 (__f1 _tuple_1) (__f2 _tuple_1) (__f3 _tuple_1) (__f4 _tuple_1) (__f5 _tuple_1) (__f6 _tuple_1) (__f7 _tuple_1) (__f8 _tuple_1) (__f9 _tuple_1) (__f10 _tuple_1)))))
(declare-fun initial_1_trace_A () _tuple_2)
(declare-fun initial_3_trace_B () _tuple_2)
(declare-fun initial_2_trace_C () _tuple_2)
(assert (forall ((i Int) (j Int))
   (let ((a!1 (not (and (not (<= j i)) (>= i 0) (<= i 9) (>= j 0) (<= j 9))))
           (a!2 (ite (= i 8)
                     (__f9 initial_1_trace_A)
                     (ite (= i 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
           (a!6 (ite (= j 8)
                     (__f9 initial_1_trace_A)
                     (ite (= j 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!3 (ite (= i 5)
                     (__f6 initial_1_trace_A)
                     (ite (= i 6)
                          (__f7 initial_1_trace_A)
                          (ite (= i 7) (__f8 initial_1_trace_A) a!2))))
           (a!7 (ite (= j 5)
                     (__f6 initial_1_trace_A)
                     (ite (= j 6)
                          (__f7 initial_1_trace_A)
                          (ite (= j 7) (__f8 initial_1_trace_A) a!6)))))
     (let ((a!4 (ite (= i 2)
                     (__f3 initial_1_trace_A)
                     (ite (= i 3)
                          (__f4 initial_1_trace_A)
                          (ite (= i 4) (__f5 initial_1_trace_A) a!3))))
           (a!8 (ite (= j 2)
                     (__f3 initial_1_trace_A)
                     (ite (= j 3)
                          (__f4 initial_1_trace_A)
                          (ite (= j 4) (__f5 initial_1_trace_A) a!7)))))
     (let ((a!5 (__f2 (ite (= i 0)
                           (__f1 initial_1_trace_A)
                           (ite (= i 1) (__f2 initial_1_trace_A) a!4))))
           (a!9 (__f2 (ite (= j 0)
                           (__f1 initial_1_trace_A)
                           (ite (= j 1) (__f2 initial_1_trace_A) a!8)))))
     (let ((a!10 (and (= (__f1 a!5) (__f1 a!9))
                      (not (<= (__f2 a!5) (__f2 a!9))))))
     (let ((a!11 (or (not (<= (__f1 a!5) (__f1 a!9))) a!10)))
       (or a!1 (= a!5 a!9) (and (not a!11) (not (= a!5 a!9))))))))))
     
     ))
(assert (forall ((i Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_1_trace_A)
                     (ite (= i 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
           (a!5 (exists ((j Int))
                   (let ((a!1 (ite (= j 8)
                                     (__f9 initial_3_trace_B)
                                     (ite (= j 9)
                                          (__f10 initial_3_trace_B)
                                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
                           (a!5 (ite (= i 8)
                                     (__f9 initial_1_trace_A)
                                     (ite (= i 9)
                                          (__f10 initial_1_trace_A)
                                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
                     (let ((a!2 (ite (= j 5)
                                     (__f6 initial_3_trace_B)
                                     (ite (= j 6)
                                          (__f7 initial_3_trace_B)
                                          (ite (= j 7)
                                               (__f8 initial_3_trace_B)
                                               a!1))))
                           (a!6 (ite (= i 5)
                                     (__f6 initial_1_trace_A)
                                     (ite (= i 6)
                                          (__f7 initial_1_trace_A)
                                          (ite (= i 7)
                                               (__f8 initial_1_trace_A)
                                               a!5)))))
                     (let ((a!3 (ite (= j 2)
                                     (__f3 initial_3_trace_B)
                                     (ite (= j 3)
                                          (__f4 initial_3_trace_B)
                                          (ite (= j 4)
                                               (__f5 initial_3_trace_B)
                                               a!2))))
                           (a!7 (ite (= i 2)
                                     (__f3 initial_1_trace_A)
                                     (ite (= i 3)
                                          (__f4 initial_1_trace_A)
                                          (ite (= i 4)
                                               (__f5 initial_1_trace_A)
                                               a!6)))))
                     (let ((a!4 (ite (= j 0)
                                     (__f1 initial_3_trace_B)
                                     (ite (= j 1) (__f2 initial_3_trace_B) a!3)))
                           (a!8 (__f2 (ite (= i 0)
                                           (__f1 initial_1_trace_A)
                                           (ite (= i 1)
                                                (__f2 initial_1_trace_A)
                                                a!7)))))
                       (and (= (__f1 a!4) B1)
                            (= (__f2 a!4) (_tuple_0 (__f1 a!8) (__f2 a!8))))))))
                     
                     )))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_1_trace_A)
                     (ite (= i 6)
                          (__f7 initial_1_trace_A)
                          (ite (= i 7) (__f8 initial_1_trace_A) a!1)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_1_trace_A)
                     (ite (= i 3)
                          (__f4 initial_1_trace_A)
                          (ite (= i 4) (__f5 initial_1_trace_A) a!2)))))
     (let ((a!4 (__f1 (ite (= i 0)
                           (__f1 initial_1_trace_A)
                           (ite (= i 1) (__f2 initial_1_trace_A) a!3)))))
       (or (not (= a!4 A1)) a!5)))))
     
     ))
(assert (forall ((i Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_2_trace_C)
                     (ite (= i 9)
                          (__f10 initial_2_trace_C)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_2_trace_C)
                     (ite (= i 6)
                          (__f7 initial_2_trace_C)
                          (ite (= i 7) (__f8 initial_2_trace_C) a!1)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_2_trace_C)
                     (ite (= i 3)
                          (__f4 initial_2_trace_C)
                          (ite (= i 4) (__f5 initial_2_trace_C) a!2)))))
     (let ((a!4 (__f2 (ite (= i 0)
                           (__f1 initial_2_trace_C)
                           (ite (= i 1) (__f2 initial_2_trace_C) a!3)))))
       (or (not (and (>= i 0) (<= i 9)))
           (and (>= (__f1 a!4) 0) (>= (__f2 a!4) 0)))))))
     
     ))
(assert (forall ((i Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_1_trace_A)
                     (ite (= i 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_1_trace_A)
                     (ite (= i 6)
                          (__f7 initial_1_trace_A)
                          (ite (= i 7) (__f8 initial_1_trace_A) a!1)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_1_trace_A)
                     (ite (= i 3)
                          (__f4 initial_1_trace_A)
                          (ite (= i 4) (__f5 initial_1_trace_A) a!2)))))
     (let ((a!4 (__f2 (ite (= i 0)
                           (__f1 initial_1_trace_A)
                           (ite (= i 1) (__f2 initial_1_trace_A) a!3)))))
       (or (not (and (>= i 0) (<= i 9)))
           (and (>= (__f1 a!4) 0) (>= (__f2 a!4) 0)))))))
     
     ))
(assert (forall ((i Int) (j Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_1_trace_A)
                     (ite (= i 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
           (a!5 (ite (= j 8)
                     (__f9 initial_1_trace_A)
                     (ite (= j 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_1_trace_A)
                     (ite (= i 6)
                          (__f7 initial_1_trace_A)
                          (ite (= i 7) (__f8 initial_1_trace_A) a!1))))
           (a!6 (ite (= j 5)
                     (__f6 initial_1_trace_A)
                     (ite (= j 6)
                          (__f7 initial_1_trace_A)
                          (ite (= j 7) (__f8 initial_1_trace_A) a!5)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_1_trace_A)
                     (ite (= i 3)
                          (__f4 initial_1_trace_A)
                          (ite (= i 4) (__f5 initial_1_trace_A) a!2))))
           (a!7 (ite (= j 2)
                     (__f3 initial_1_trace_A)
                     (ite (= j 3)
                          (__f4 initial_1_trace_A)
                          (ite (= j 4) (__f5 initial_1_trace_A) a!6)))))
     (let ((a!4 (ite (= i 0)
                     (__f1 initial_1_trace_A)
                     (ite (= i 1) (__f2 initial_1_trace_A) a!3)))
           (a!8 (ite (= j 0)
                     (__f1 initial_1_trace_A)
                     (ite (= j 1) (__f2 initial_1_trace_A) a!7))))
       (or (not (= (__f2 a!4) (__f2 a!8)))
           (not (and (>= i 0) (<= i 9) (>= j 0) (<= j 9)))
           (not (= (__f1 a!4) (__f1 a!8)))
           (= i j))))))
     
     ))
(assert (forall ((i Int) (j Int))
   (let ((a!1 (not (and (not (<= j i)) (>= i 0) (<= i 9) (>= j 0) (<= j 9))))
           (a!2 (ite (= i 8)
                     (__f9 initial_2_trace_C)
                     (ite (= i 9)
                          (__f10 initial_2_trace_C)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
           (a!6 (ite (= j 8)
                     (__f9 initial_2_trace_C)
                     (ite (= j 9)
                          (__f10 initial_2_trace_C)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!3 (ite (= i 5)
                     (__f6 initial_2_trace_C)
                     (ite (= i 6)
                          (__f7 initial_2_trace_C)
                          (ite (= i 7) (__f8 initial_2_trace_C) a!2))))
           (a!7 (ite (= j 5)
                     (__f6 initial_2_trace_C)
                     (ite (= j 6)
                          (__f7 initial_2_trace_C)
                          (ite (= j 7) (__f8 initial_2_trace_C) a!6)))))
     (let ((a!4 (ite (= i 2)
                     (__f3 initial_2_trace_C)
                     (ite (= i 3)
                          (__f4 initial_2_trace_C)
                          (ite (= i 4) (__f5 initial_2_trace_C) a!3))))
           (a!8 (ite (= j 2)
                     (__f3 initial_2_trace_C)
                     (ite (= j 3)
                          (__f4 initial_2_trace_C)
                          (ite (= j 4) (__f5 initial_2_trace_C) a!7)))))
     (let ((a!5 (__f2 (ite (= i 0)
                           (__f1 initial_2_trace_C)
                           (ite (= i 1) (__f2 initial_2_trace_C) a!4))))
           (a!9 (__f2 (ite (= j 0)
                           (__f1 initial_2_trace_C)
                           (ite (= j 1) (__f2 initial_2_trace_C) a!8)))))
     (let ((a!10 (and (= (__f1 a!5) (__f1 a!9))
                      (not (<= (__f2 a!5) (__f2 a!9))))))
     (let ((a!11 (or (not (<= (__f1 a!5) (__f1 a!9))) a!10)))
       (or a!1 (= a!5 a!9) (and (not a!11) (not (= a!5 a!9))))))))))
     
     ))
(assert (forall ((i Int) (j Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_2_trace_C)
                     (ite (= i 9)
                          (__f10 initial_2_trace_C)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
           (a!5 (ite (= j 8)
                     (__f9 initial_2_trace_C)
                     (ite (= j 9)
                          (__f10 initial_2_trace_C)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_2_trace_C)
                     (ite (= i 6)
                          (__f7 initial_2_trace_C)
                          (ite (= i 7) (__f8 initial_2_trace_C) a!1))))
           (a!6 (ite (= j 5)
                     (__f6 initial_2_trace_C)
                     (ite (= j 6)
                          (__f7 initial_2_trace_C)
                          (ite (= j 7) (__f8 initial_2_trace_C) a!5)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_2_trace_C)
                     (ite (= i 3)
                          (__f4 initial_2_trace_C)
                          (ite (= i 4) (__f5 initial_2_trace_C) a!2))))
           (a!7 (ite (= j 2)
                     (__f3 initial_2_trace_C)
                     (ite (= j 3)
                          (__f4 initial_2_trace_C)
                          (ite (= j 4) (__f5 initial_2_trace_C) a!6)))))
     (let ((a!4 (ite (= i 0)
                     (__f1 initial_2_trace_C)
                     (ite (= i 1) (__f2 initial_2_trace_C) a!3)))
           (a!8 (ite (= j 0)
                     (__f1 initial_2_trace_C)
                     (ite (= j 1) (__f2 initial_2_trace_C) a!7))))
       (or (not (and (>= i 0) (<= i 9) (>= j 0) (<= j 9)))
           (= i j)
           (not (= (__f2 a!4) (__f2 a!8)))
           (not (= (__f1 a!4) (__f1 a!8))))))))
     
     ))
(assert (forall ((j Int))
   (let ((a!1 (ite (= j 8)
                     (__f9 initial_3_trace_B)
                     (ite (= j 9)
                          (__f10 initial_3_trace_B)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!2 (ite (= j 5)
                     (__f6 initial_3_trace_B)
                     (ite (= j 6)
                          (__f7 initial_3_trace_B)
                          (ite (= j 7) (__f8 initial_3_trace_B) a!1)))))
     (let ((a!3 (ite (= j 2)
                     (__f3 initial_3_trace_B)
                     (ite (= j 3)
                          (__f4 initial_3_trace_B)
                          (ite (= j 4) (__f5 initial_3_trace_B) a!2)))))
     (let ((a!4 (__f1 (ite (= j 0)
                           (__f1 initial_3_trace_B)
                           (ite (= j 1) (__f2 initial_3_trace_B) a!3)))))
       (or (= a!4 B1) (not (and (>= j 0) (<= j 9))) (= a!4 NULL))))))
     
     ))
(assert (forall ((i Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_3_trace_B)
                     (ite (= i 9)
                          (__f10 initial_3_trace_B)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_3_trace_B)
                     (ite (= i 6)
                          (__f7 initial_3_trace_B)
                          (ite (= i 7) (__f8 initial_3_trace_B) a!1)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_3_trace_B)
                     (ite (= i 3)
                          (__f4 initial_3_trace_B)
                          (ite (= i 4) (__f5 initial_3_trace_B) a!2)))))
     (let ((a!4 (__f2 (ite (= i 0)
                           (__f1 initial_3_trace_B)
                           (ite (= i 1) (__f2 initial_3_trace_B) a!3)))))
       (or (not (and (>= i 0) (<= i 9)))
           (and (>= (__f1 a!4) 0) (>= (__f2 a!4) 0)))))))
     
     ))
(assert (forall ((k Int))
   (let ((a!1 (ite (= k 8)
                     (__f9 initial_2_trace_C)
                     (ite (= k 9)
                          (__f10 initial_2_trace_C)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!2 (ite (= k 5)
                     (__f6 initial_2_trace_C)
                     (ite (= k 6)
                          (__f7 initial_2_trace_C)
                          (ite (= k 7) (__f8 initial_2_trace_C) a!1)))))
     (let ((a!3 (ite (= k 2)
                     (__f3 initial_2_trace_C)
                     (ite (= k 3)
                          (__f4 initial_2_trace_C)
                          (ite (= k 4) (__f5 initial_2_trace_C) a!2)))))
     (let ((a!4 (__f1 (ite (= k 0)
                           (__f1 initial_2_trace_C)
                           (ite (= k 1) (__f2 initial_2_trace_C) a!3)))))
       (or (not (and (>= k 0) (<= k 9))) (= a!4 NULL) (= a!4 C1))))))
     
     ))
(assert (forall ((i Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_1_trace_A)
                     (ite (= i 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
           (a!5 (exists ((j Int))
                   (let ((a!1 (ite (= j 8)
                                     (__f9 initial_2_trace_C)
                                     (ite (= j 9)
                                          (__f10 initial_2_trace_C)
                                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
                           (a!5 (ite (= i 8)
                                     (__f9 initial_1_trace_A)
                                     (ite (= i 9)
                                          (__f10 initial_1_trace_A)
                                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
                     (let ((a!2 (ite (= j 5)
                                     (__f6 initial_2_trace_C)
                                     (ite (= j 6)
                                          (__f7 initial_2_trace_C)
                                          (ite (= j 7)
                                               (__f8 initial_2_trace_C)
                                               a!1))))
                           (a!6 (ite (= i 5)
                                     (__f6 initial_1_trace_A)
                                     (ite (= i 6)
                                          (__f7 initial_1_trace_A)
                                          (ite (= i 7)
                                               (__f8 initial_1_trace_A)
                                               a!5)))))
                     (let ((a!3 (ite (= j 2)
                                     (__f3 initial_2_trace_C)
                                     (ite (= j 3)
                                          (__f4 initial_2_trace_C)
                                          (ite (= j 4)
                                               (__f5 initial_2_trace_C)
                                               a!2))))
                           (a!7 (ite (= i 2)
                                     (__f3 initial_1_trace_A)
                                     (ite (= i 3)
                                          (__f4 initial_1_trace_A)
                                          (ite (= i 4)
                                               (__f5 initial_1_trace_A)
                                               a!6)))))
                     (let ((a!4 (ite (= j 0)
                                     (__f1 initial_2_trace_C)
                                     (ite (= j 1) (__f2 initial_2_trace_C) a!3)))
                           (a!8 (__f2 (ite (= i 0)
                                           (__f1 initial_1_trace_A)
                                           (ite (= i 1)
                                                (__f2 initial_1_trace_A)
                                                a!7)))))
                       (and (= (__f1 a!4) C1)
                            (= (__f2 a!4) (_tuple_0 (__f1 a!8) (__f2 a!8))))))))
                     
                     )))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_1_trace_A)
                     (ite (= i 6)
                          (__f7 initial_1_trace_A)
                          (ite (= i 7) (__f8 initial_1_trace_A) a!1)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_1_trace_A)
                     (ite (= i 3)
                          (__f4 initial_1_trace_A)
                          (ite (= i 4) (__f5 initial_1_trace_A) a!2)))))
     (let ((a!4 (__f1 (ite (= i 0)
                           (__f1 initial_1_trace_A)
                           (ite (= i 1) (__f2 initial_1_trace_A) a!3)))))
       (or (not (= a!4 A1)) a!5)))))
     
     ))
(assert (forall ((i Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_1_trace_A)
                     (ite (= i 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_1_trace_A)
                     (ite (= i 6)
                          (__f7 initial_1_trace_A)
                          (ite (= i 7) (__f8 initial_1_trace_A) a!1)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_1_trace_A)
                     (ite (= i 3)
                          (__f4 initial_1_trace_A)
                          (ite (= i 4) (__f5 initial_1_trace_A) a!2)))))
     (let ((a!4 (__f1 (ite (= i 0)
                           (__f1 initial_1_trace_A)
                           (ite (= i 1) (__f2 initial_1_trace_A) a!3)))))
       (or (= a!4 A1) (not (and (>= i 0) (<= i 9))) (= a!4 NULL))))))
     
     ))
(assert (forall ((i Int) (j Int))
   (let ((a!1 (ite (= i 8)
                     (__f9 initial_3_trace_B)
                     (ite (= i 9)
                          (__f10 initial_3_trace_B)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
           (a!5 (ite (= j 8)
                     (__f9 initial_3_trace_B)
                     (ite (= j 9)
                          (__f10 initial_3_trace_B)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_3_trace_B)
                     (ite (= i 6)
                          (__f7 initial_3_trace_B)
                          (ite (= i 7) (__f8 initial_3_trace_B) a!1))))
           (a!6 (ite (= j 5)
                     (__f6 initial_3_trace_B)
                     (ite (= j 6)
                          (__f7 initial_3_trace_B)
                          (ite (= j 7) (__f8 initial_3_trace_B) a!5)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_3_trace_B)
                     (ite (= i 3)
                          (__f4 initial_3_trace_B)
                          (ite (= i 4) (__f5 initial_3_trace_B) a!2))))
           (a!7 (ite (= j 2)
                     (__f3 initial_3_trace_B)
                     (ite (= j 3)
                          (__f4 initial_3_trace_B)
                          (ite (= j 4) (__f5 initial_3_trace_B) a!6)))))
     (let ((a!4 (ite (= i 0)
                     (__f1 initial_3_trace_B)
                     (ite (= i 1) (__f2 initial_3_trace_B) a!3)))
           (a!8 (ite (= j 0)
                     (__f1 initial_3_trace_B)
                     (ite (= j 1) (__f2 initial_3_trace_B) a!7))))
       (or (not (and (>= i 0) (<= i 9) (>= j 0) (<= j 9)))
           (= i j)
           (not (= (__f1 a!4) (__f1 a!8)))
           (not (= (__f2 a!4) (__f2 a!8))))))))
     
     ))
(assert (forall ((i Int) (j Int))
   (let ((a!1 (not (and (not (<= j i)) (>= i 0) (<= i 9) (>= j 0) (<= j 9))))
           (a!2 (ite (= i 8)
                     (__f9 initial_3_trace_B)
                     (ite (= i 9)
                          (__f10 initial_3_trace_B)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
           (a!6 (ite (= j 8)
                     (__f9 initial_3_trace_B)
                     (ite (= j 9)
                          (__f10 initial_3_trace_B)
                          (_tuple_1 NULL (_tuple_0 (- 1) (- 1)))))))
     (let ((a!3 (ite (= i 5)
                     (__f6 initial_3_trace_B)
                     (ite (= i 6)
                          (__f7 initial_3_trace_B)
                          (ite (= i 7) (__f8 initial_3_trace_B) a!2))))
           (a!7 (ite (= j 5)
                     (__f6 initial_3_trace_B)
                     (ite (= j 6)
                          (__f7 initial_3_trace_B)
                          (ite (= j 7) (__f8 initial_3_trace_B) a!6)))))
     (let ((a!4 (ite (= i 2)
                     (__f3 initial_3_trace_B)
                     (ite (= i 3)
                          (__f4 initial_3_trace_B)
                          (ite (= i 4) (__f5 initial_3_trace_B) a!3))))
           (a!8 (ite (= j 2)
                     (__f3 initial_3_trace_B)
                     (ite (= j 3)
                          (__f4 initial_3_trace_B)
                          (ite (= j 4) (__f5 initial_3_trace_B) a!7)))))
     (let ((a!5 (__f2 (ite (= i 0)
                           (__f1 initial_3_trace_B)
                           (ite (= i 1) (__f2 initial_3_trace_B) a!4))))
           (a!9 (__f2 (ite (= j 0)
                           (__f1 initial_3_trace_B)
                           (ite (= j 1) (__f2 initial_3_trace_B) a!8)))))
     (let ((a!10 (and (= (__f1 a!5) (__f1 a!9))
                      (not (<= (__f2 a!5) (__f2 a!9))))))
     (let ((a!11 (or (not (<= (__f1 a!5) (__f1 a!9))) a!10)))
       (or a!1 (= a!5 a!9) (and (not a!11) (not (= a!5 a!9))))))))))
     
     ))
(assert (let ((a!1 (forall ((i Int))
              (let ((a!1 (ite (= i 8)
                                (__f9 initial_1_trace_A)
                                (ite (= i 9)
                                     (__f10 initial_1_trace_A)
                                     (_tuple_1 NULL (_tuple_0 (- 1) (- 1))))))
                      (a!5 (exists ((j Int) (k Int))
                              (let ((a!1 (ite (= i 8)
                                                (__f9 initial_1_trace_A)
                                                (ite (= i 9)
                                                     (__f10 initial_1_trace_A)
                                                     (_tuple_1 NULL
                                                               (_tuple_0 (- 1)
                                                                         (- 1))))))
                                      (a!5 (ite (= j 8)
                                                (__f9 initial_3_trace_B)
                                                (ite (= j 9)
                                                     (__f10 initial_3_trace_B)
                                                     (_tuple_1 NULL
                                                               (_tuple_0 (- 1)
                                                                         (- 1))))))
                                      (a!20 (ite (= k 8)
                                                 (__f9 initial_2_trace_C)
                                                 (ite (= k 9)
                                                      (__f10 initial_2_trace_C)
                                                      (_tuple_1 NULL
                                                                (_tuple_0 (- 1)
                                                                          (- 1)))))))
                                (let ((a!2 (ite (= i 5)
                                                (__f6 initial_1_trace_A)
                                                (ite (= i 6)
                                                     (__f7 initial_1_trace_A)
                                                     (ite (= i 7)
                                                          (__f8 initial_1_trace_A)
                                                          a!1))))
                                      (a!6 (ite (= j 5)
                                                (__f6 initial_3_trace_B)
                                                (ite (= j 6)
                                                     (__f7 initial_3_trace_B)
                                                     (ite (= j 7)
                                                          (__f8 initial_3_trace_B)
                                                          a!5))))
                                      (a!21 (ite (= k 5)
                                                 (__f6 initial_2_trace_C)
                                                 (ite (= k 6)
                                                      (__f7 initial_2_trace_C)
                                                      (ite (= k 7)
                                                           (__f8 initial_2_trace_C)
                                                           a!20)))))
                                (let ((a!3 (ite (= i 2)
                                                (__f3 initial_1_trace_A)
                                                (ite (= i 3)
                                                     (__f4 initial_1_trace_A)
                                                     (ite (= i 4)
                                                          (__f5 initial_1_trace_A)
                                                          a!2))))
                                      (a!7 (ite (= j 2)
                                                (__f3 initial_3_trace_B)
                                                (ite (= j 3)
                                                     (__f4 initial_3_trace_B)
                                                     (ite (= j 4)
                                                          (__f5 initial_3_trace_B)
                                                          a!6))))
                                      (a!22 (ite (= k 2)
                                                 (__f3 initial_2_trace_C)
                                                 (ite (= k 3)
                                                      (__f4 initial_2_trace_C)
                                                      (ite (= k 4)
                                                           (__f5 initial_2_trace_C)
                                                           a!21)))))
                                (let ((a!4 (ite (= i 0)
                                                (__f1 initial_1_trace_A)
                                                (ite (= i 1)
                                                     (__f2 initial_1_trace_A)
                                                     a!3)))
                                      (a!8 (ite (= j 0)
                                                (__f1 initial_3_trace_B)
                                                (ite (= j 1)
                                                     (__f2 initial_3_trace_B)
                                                     a!7)))
                                      (a!23 (ite (= k 0)
                                                 (__f1 initial_2_trace_C)
                                                 (ite (= k 1)
                                                      (__f2 initial_2_trace_C)
                                                      a!22))))
                                (let ((a!9 (or (and (= (__f1 a!4) A1)
                                                    (= (__f1 a!8) B1))
                                               (and (= (__f1 a!4) A1)
                                                    (= (__f1 a!8) C1))))
                                      (a!10 (not (<= (__f1 (__f2 a!4))
                                                     (__f1 (__f2 a!8)))))
                                      (a!11 (not (<= (__f2 (__f2 a!4))
                                                     (__f2 (__f2 a!8)))))
                                      (a!13 (or (and (= (__f1 a!4) A1)
                                                     (= (__f1 a!8) B1))
                                                (and (= (__f1 a!4) B1)
                                                     (= (__f1 a!8) C1))))
                                      (a!16 (+ (__f1 (__f2 a!4))
                                               (* (- 1) (__f1 (__f2 a!8)))))
                                      (a!17 (+ (__f1 (__f2 a!8))
                                               (* (- 1) (__f1 (__f2 a!4)))))
                                      (a!18 (ite (and (= (__f1 a!4) A1)
                                                      (= (__f1 a!8) C1))
                                                 0
                                                 (- 1)))
                                      (a!24 (or (and (= (__f1 a!4) A1)
                                                     (= (__f1 a!23) B1))
                                                (and (= (__f1 a!4) A1)
                                                     (= (__f1 a!23) C1))))
                                      (a!25 (not (<= (__f1 (__f2 a!4))
                                                     (__f1 (__f2 a!23)))))
                                      (a!26 (not (<= (__f2 (__f2 a!4))
                                                     (__f2 (__f2 a!23)))))
                                      (a!28 (or (and (= (__f1 a!4) A1)
                                                     (= (__f1 a!23) B1))
                                                (and (= (__f1 a!4) B1)
                                                     (= (__f1 a!23) C1))))
                                      (a!31 (+ (__f1 (__f2 a!4))
                                               (* (- 1) (__f1 (__f2 a!23)))))
                                      (a!32 (+ (__f1 (__f2 a!23))
                                               (* (- 1) (__f1 (__f2 a!4)))))
                                      (a!33 (ite (and (= (__f1 a!4) A1)
                                                      (= (__f1 a!23) C1))
                                                 0
                                                 (- 1)))
                                      (a!35 (or (and (= (__f1 a!23) A1)
                                                     (= (__f1 a!8) B1))
                                                (and (= (__f1 a!23) A1)
                                                     (= (__f1 a!8) C1))))
                                      (a!36 (not (<= (__f1 (__f2 a!23))
                                                     (__f1 (__f2 a!8)))))
                                      (a!37 (not (<= (__f2 (__f2 a!23))
                                                     (__f2 (__f2 a!8)))))
                                      (a!39 (or (and (= (__f1 a!23) A1)
                                                     (= (__f1 a!8) B1))
                                                (and (= (__f1 a!23) B1)
                                                     (= (__f1 a!8) C1)))))
                                (let ((a!12 (and (= (__f1 (__f2 a!4))
                                                    (__f1 (__f2 a!8)))
                                                 a!11))
                                      (a!19 (ite (and (= (__f1 a!4) A1)
                                                      (= (__f1 a!8) B1))
                                                 0
                                                 a!18))
                                      (a!27 (and (= (__f1 (__f2 a!4))
                                                    (__f1 (__f2 a!23)))
                                                 a!26))
                                      (a!34 (ite (and (= (__f1 a!4) A1)
                                                      (= (__f1 a!23) B1))
                                                 0
                                                 a!33))
                                      (a!38 (and (= (__f1 (__f2 a!23))
                                                    (__f1 (__f2 a!8)))
                                                 a!37)))
                                (let ((a!14 (and (not (or a!10 a!12))
                                                 (not (= (__f2 a!4) (__f2 a!8)))
                                                 a!13))
                                      (a!29 (and (not (or a!25 a!27))
                                                 (not (= (__f2 a!4) (__f2 a!23)))
                                                 a!28))
                                      (a!40 (and (not (or a!36 a!38))
                                                 (not (= (__f2 a!23) (__f2 a!8)))
                                                 a!39)))
                                (let ((a!15 (or (and (= (__f2 a!4) (__f2 a!8))
                                                     a!9)
                                                a!14))
                                      (a!30 (or (and (= (__f2 a!4) (__f2 a!23))
                                                     a!24)
                                                a!29))
                                      (a!41 (or (and (= (__f2 a!23) (__f2 a!8))
                                                     a!35)
                                                a!40)))
                                  (and a!15
                                       a!9
                                       (= (ite (or a!10 a!12) a!16 a!17) a!19)
                                       a!30
                                       a!24
                                       (= (ite (or a!25 a!27) a!31 a!32) a!34)
                                       a!41)))))))))
                                
                                )))
                (let ((a!2 (ite (= i 5)
                                (__f6 initial_1_trace_A)
                                (ite (= i 6)
                                     (__f7 initial_1_trace_A)
                                     (ite (= i 7) (__f8 initial_1_trace_A) a!1)))))
                (let ((a!3 (ite (= i 2)
                                (__f3 initial_1_trace_A)
                                (ite (= i 3)
                                     (__f4 initial_1_trace_A)
                                     (ite (= i 4) (__f5 initial_1_trace_A) a!2)))))
                (let ((a!4 (__f1 (ite (= i 0)
                                      (__f1 initial_1_trace_A)
                                      (ite (= i 1) (__f2 initial_1_trace_A) a!3)))))
                  (or (not (= a!4 A1)) (not (and (>= i 0) (<= i 9))) a!5)))))
                
                )))
  (not a!1)))


(check-sat)

(exit)
