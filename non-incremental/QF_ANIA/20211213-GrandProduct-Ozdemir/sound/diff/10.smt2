
(set-info :smt-lib-version 2.6)
(set-logic QF_ANIA)
(set-info :source |
Generated by: Alex Ozdemir
Generated on: 2021-12-13
Generator: Z3Py API
Application: Soundness counterexamples for a cryptographic argument
Target solver: cvc5, Z3

# The special soundness of PLONK's grand product argument

Let F be a prime-order field and n a natural less than F's size. Let n = {1,
2, .., n} be a subset of F. The PLONK[1] grand product argument relies on the
fact that given a permutation pi: [n] -> [n] and functions A, B: [n] -> [n],

    prod_i (A(i) + beta * i + gamma) = prod_i (B(i) + beta * pi(i) + gamma)

holds for random beta, gamma in F with good probability only when A composed
with pi is B.

Does this implication hold in a deterministic setting, where the above is
checked for distinct---but non-random---beta and gamma?

If it is checked for n+1 distinct values of beta, and for each value of beta,
n+1 distinct values of gamma, then yes. One can prove this.

If it is checked for 2 distinct values of beta, and for each value of beta, n+1
distinct values of gamma, then no.

This series of benchmarks checks the implication holds
* for varying n
* for a fixed permutation pi = (2 3 ... n 1)
* for all A and B
  * that must be equal ("same") or may differ ("diff")
* for all distinct 2 ("unsound") or n+1 ("sound") beta values

rather than instantiating gamma explicitly, we just check that the multisets

    {{A[i] + beta * i}}_i  ==  {{B[i] + beta * pi(i)}}_i

are equal.

[1]: https://eprint.iacr.org/2019/953

|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "crafted")
(set-info :status unsat)
; benchmark generated from python API
(declare-fun b__10 () Int)
(declare-fun b__9 () Int)
(declare-fun b__8 () Int)
(declare-fun b__7 () Int)
(declare-fun b__6 () Int)
(declare-fun b__5 () Int)
(declare-fun b__4 () Int)
(declare-fun b__3 () Int)
(declare-fun b__2 () Int)
(declare-fun b__1 () Int)
(declare-fun b__0 () Int)
(declare-fun w__0 () Int)
(declare-fun v__0 () Int)
(declare-fun w__1 () Int)
(declare-fun v__1 () Int)
(declare-fun w__2 () Int)
(declare-fun v__2 () Int)
(declare-fun w__3 () Int)
(declare-fun v__3 () Int)
(declare-fun w__4 () Int)
(declare-fun v__4 () Int)
(declare-fun w__5 () Int)
(declare-fun v__5 () Int)
(declare-fun w__6 () Int)
(declare-fun v__6 () Int)
(declare-fun w__7 () Int)
(declare-fun v__7 () Int)
(declare-fun w__8 () Int)
(declare-fun v__8 () Int)
(declare-fun w__9 () Int)
(declare-fun v__9 () Int)
(declare-fun start () (Array Int Int))
(assert
 (and (distinct b__0 b__1 b__2 b__3 b__4 b__5 b__6 b__7 b__8 b__9 b__10) true))
(assert
 (>= w__0 0))
(assert
 (>= v__0 0))
(assert
 (<= w__0 10))
(assert
 (<= v__0 10))
(assert
 (>= w__1 0))
(assert
 (>= v__1 0))
(assert
 (<= w__1 10))
(assert
 (<= v__1 10))
(assert
 (>= w__2 0))
(assert
 (>= v__2 0))
(assert
 (<= w__2 10))
(assert
 (<= v__2 10))
(assert
 (>= w__3 0))
(assert
 (>= v__3 0))
(assert
 (<= w__3 10))
(assert
 (<= v__3 10))
(assert
 (>= w__4 0))
(assert
 (>= v__4 0))
(assert
 (<= w__4 10))
(assert
 (<= v__4 10))
(assert
 (>= w__5 0))
(assert
 (>= v__5 0))
(assert
 (<= w__5 10))
(assert
 (<= v__5 10))
(assert
 (>= w__6 0))
(assert
 (>= v__6 0))
(assert
 (<= w__6 10))
(assert
 (<= v__6 10))
(assert
 (>= w__7 0))
(assert
 (>= v__7 0))
(assert
 (<= w__7 10))
(assert
 (<= v__7 10))
(assert
 (>= w__8 0))
(assert
 (>= v__8 0))
(assert
 (<= w__8 10))
(assert
 (<= v__8 10))
(assert
 (>= w__9 0))
(assert
 (>= v__9 0))
(assert
 (<= w__9 10))
(assert
 (<= v__9 10))
(assert
 (let ((?x1932 (* b__0 1)))
 (let ((?x2003 (+ v__9 ?x1932)))
 (let ((?x1984 (* b__0 10)))
 (let ((?x1985 (+ v__8 ?x1984)))
 (let ((?x1965 (* b__0 9)))
 (let ((?x1966 (+ v__7 ?x1965)))
 (let ((?x1946 (* b__0 8)))
 (let ((?x1947 (+ v__6 ?x1946)))
 (let ((?x2016 (* b__0 7)))
 (let ((?x1928 (+ v__5 ?x2016)))
 (let ((?x1997 (* b__0 6)))
 (let ((?x1998 (+ v__4 ?x1997)))
 (let ((?x1980 (* b__0 5)))
 (let ((?x1981 (+ v__3 ?x1980)))
 (let ((?x1963 (* b__0 4)))
 (let ((?x1968 (+ v__2 ?x1963)))
 (let ((?x1950 (* b__0 3)))
 (let ((?x1951 (+ v__1 ?x1950)))
 (let ((?x1935 (* b__0 2)))
 (let ((?x1936 (+ v__0 ?x1935)))
 (let ((?x1941 (store start ?x1936 (+ (select start ?x1936) 1))))
 (let ((?x1954 (store ?x1941 ?x1951 (+ (select ?x1941 ?x1951) 1))))
 (let ((?x1971 (store ?x1954 ?x1968 (+ (select ?x1954 ?x1968) 1))))
 (let ((?x1988 (store ?x1971 ?x1981 (+ (select ?x1971 ?x1981) 1))))
 (let ((?x2006 (store ?x1988 ?x1998 (+ (select ?x1988 ?x1998) 1))))
 (let ((?x1931 (store ?x2006 ?x1928 (+ (select ?x2006 ?x1928) 1))))
 (let ((?x1955 (store ?x1931 ?x1947 (+ (select ?x1931 ?x1947) 1))))
 (let ((?x1974 (store ?x1955 ?x1966 (+ (select ?x1955 ?x1966) 1))))
 (let ((?x1993 (store ?x1974 ?x1985 (+ (select ?x1974 ?x1985) 1))))
 (let ((?x2012 (store ?x1993 ?x2003 (+ (select ?x1993 ?x2003) 1))))
 (let ((?x1994 (+ w__9 ?x1984)))
 (let ((?x1975 (+ w__8 ?x1965)))
 (let ((?x1956 (+ w__7 ?x1946)))
 (let ((?x1937 (+ w__6 ?x2016)))
 (let ((?x2007 (+ w__5 ?x1997)))
 (let ((?x1989 (+ w__4 ?x1980)))
 (let ((?x1972 (+ w__3 ?x1963)))
 (let ((?x1959 (+ w__2 ?x1950)))
 (let ((?x1942 (+ w__1 ?x1935)))
 (let ((?x1933 (+ w__0 ?x1932)))
 (let ((?x1934 (store start ?x1933 (+ (select start ?x1933) 1))))
 (let ((?x1945 (store ?x1934 ?x1942 (+ (select ?x1934 ?x1942) 1))))
 (let ((?x1962 (store ?x1945 ?x1959 (+ (select ?x1945 ?x1959) 1))))
 (let ((?x1979 (store ?x1962 ?x1972 (+ (select ?x1962 ?x1972) 1))))
 (let ((?x1996 (store ?x1979 ?x1989 (+ (select ?x1979 ?x1989) 1))))
 (let ((?x2015 (store ?x1996 ?x2007 (+ (select ?x1996 ?x2007) 1))))
 (let ((?x1940 (store ?x2015 ?x1937 (+ (select ?x2015 ?x1937) 1))))
 (let ((?x1964 (store ?x1940 ?x1956 (+ (select ?x1940 ?x1956) 1))))
 (let ((?x1983 (store ?x1964 ?x1975 (+ (select ?x1964 ?x1975) 1))))
 (let ((?x2002 (store ?x1983 ?x1994 (+ (select ?x1983 ?x1994) 1))))
 (= ?x2002 ?x2012))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x648 (* b__1 1)))
 (let ((?x1198 (+ v__9 ?x648)))
 (let ((?x416 (* b__1 10)))
 (let ((?x829 (+ v__8 ?x416)))
 (let ((?x665 (* b__1 9)))
 (let ((?x788 (+ v__7 ?x665)))
 (let ((?x312 (* b__1 8)))
 (let ((?x1733 (+ v__6 ?x312)))
 (let ((?x650 (* b__1 7)))
 (let ((?x599 (+ v__5 ?x650)))
 (let ((?x1392 (* b__1 6)))
 (let ((?x1361 (+ v__4 ?x1392)))
 (let ((?x1328 (* b__1 5)))
 (let ((?x1271 (+ v__3 ?x1328)))
 (let ((?x305 (* b__1 4)))
 (let ((?x1464 (+ v__2 ?x305)))
 (let ((?x1448 (* b__1 3)))
 (let ((?x1454 (+ v__1 ?x1448)))
 (let ((?x478 (* b__1 2)))
 (let ((?x477 (+ v__0 ?x478)))
 (let ((?x1513 (store start ?x477 (+ (select start ?x477) 1))))
 (let ((?x334 (store ?x1513 ?x1454 (+ (select ?x1513 ?x1454) 1))))
 (let ((?x1473 (store ?x334 ?x1464 (+ (select ?x334 ?x1464) 1))))
 (let ((?x487 (store ?x1473 ?x1271 (+ (select ?x1473 ?x1271) 1))))
 (let ((?x397 (store ?x487 ?x1361 (+ (select ?x487 ?x1361) 1))))
 (let ((?x644 (store ?x397 ?x599 (+ (select ?x397 ?x599) 1))))
 (let ((?x1245 (store ?x644 ?x1733 (+ (select ?x644 ?x1733) 1))))
 (let ((?x1078 (store ?x1245 ?x788 (+ (select ?x1245 ?x788) 1))))
 (let ((?x1318 (store ?x1078 ?x829 (+ (select ?x1078 ?x829) 1))))
 (let ((?x98 (store ?x1318 ?x1198 (+ (select ?x1318 ?x1198) 1))))
 (let ((?x333 (+ w__9 ?x416)))
 (let ((?x111 (+ w__8 ?x665)))
 (let ((?x1253 (+ w__7 ?x312)))
 (let ((?x1359 (+ w__6 ?x650)))
 (let ((?x153 (+ w__5 ?x1392)))
 (let ((?x771 (+ w__4 ?x1328)))
 (let ((?x1489 (+ w__3 ?x305)))
 (let ((?x589 (+ w__2 ?x1448)))
 (let ((?x1514 (+ w__1 ?x478)))
 (let ((?x663 (+ w__0 ?x648)))
 (let ((?x894 (store start ?x663 (+ (select start ?x663) 1))))
 (let ((?x1566 (store ?x894 ?x1514 (+ (select ?x894 ?x1514) 1))))
 (let ((?x864 (store ?x1566 ?x589 (+ (select ?x1566 ?x589) 1))))
 (let ((?x900 (store ?x864 ?x1489 (+ (select ?x864 ?x1489) 1))))
 (let ((?x1393 (store ?x900 ?x771 (+ (select ?x900 ?x771) 1))))
 (let ((?x316 (store ?x1393 ?x153 (+ (select ?x1393 ?x153) 1))))
 (let ((?x887 (store ?x316 ?x1359 (+ (select ?x316 ?x1359) 1))))
 (let ((?x366 (store ?x887 ?x1253 (+ (select ?x887 ?x1253) 1))))
 (let ((?x731 (store ?x366 ?x111 (+ (select ?x366 ?x111) 1))))
 (let ((?x838 (store ?x731 ?x333 (+ (select ?x731 ?x333) 1))))
 (= ?x838 ?x98))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1419 (* b__2 1)))
 (let ((?x618 (+ v__9 ?x1419)))
 (let ((?x295 (* b__2 10)))
 (let ((?x1343 (+ v__8 ?x295)))
 (let ((?x1520 (* b__2 9)))
 (let ((?x1521 (+ v__7 ?x1520)))
 (let ((?x186 (* b__2 8)))
 (let ((?x610 (+ v__6 ?x186)))
 (let ((?x471 (* b__2 7)))
 (let ((?x1016 (+ v__5 ?x471)))
 (let ((?x1439 (* b__2 6)))
 (let ((?x1445 (+ v__4 ?x1439)))
 (let ((?x785 (* b__2 5)))
 (let ((?x1117 (+ v__3 ?x785)))
 (let ((?x1023 (* b__2 4)))
 (let ((?x991 (+ v__2 ?x1023)))
 (let ((?x1147 (* b__2 3)))
 (let ((?x744 (+ v__1 ?x1147)))
 (let ((?x654 (* b__2 2)))
 (let ((?x138 (+ v__0 ?x654)))
 (let ((?x496 (store start ?x138 (+ (select start ?x138) 1))))
 (let ((?x677 (store ?x496 ?x744 (+ (select ?x496 ?x744) 1))))
 (let ((?x172 (store ?x677 ?x991 (+ (select ?x677 ?x991) 1))))
 (let ((?x1412 (store ?x172 ?x1117 (+ (select ?x172 ?x1117) 1))))
 (let ((?x322 (store ?x1412 ?x1445 (+ (select ?x1412 ?x1445) 1))))
 (let ((?x432 (store ?x322 ?x1016 (+ (select ?x322 ?x1016) 1))))
 (let ((?x574 (store ?x432 ?x610 (+ (select ?x432 ?x610) 1))))
 (let ((?x1101 (store ?x574 ?x1521 (+ (select ?x574 ?x1521) 1))))
 (let ((?x192 (store ?x1101 ?x1343 (+ (select ?x1101 ?x1343) 1))))
 (let ((?x706 (store ?x192 ?x618 (+ (select ?x192 ?x618) 1))))
 (let ((?x505 (+ w__9 ?x295)))
 (let ((?x1093 (+ w__8 ?x1520)))
 (let ((?x518 (+ w__7 ?x186)))
 (let ((?x1732 (+ w__6 ?x471)))
 (let ((?x1517 (+ w__5 ?x1439)))
 (let ((?x1420 (+ w__4 ?x785)))
 (let ((?x288 (+ w__3 ?x1023)))
 (let ((?x689 (+ w__2 ?x1147)))
 (let ((?x674 (+ w__1 ?x654)))
 (let ((?x1429 (+ w__0 ?x1419)))
 (let ((?x1438 (store start ?x1429 (+ (select start ?x1429) 1))))
 (let ((?x1141 (store ?x1438 ?x674 (+ (select ?x1438 ?x674) 1))))
 (let ((?x698 (store ?x1141 ?x689 (+ (select ?x1141 ?x689) 1))))
 (let ((?x781 (store ?x698 ?x288 (+ (select ?x698 ?x288) 1))))
 (let ((?x1428 (store ?x781 ?x1420 (+ (select ?x781 ?x1420) 1))))
 (let ((?x472 (store ?x1428 ?x1517 (+ (select ?x1428 ?x1517) 1))))
 (let ((?x400 (store ?x472 ?x1732 (+ (select ?x472 ?x1732) 1))))
 (let ((?x1519 (store ?x400 ?x518 (+ (select ?x400 ?x518) 1))))
 (let ((?x777 (store ?x1519 ?x1093 (+ (select ?x1519 ?x1093) 1))))
 (let ((?x427 (store ?x777 ?x505 (+ (select ?x777 ?x505) 1))))
 (= ?x427 ?x706))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1388 (* b__3 1)))
 (let ((?x1080 (+ v__9 ?x1388)))
 (let ((?x352 (* b__3 10)))
 (let ((?x506 (+ v__8 ?x352)))
 (let ((?x910 (* b__3 9)))
 (let ((?x78 (+ v__7 ?x910)))
 (let ((?x1217 (* b__3 8)))
 (let ((?x191 (+ v__6 ?x1217)))
 (let ((?x880 (* b__3 7)))
 (let ((?x537 (+ v__5 ?x880)))
 (let ((?x38 (* b__3 6)))
 (let ((?x193 (+ v__4 ?x38)))
 (let ((?x1434 (* b__3 5)))
 (let ((?x1433 (+ v__3 ?x1434)))
 (let ((?x1469 (* b__3 4)))
 (let ((?x1468 (+ v__2 ?x1469)))
 (let ((?x1613 (* b__3 3)))
 (let ((?x1624 (+ v__1 ?x1613)))
 (let ((?x291 (* b__3 2)))
 (let ((?x1617 (+ v__0 ?x291)))
 (let ((?x1629 (store start ?x1617 (+ (select start ?x1617) 1))))
 (let ((?x1487 (store ?x1629 ?x1624 (+ (select ?x1629 ?x1624) 1))))
 (let ((?x1452 (store ?x1487 ?x1468 (+ (select ?x1487 ?x1468) 1))))
 (let ((?x1739 (store ?x1452 ?x1433 (+ (select ?x1452 ?x1433) 1))))
 (let ((?x259 (store ?x1739 ?x193 (+ (select ?x1739 ?x193) 1))))
 (let ((?x315 (store ?x259 ?x537 (+ (select ?x259 ?x537) 1))))
 (let ((?x934 (store ?x315 ?x191 (+ (select ?x315 ?x191) 1))))
 (let ((?x494 (store ?x934 ?x78 (+ (select ?x934 ?x78) 1))))
 (let ((?x554 (store ?x494 ?x506 (+ (select ?x494 ?x506) 1))))
 (let ((?x656 (store ?x554 ?x1080 (+ (select ?x554 ?x1080) 1))))
 (let ((?x273 (+ w__9 ?x352)))
 (let ((?x491 (+ w__8 ?x910)))
 (let ((?x1226 (+ w__7 ?x1217)))
 (let ((?x119 (+ w__6 ?x880)))
 (let ((?x1001 (+ w__5 ?x38)))
 (let ((?x1740 (+ w__4 ?x1434)))
 (let ((?x1451 (+ w__3 ?x1469)))
 (let ((?x1486 (+ w__2 ?x1613)))
 (let ((?x1654 (+ w__1 ?x291)))
 (let ((?x660 (+ w__0 ?x1388)))
 (let ((?x313 (store start ?x660 (+ (select start ?x660) 1))))
 (let ((?x1587 (store ?x313 ?x1654 (+ (select ?x313 ?x1654) 1))))
 (let ((?x1470 (store ?x1587 ?x1486 (+ (select ?x1587 ?x1486) 1))))
 (let ((?x1435 (store ?x1470 ?x1451 (+ (select ?x1470 ?x1451) 1))))
 (let ((?x91 (store ?x1435 ?x1740 (+ (select ?x1435 ?x1740) 1))))
 (let ((?x881 (store ?x91 ?x1001 (+ (select ?x91 ?x1001) 1))))
 (let ((?x621 (store ?x881 ?x119 (+ (select ?x881 ?x119) 1))))
 (let ((?x162 (store ?x621 ?x1226 (+ (select ?x621 ?x1226) 1))))
 (let ((?x560 (store ?x162 ?x491 (+ (select ?x162 ?x491) 1))))
 (let ((?x724 (store ?x560 ?x273 (+ (select ?x560 ?x273) 1))))
 (= ?x724 ?x656))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x120 (* b__4 1)))
 (let ((?x1171 (+ v__9 ?x120)))
 (let ((?x1378 (* b__4 10)))
 (let ((?x1376 (+ v__8 ?x1378)))
 (let ((?x48 (* b__4 9)))
 (let ((?x927 (+ v__7 ?x48)))
 (let ((?x508 (* b__4 8)))
 (let ((?x733 (+ v__6 ?x508)))
 (let ((?x1357 (* b__4 7)))
 (let ((?x1201 (+ v__5 ?x1357)))
 (let ((?x1267 (* b__4 6)))
 (let ((?x1274 (+ v__4 ?x1267)))
 (let ((?x833 (* b__4 5)))
 (let ((?x495 (+ v__3 ?x833)))
 (let ((?x748 (* b__4 4)))
 (let ((?x1247 (+ v__2 ?x748)))
 (let ((?x384 (* b__4 3)))
 (let ((?x80 (+ v__1 ?x384)))
 (let ((?x1329 (* b__4 2)))
 (let ((?x1330 (+ v__0 ?x1329)))
 (let ((?x918 (store start ?x1330 (+ (select start ?x1330) 1))))
 (let ((?x916 (store ?x918 ?x80 (+ (select ?x918 ?x80) 1))))
 (let ((?x293 (store ?x916 ?x1247 (+ (select ?x916 ?x1247) 1))))
 (let ((?x1315 (store ?x293 ?x495 (+ (select ?x293 ?x495) 1))))
 (let ((?x1290 (store ?x1315 ?x1274 (+ (select ?x1315 ?x1274) 1))))
 (let ((?x129 (store ?x1290 ?x1201 (+ (select ?x1290 ?x1201) 1))))
 (let ((?x160 (store ?x129 ?x733 (+ (select ?x129 ?x733) 1))))
 (let ((?x1498 (store ?x160 ?x927 (+ (select ?x160 ?x927) 1))))
 (let ((?x756 (store ?x1498 ?x1376 (+ (select ?x1498 ?x1376) 1))))
 (let ((?x1659 (store ?x756 ?x1171 (+ (select ?x756 ?x1171) 1))))
 (let ((?x50 (+ w__9 ?x1378)))
 (let ((?x929 (+ w__8 ?x48)))
 (let ((?x390 (+ w__7 ?x508)))
 (let ((?x545 (+ w__6 ?x1357)))
 (let ((?x1259 (+ w__5 ?x1267)))
 (let ((?x1316 (+ w__4 ?x833)))
 (let ((?x683 (+ w__3 ?x748)))
 (let ((?x1366 (+ w__2 ?x384)))
 (let ((?x641 (+ w__1 ?x1329)))
 (let ((?x810 (+ w__0 ?x120)))
 (let ((?x1276 (store start ?x810 (+ (select start ?x810) 1))))
 (let ((?x299 (store ?x1276 ?x641 (+ (select ?x1276 ?x641) 1))))
 (let ((?x1000 (store ?x299 ?x1366 (+ (select ?x299 ?x1366) 1))))
 (let ((?x631 (store ?x1000 ?x683 (+ (select ?x1000 ?x683) 1))))
 (let ((?x1095 (store ?x631 ?x1316 (+ (select ?x631 ?x1316) 1))))
 (let ((?x1120 (store ?x1095 ?x1259 (+ (select ?x1095 ?x1259) 1))))
 (let ((?x712 (store ?x1120 ?x545 (+ (select ?x1120 ?x545) 1))))
 (let ((?x544 (store ?x712 ?x390 (+ (select ?x712 ?x390) 1))))
 (let ((?x1229 (store ?x544 ?x929 (+ (select ?x544 ?x929) 1))))
 (let ((?x1172 (store ?x1229 ?x50 (+ (select ?x1229 ?x50) 1))))
 (= ?x1172 ?x1659))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x872 (* b__5 1)))
 (let ((?x1704 (+ v__9 ?x872)))
 (let ((?x461 (* b__5 10)))
 (let ((?x646 (+ v__8 ?x461)))
 (let ((?x309 (* b__5 9)))
 (let ((?x71 (+ v__7 ?x309)))
 (let ((?x1356 (* b__5 8)))
 (let ((?x1193 (+ v__6 ?x1356)))
 (let ((?x1399 (* b__5 7)))
 (let ((?x1715 (+ v__5 ?x1399)))
 (let ((?x260 (* b__5 6)))
 (let ((?x1336 (+ v__4 ?x260)))
 (let ((?x1404 (* b__5 5)))
 (let ((?x813 (+ v__3 ?x1404)))
 (let ((?x1719 (* b__5 4)))
 (let ((?x1269 (+ v__2 ?x1719)))
 (let ((?x1166 (* b__5 3)))
 (let ((?x1182 (+ v__1 ?x1166)))
 (let ((?x1135 (* b__5 2)))
 (let ((?x1134 (+ v__0 ?x1135)))
 (let ((?x1003 (store start ?x1134 (+ (select start ?x1134) 1))))
 (let ((?x1075 (store ?x1003 ?x1182 (+ (select ?x1003 ?x1182) 1))))
 (let ((?x601 (store ?x1075 ?x1269 (+ (select ?x1075 ?x1269) 1))))
 (let ((?x189 (store ?x601 ?x813 (+ (select ?x601 ?x813) 1))))
 (let ((?x1168 (store ?x189 ?x1336 (+ (select ?x189 ?x1336) 1))))
 (let ((?x95 (store ?x1168 ?x1715 (+ (select ?x1168 ?x1715) 1))))
 (let ((?x1083 (store ?x95 ?x1193 (+ (select ?x95 ?x1193) 1))))
 (let ((?x1707 (store ?x1083 ?x71 (+ (select ?x1083 ?x71) 1))))
 (let ((?x1573 (store ?x1707 ?x646 (+ (select ?x1707 ?x646) 1))))
 (let ((?x206 (store ?x1573 ?x1704 (+ (select ?x1573 ?x1704) 1))))
 (let ((?x1572 (+ w__9 ?x461)))
 (let ((?x222 (+ w__8 ?x309)))
 (let ((?x746 (+ w__7 ?x1356)))
 (let ((?x1225 (+ w__6 ?x1399)))
 (let ((?x1176 (+ w__5 ?x260)))
 (let ((?x465 (+ w__4 ?x1404)))
 (let ((?x67 (+ w__3 ?x1719)))
 (let ((?x1005 (+ w__2 ?x1166)))
 (let ((?x164 (+ w__1 ?x1135)))
 (let ((?x1287 (+ w__0 ?x872)))
 (let ((?x1153 (store start ?x1287 (+ (select start ?x1287) 1))))
 (let ((?x1148 (store ?x1153 ?x164 (+ (select ?x1153 ?x164) 1))))
 (let ((?x1317 (store ?x1148 ?x1005 (+ (select ?x1148 ?x1005) 1))))
 (let ((?x45 (store ?x1317 ?x67 (+ (select ?x1317 ?x67) 1))))
 (let ((?x1306 (store ?x45 ?x465 (+ (select ?x45 ?x465) 1))))
 (let ((?x1398 (store ?x1306 ?x1176 (+ (select ?x1306 ?x1176) 1))))
 (let ((?x1382 (store ?x1398 ?x1225 (+ (select ?x1398 ?x1225) 1))))
 (let ((?x993 (store ?x1382 ?x746 (+ (select ?x1382 ?x746) 1))))
 (let ((?x588 (store ?x993 ?x222 (+ (select ?x993 ?x222) 1))))
 (let ((?x1716 (store ?x588 ?x1572 (+ (select ?x588 ?x1572) 1))))
 (= ?x1716 ?x206))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1319 (* b__6 1)))
 (let ((?x595 (+ v__9 ?x1319)))
 (let ((?x229 (* b__6 10)))
 (let ((?x619 (+ v__8 ?x229)))
 (let ((?x1697 (* b__6 9)))
 (let ((?x452 (+ v__7 ?x1697)))
 (let ((?x1113 (* b__6 8)))
 (let ((?x1111 (+ v__6 ?x1113)))
 (let ((?x1379 (* b__6 7)))
 (let ((?x1346 (+ v__5 ?x1379)))
 (let ((?x1390 (* b__6 6)))
 (let ((?x878 (+ v__4 ?x1390)))
 (let ((?x1007 (* b__6 5)))
 (let ((?x326 (+ v__3 ?x1007)))
 (let ((?x1055 (* b__6 4)))
 (let ((?x1184 (+ v__2 ?x1055)))
 (let ((?x715 (* b__6 3)))
 (let ((?x566 (+ v__1 ?x715)))
 (let ((?x389 (* b__6 2)))
 (let ((?x679 (+ v__0 ?x389)))
 (let ((?x1106 (store start ?x679 (+ (select start ?x679) 1))))
 (let ((?x479 (store ?x1106 ?x566 (+ (select ?x1106 ?x566) 1))))
 (let ((?x445 (store ?x479 ?x1184 (+ (select ?x479 ?x1184) 1))))
 (let ((?x985 (store ?x445 ?x326 (+ (select ?x445 ?x326) 1))))
 (let ((?x392 (store ?x985 ?x878 (+ (select ?x985 ?x878) 1))))
 (let ((?x1710 (store ?x392 ?x1346 (+ (select ?x392 ?x1346) 1))))
 (let ((?x1025 (store ?x1710 ?x1111 (+ (select ?x1710 ?x1111) 1))))
 (let ((?x112 (store ?x1025 ?x452 (+ (select ?x1025 ?x452) 1))))
 (let ((?x1569 (store ?x112 ?x619 (+ (select ?x112 ?x619) 1))))
 (let ((?x165 (store ?x1569 ?x595 (+ (select ?x1569 ?x595) 1))))
 (let ((?x1416 (+ w__9 ?x229)))
 (let ((?x670 (+ w__8 ?x1697)))
 (let ((?x1085 (+ w__7 ?x1113)))
 (let ((?x1711 (+ w__6 ?x1379)))
 (let ((?x1705 (+ w__5 ?x1390)))
 (let ((?x1029 (+ w__4 ?x1007)))
 (let ((?x317 (+ w__3 ?x1055)))
 (let ((?x1700 (+ w__2 ?x715)))
 (let ((?x728 (+ w__1 ?x389)))
 (let ((?x1321 (+ w__0 ?x1319)))
 (let ((?x1263 (store start ?x1321 (+ (select start ?x1321) 1))))
 (let ((?x692 (store ?x1263 ?x728 (+ (select ?x1263 ?x728) 1))))
 (let ((?x1358 (store ?x692 ?x1700 (+ (select ?x692 ?x1700) 1))))
 (let ((?x370 (store ?x1358 ?x317 (+ (select ?x1358 ?x317) 1))))
 (let ((?x969 (store ?x370 ?x1029 (+ (select ?x370 ?x1029) 1))))
 (let ((?x385 (store ?x969 ?x1705 (+ (select ?x969 ?x1705) 1))))
 (let ((?x521 (store ?x385 ?x1711 (+ (select ?x385 ?x1711) 1))))
 (let ((?x832 (store ?x521 ?x1085 (+ (select ?x521 ?x1085) 1))))
 (let ((?x41 (store ?x832 ?x670 (+ (select ?x832 ?x670) 1))))
 (let ((?x168 (store ?x41 ?x1416 (+ (select ?x41 ?x1416) 1))))
 (= ?x168 ?x165))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1876 (* b__7 1)))
 (let ((?x866 (+ v__9 ?x1876)))
 (let ((?x255 (* b__7 10)))
 (let ((?x755 (+ v__8 ?x255)))
 (let ((?x1551 (* b__7 9)))
 (let ((?x1365 (+ v__7 ?x1551)))
 (let ((?x1508 (* b__7 8)))
 (let ((?x1546 (+ v__6 ?x1508)))
 (let ((?x1199 (* b__7 7)))
 (let ((?x1503 (+ v__5 ?x1199)))
 (let ((?x1053 (* b__7 6)))
 (let ((?x626 (+ v__4 ?x1053)))
 (let ((?x949 (* b__7 5)))
 (let ((?x945 (+ v__3 ?x949)))
 (let ((?x1899 (* b__7 4)))
 (let ((?x1900 (+ v__2 ?x1899)))
 (let ((?x1890 (* b__7 3)))
 (let ((?x1891 (+ v__1 ?x1890)))
 (let ((?x1882 (* b__7 2)))
 (let ((?x1883 (+ v__0 ?x1882)))
 (let ((?x343 (store start ?x1883 (+ (select start ?x1883) 1))))
 (let ((?x1894 (store ?x343 ?x1891 (+ (select ?x343 ?x1891) 1))))
 (let ((?x1903 (store ?x1894 ?x1900 (+ (select ?x1894 ?x1900) 1))))
 (let ((?x450 (store ?x1903 ?x945 (+ (select ?x1903 ?x945) 1))))
 (let ((?x889 (store ?x450 ?x626 (+ (select ?x450 ?x626) 1))))
 (let ((?x1543 (store ?x889 ?x1503 (+ (select ?x889 ?x1503) 1))))
 (let ((?x1533 (store ?x1543 ?x1546 (+ (select ?x1543 ?x1546) 1))))
 (let ((?x353 (store ?x1533 ?x1365 (+ (select ?x1533 ?x1365) 1))))
 (let ((?x551 (store ?x353 ?x755 (+ (select ?x353 ?x755) 1))))
 (let ((?x2068 (store ?x551 ?x866 (+ (select ?x551 ?x866) 1))))
 (let ((?x1222 (+ w__9 ?x255)))
 (let ((?x114 (+ w__8 ?x1551)))
 (let ((?x1548 (+ w__7 ?x1508)))
 (let ((?x1544 (+ w__6 ?x1199)))
 (let ((?x1539 (+ w__5 ?x1053)))
 (let ((?x449 (+ w__4 ?x949)))
 (let ((?x1904 (+ w__3 ?x1899)))
 (let ((?x1895 (+ w__2 ?x1890)))
 (let ((?x1886 (+ w__1 ?x1882)))
 (let ((?x1877 (+ w__0 ?x1876)))
 (let ((?x1880 (store start ?x1877 (+ (select start ?x1877) 1))))
 (let ((?x1889 (store ?x1880 ?x1886 (+ (select ?x1880 ?x1886) 1))))
 (let ((?x1898 (store ?x1889 ?x1895 (+ (select ?x1889 ?x1895) 1))))
 (let ((?x1175 (store ?x1898 ?x1904 (+ (select ?x1898 ?x1904) 1))))
 (let ((?x266 (store ?x1175 ?x449 (+ (select ?x1175 ?x449) 1))))
 (let ((?x1541 (store ?x266 ?x1539 (+ (select ?x266 ?x1539) 1))))
 (let ((?x1545 (store ?x1541 ?x1544 (+ (select ?x1541 ?x1544) 1))))
 (let ((?x1535 (store ?x1545 ?x1548 (+ (select ?x1545 ?x1548) 1))))
 (let ((?x527 (store ?x1535 ?x114 (+ (select ?x1535 ?x114) 1))))
 (let ((?x1103 (store ?x527 ?x1222 (+ (select ?x527 ?x1222) 1))))
 (= ?x1103 ?x2068))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x365 (* b__8 1)))
 (let ((?x1664 (+ v__9 ?x365)))
 (let ((?x1746 (* b__8 10)))
 (let ((?x1745 (+ v__8 ?x1746)))
 (let ((?x1747 (* b__8 9)))
 (let ((?x1422 (+ v__7 ?x1747)))
 (let ((?x1571 (* b__8 8)))
 (let ((?x1104 (+ v__6 ?x1571)))
 (let ((?x66 (* b__8 7)))
 (let ((?x55 (+ v__5 ?x66)))
 (let ((?x2099 (* b__8 6)))
 (let ((?x2100 (+ v__4 ?x2099)))
 (let ((?x820 (* b__8 5)))
 (let ((?x1047 (+ v__3 ?x820)))
 (let ((?x1295 (* b__8 4)))
 (let ((?x1304 (+ v__2 ?x1295)))
 (let ((?x87 (* b__8 3)))
 (let ((?x668 (+ v__1 ?x87)))
 (let ((?x817 (* b__8 2)))
 (let ((?x83 (+ v__0 ?x817)))
 (let ((?x72 (store start ?x83 (+ (select start ?x83) 1))))
 (let ((?x695 (store ?x72 ?x668 (+ (select ?x72 ?x668) 1))))
 (let ((?x1268 (store ?x695 ?x1304 (+ (select ?x695 ?x1304) 1))))
 (let ((?x507 (store ?x1268 ?x1047 (+ (select ?x1268 ?x1047) 1))))
 (let ((?x988 (store ?x507 ?x2100 (+ (select ?x507 ?x2100) 1))))
 (let ((?x135 (store ?x988 ?x55 (+ (select ?x988 ?x55) 1))))
 (let ((?x1289 (store ?x135 ?x1104 (+ (select ?x135 ?x1104) 1))))
 (let ((?x1415 (store ?x1289 ?x1422 (+ (select ?x1289 ?x1422) 1))))
 (let ((?x1743 (store ?x1415 ?x1745 (+ (select ?x1415 ?x1745) 1))))
 (let ((?x1668 (store ?x1743 ?x1664 (+ (select ?x1743 ?x1664) 1))))
 (let ((?x1742 (+ w__9 ?x1746)))
 (let ((?x1414 (+ w__8 ?x1747)))
 (let ((?x1013 (+ w__7 ?x1571)))
 (let ((?x676 (+ w__6 ?x66)))
 (let ((?x1027 (+ w__5 ?x2099)))
 (let ((?x475 (+ w__4 ?x820)))
 (let ((?x240 (+ w__3 ?x1295)))
 (let ((?x1090 (+ w__2 ?x87)))
 (let ((?x596 (+ w__1 ?x817)))
 (let ((?x971 (+ w__0 ?x365)))
 (let ((?x793 (store start ?x971 (+ (select start ?x971) 1))))
 (let ((?x238 (store ?x793 ?x596 (+ (select ?x793 ?x596) 1))))
 (let ((?x1294 (store ?x238 ?x1090 (+ (select ?x238 ?x1090) 1))))
 (let ((?x1052 (store ?x1294 ?x240 (+ (select ?x1294 ?x240) 1))))
 (let ((?x2062 (store ?x1052 ?x475 (+ (select ?x1052 ?x475) 1))))
 (let ((?x542 (store ?x2062 ?x1027 (+ (select ?x2062 ?x1027) 1))))
 (let ((?x1281 (store ?x542 ?x676 (+ (select ?x542 ?x676) 1))))
 (let ((?x1689 (store ?x1281 ?x1013 (+ (select ?x1281 ?x1013) 1))))
 (let ((?x1748 (store ?x1689 ?x1414 (+ (select ?x1689 ?x1414) 1))))
 (let ((?x526 (store ?x1748 ?x1742 (+ (select ?x1748 ?x1742) 1))))
 (= ?x526 ?x1668))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x614 (* b__9 1)))
 (let ((?x522 (+ v__9 ?x614)))
 (let ((?x96 (* b__9 10)))
 (let ((?x338 (+ v__8 ?x96)))
 (let ((?x839 (* b__9 9)))
 (let ((?x913 (+ v__7 ?x839)))
 (let ((?x807 (* b__9 8)))
 (let ((?x1122 (+ v__6 ?x807)))
 (let ((?x634 (* b__9 7)))
 (let ((?x261 (+ v__5 ?x634)))
 (let ((?x628 (* b__9 6)))
 (let ((?x97 (+ v__4 ?x628)))
 (let ((?x462 (* b__9 5)))
 (let ((?x227 (+ v__3 ?x462)))
 (let ((?x1041 (* b__9 4)))
 (let ((?x458 (+ v__2 ?x1041)))
 (let ((?x73 (* b__9 3)))
 (let ((?x60 (+ v__1 ?x73)))
 (let ((?x713 (* b__9 2)))
 (let ((?x772 (+ v__0 ?x713)))
 (let ((?x476 (store start ?x772 (+ (select start ?x772) 1))))
 (let ((?x470 (store ?x476 ?x60 (+ (select ?x476 ?x60) 1))))
 (let ((?x65 (store ?x470 ?x458 (+ (select ?x470 ?x458) 1))))
 (let ((?x624 (store ?x65 ?x227 (+ (select ?x65 ?x227) 1))))
 (let ((?x440 (store ?x624 ?x97 (+ (select ?x624 ?x97) 1))))
 (let ((?x142 (store ?x440 ?x261 (+ (select ?x440 ?x261) 1))))
 (let ((?x1581 (store ?x142 ?x1122 (+ (select ?x142 ?x1122) 1))))
 (let ((?x709 (store ?x1581 ?x913 (+ (select ?x1581 ?x913) 1))))
 (let ((?x1675 (store ?x709 ?x338 (+ (select ?x709 ?x338) 1))))
 (let ((?x139 (store ?x1675 ?x522 (+ (select ?x1675 ?x522) 1))))
 (let ((?x1677 (+ w__9 ?x96)))
 (let ((?x681 (+ w__8 ?x839)))
 (let ((?x137 (+ w__7 ?x807)))
 (let ((?x917 (+ w__6 ?x634)))
 (let ((?x272 (+ w__5 ?x628)))
 (let ((?x1014 (+ w__4 ?x462)))
 (let ((?x363 (+ w__3 ?x1041)))
 (let ((?x605 (+ w__2 ?x73)))
 (let ((?x483 (+ w__1 ?x713)))
 (let ((?x1310 (+ w__0 ?x614)))
 (let ((?x369 (store start ?x1310 (+ (select start ?x1310) 1))))
 (let ((?x113 (store ?x369 ?x483 (+ (select ?x369 ?x483) 1))))
 (let ((?x467 (store ?x113 ?x605 (+ (select ?x113 ?x605) 1))))
 (let ((?x1069 (store ?x467 ?x363 (+ (select ?x467 ?x363) 1))))
 (let ((?x85 (store ?x1069 ?x1014 (+ (select ?x1069 ?x1014) 1))))
 (let ((?x636 (store ?x85 ?x272 (+ (select ?x85 ?x272) 1))))
 (let ((?x1354 (store ?x636 ?x917 (+ (select ?x636 ?x917) 1))))
 (let ((?x710 (store ?x1354 ?x137 (+ (select ?x1354 ?x137) 1))))
 (let ((?x1114 (store ?x710 ?x681 (+ (select ?x710 ?x681) 1))))
 (let ((?x1679 (store ?x1114 ?x1677 (+ (select ?x1114 ?x1677) 1))))
 (= ?x1679 ?x139))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1531 (* b__10 1)))
 (let ((?x2055 (+ v__9 ?x1531)))
 (let ((?x884 (* b__10 10)))
 (let ((?x482 (+ v__8 ?x884)))
 (let ((?x1323 (* b__10 9)))
 (let ((?x1266 (+ v__7 ?x1323)))
 (let ((?x726 (* b__10 8)))
 (let ((?x970 (+ v__6 ?x726)))
 (let ((?x2106 (* b__10 7)))
 (let ((?x121 (+ v__5 ?x2106)))
 (let ((?x1554 (* b__10 6)))
 (let ((?x1224 (+ v__4 ?x1554)))
 (let ((?x716 (* b__10 5)))
 (let ((?x92 (+ v__3 ?x716)))
 (let ((?x792 (* b__10 4)))
 (let ((?x885 (+ v__2 ?x792)))
 (let ((?x976 (* b__10 3)))
 (let ((?x187 (+ v__1 ?x976)))
 (let ((?x819 (* b__10 2)))
 (let ((?x1115 (+ v__0 ?x819)))
 (let ((?x355 (store start ?x1115 (+ (select start ?x1115) 1))))
 (let ((?x943 (store ?x355 ?x187 (+ (select ?x355 ?x187) 1))))
 (let ((?x249 (store ?x943 ?x885 (+ (select ?x943 ?x885) 1))))
 (let ((?x1447 (store ?x249 ?x92 (+ (select ?x249 ?x92) 1))))
 (let ((?x1557 (store ?x1447 ?x1224 (+ (select ?x1447 ?x1224) 1))))
 (let ((?x546 (store ?x1557 ?x121 (+ (select ?x1557 ?x121) 1))))
 (let ((?x167 (store ?x546 ?x970 (+ (select ?x546 ?x970) 1))))
 (let ((?x218 (store ?x167 ?x1266 (+ (select ?x167 ?x1266) 1))))
 (let ((?x563 (store ?x218 ?x482 (+ (select ?x218 ?x482) 1))))
 (let ((?x1614 (store ?x563 ?x2055 (+ (select ?x563 ?x2055) 1))))
 (let ((?x996 (+ w__9 ?x884)))
 (let ((?x279 (+ w__8 ?x1323)))
 (let ((?x532 (+ w__7 ?x726)))
 (let ((?x1084 (+ w__6 ?x2106)))
 (let ((?x1523 (+ w__5 ?x1554)))
 (let ((?x835 (+ w__4 ?x716)))
 (let ((?x1060 (+ w__3 ?x792)))
 (let ((?x870 (+ w__2 ?x976)))
 (let ((?x1446 (+ w__1 ?x819)))
 (let ((?x1532 (+ w__0 ?x1531)))
 (let ((?x1537 (store start ?x1532 (+ (select start ?x1532) 1))))
 (let ((?x965 (store ?x1537 ?x1446 (+ (select ?x1537 ?x1446) 1))))
 (let ((?x791 (store ?x965 ?x870 (+ (select ?x965 ?x870) 1))))
 (let ((?x32 (store ?x791 ?x1060 (+ (select ?x791 ?x1060) 1))))
 (let ((?x592 (store ?x32 ?x835 (+ (select ?x32 ?x835) 1))))
 (let ((?x2105 (store ?x592 ?x1523 (+ (select ?x592 ?x1523) 1))))
 (let ((?x183 (store ?x2105 ?x1084 (+ (select ?x2105 ?x1084) 1))))
 (let ((?x1386 (store ?x183 ?x532 (+ (select ?x183 ?x532) 1))))
 (let ((?x890 (store ?x1386 ?x279 (+ (select ?x1386 ?x279) 1))))
 (let ((?x2054 (store ?x890 ?x996 (+ (select ?x890 ?x996) 1))))
 (= ?x2054 ?x1614))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let (($x175 (and (= w__1 v__0) (= w__2 v__1) (= w__3 v__2) (= w__4 v__3) (= w__5 v__4) (= w__6 v__5) (= w__7 v__6) (= w__8 v__7) (= w__9 v__8) (= w__0 v__9))))
 (not $x175)))
(check-sat)
(exit)
