
(set-info :smt-lib-version 2.6)
(set-logic QF_ANIA)
(set-info :source |
Generated by: Alex Ozdemir
Generated on: 2021-12-13
Generator: Z3Py API
Application: Soundness counterexamples for a cryptographic argument
Target solver: cvc5, Z3

# The special soundness of PLONK's grand product argument

Let F be a prime-order field and n a natural less than F's size. Let n = {1,
2, .., n} be a subset of F. The PLONK[1] grand product argument relies on the
fact that given a permutation pi: [n] -> [n] and functions A, B: [n] -> [n],

    prod_i (A(i) + beta * i + gamma) = prod_i (B(i) + beta * pi(i) + gamma)

holds for random beta, gamma in F with good probability only when A composed
with pi is B.

Does this implication hold in a deterministic setting, where the above is
checked for distinct---but non-random---beta and gamma?

If it is checked for n+1 distinct values of beta, and for each value of beta,
n+1 distinct values of gamma, then yes. One can prove this.

If it is checked for 2 distinct values of beta, and for each value of beta, n+1
distinct values of gamma, then no.

This series of benchmarks checks the implication holds
* for varying n
* for a fixed permutation pi = (2 3 ... n 1)
* for all A and B
  * that must be equal ("same") or may differ ("diff")
* for all distinct 2 ("unsound") or n+1 ("sound") beta values

rather than instantiating gamma explicitly, we just check that the multisets

    {{A[i] + beta * i}}_i  ==  {{B[i] + beta * pi(i)}}_i

are equal.

[1]: https://eprint.iacr.org/2019/953

|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "crafted")
(set-info :status unsat)
; benchmark generated from python API
(declare-fun b__9 () Int)
(declare-fun b__8 () Int)
(declare-fun b__7 () Int)
(declare-fun b__6 () Int)
(declare-fun b__5 () Int)
(declare-fun b__4 () Int)
(declare-fun b__3 () Int)
(declare-fun b__2 () Int)
(declare-fun b__1 () Int)
(declare-fun b__0 () Int)
(declare-fun w__0 () Int)
(declare-fun v__0 () Int)
(declare-fun w__1 () Int)
(declare-fun v__1 () Int)
(declare-fun w__2 () Int)
(declare-fun v__2 () Int)
(declare-fun w__3 () Int)
(declare-fun v__3 () Int)
(declare-fun w__4 () Int)
(declare-fun v__4 () Int)
(declare-fun w__5 () Int)
(declare-fun v__5 () Int)
(declare-fun w__6 () Int)
(declare-fun v__6 () Int)
(declare-fun w__7 () Int)
(declare-fun v__7 () Int)
(declare-fun w__8 () Int)
(declare-fun v__8 () Int)
(declare-fun start () (Array Int Int))
(assert
 (and (distinct b__0 b__1 b__2 b__3 b__4 b__5 b__6 b__7 b__8 b__9) true))
(assert
 (>= w__0 0))
(assert
 (>= v__0 0))
(assert
 (<= w__0 9))
(assert
 (<= v__0 9))
(assert
 (>= w__1 0))
(assert
 (>= v__1 0))
(assert
 (<= w__1 9))
(assert
 (<= v__1 9))
(assert
 (>= w__2 0))
(assert
 (>= v__2 0))
(assert
 (<= w__2 9))
(assert
 (<= v__2 9))
(assert
 (>= w__3 0))
(assert
 (>= v__3 0))
(assert
 (<= w__3 9))
(assert
 (<= v__3 9))
(assert
 (>= w__4 0))
(assert
 (>= v__4 0))
(assert
 (<= w__4 9))
(assert
 (<= v__4 9))
(assert
 (>= w__5 0))
(assert
 (>= v__5 0))
(assert
 (<= w__5 9))
(assert
 (<= v__5 9))
(assert
 (>= w__6 0))
(assert
 (>= v__6 0))
(assert
 (<= w__6 9))
(assert
 (<= v__6 9))
(assert
 (>= w__7 0))
(assert
 (>= v__7 0))
(assert
 (<= w__7 9))
(assert
 (<= v__7 9))
(assert
 (>= w__8 0))
(assert
 (>= v__8 0))
(assert
 (<= w__8 9))
(assert
 (<= v__8 9))
(assert
 (let ((?x1580 (* b__0 1)))
 (let ((?x1642 (+ v__8 ?x1580)))
 (let ((?x1623 (* b__0 9)))
 (let ((?x1624 (+ v__7 ?x1623)))
 (let ((?x1604 (* b__0 8)))
 (let ((?x1605 (+ v__6 ?x1604)))
 (let ((?x1585 (* b__0 7)))
 (let ((?x1586 (+ v__5 ?x1585)))
 (let ((?x1646 (* b__0 6)))
 (let ((?x1647 (+ v__4 ?x1646)))
 (let ((?x1628 (* b__0 5)))
 (let ((?x1629 (+ v__3 ?x1628)))
 (let ((?x1611 (* b__0 4)))
 (let ((?x1616 (+ v__2 ?x1611)))
 (let ((?x1598 (* b__0 3)))
 (let ((?x1599 (+ v__1 ?x1598)))
 (let ((?x1583 (* b__0 2)))
 (let ((?x1584 (+ v__0 ?x1583)))
 (let ((?x1589 (store start ?x1584 (+ (select start ?x1584) 1))))
 (let ((?x1602 (store ?x1589 ?x1599 (+ (select ?x1589 ?x1599) 1))))
 (let ((?x1619 (store ?x1602 ?x1616 (+ (select ?x1602 ?x1616) 1))))
 (let ((?x1636 (store ?x1619 ?x1629 (+ (select ?x1619 ?x1629) 1))))
 (let ((?x1655 (store ?x1636 ?x1647 (+ (select ?x1636 ?x1647) 1))))
 (let ((?x1594 (store ?x1655 ?x1586 (+ (select ?x1655 ?x1586) 1))))
 (let ((?x1613 (store ?x1594 ?x1605 (+ (select ?x1594 ?x1605) 1))))
 (let ((?x1632 (store ?x1613 ?x1624 (+ (select ?x1613 ?x1624) 1))))
 (let ((?x1651 (store ?x1632 ?x1642 (+ (select ?x1632 ?x1642) 1))))
 (let ((?x1633 (+ w__8 ?x1623)))
 (let ((?x1614 (+ w__7 ?x1604)))
 (let ((?x1595 (+ w__6 ?x1585)))
 (let ((?x1576 (+ w__5 ?x1646)))
 (let ((?x1637 (+ w__4 ?x1628)))
 (let ((?x1620 (+ w__3 ?x1611)))
 (let ((?x1607 (+ w__2 ?x1598)))
 (let ((?x1590 (+ w__1 ?x1583)))
 (let ((?x1581 (+ w__0 ?x1580)))
 (let ((?x1582 (store start ?x1581 (+ (select start ?x1581) 1))))
 (let ((?x1593 (store ?x1582 ?x1590 (+ (select ?x1582 ?x1590) 1))))
 (let ((?x1610 (store ?x1593 ?x1607 (+ (select ?x1593 ?x1607) 1))))
 (let ((?x1627 (store ?x1610 ?x1620 (+ (select ?x1610 ?x1620) 1))))
 (let ((?x1645 (store ?x1627 ?x1637 (+ (select ?x1627 ?x1637) 1))))
 (let ((?x1579 (store ?x1645 ?x1576 (+ (select ?x1645 ?x1576) 1))))
 (let ((?x1603 (store ?x1579 ?x1595 (+ (select ?x1579 ?x1595) 1))))
 (let ((?x1622 (store ?x1603 ?x1614 (+ (select ?x1603 ?x1614) 1))))
 (let ((?x1641 (store ?x1622 ?x1633 (+ (select ?x1622 ?x1633) 1))))
 (= ?x1641 ?x1651)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1370 (* b__1 1)))
 (let ((?x1061 (+ v__8 ?x1370)))
 (let ((?x1175 (* b__1 9)))
 (let ((?x653 (+ v__7 ?x1175)))
 (let ((?x340 (* b__1 8)))
 (let ((?x640 (+ v__6 ?x340)))
 (let ((?x454 (* b__1 7)))
 (let ((?x409 (+ v__5 ?x454)))
 (let ((?x169 (* b__1 6)))
 (let ((?x722 (+ v__4 ?x169)))
 (let ((?x180 (* b__1 5)))
 (let ((?x1351 (+ v__3 ?x180)))
 (let ((?x724 (* b__1 4)))
 (let ((?x626 (+ v__2 ?x724)))
 (let ((?x219 (* b__1 3)))
 (let ((?x302 (+ v__1 ?x219)))
 (let ((?x18 (* b__1 2)))
 (let ((?x437 (+ v__0 ?x18)))
 (let ((?x468 (store start ?x437 (+ (select start ?x437) 1))))
 (let ((?x1053 (store ?x468 ?x302 (+ (select ?x468 ?x302) 1))))
 (let ((?x662 (store ?x1053 ?x626 (+ (select ?x1053 ?x626) 1))))
 (let ((?x571 (store ?x662 ?x1351 (+ (select ?x662 ?x1351) 1))))
 (let ((?x1024 (store ?x571 ?x722 (+ (select ?x571 ?x722) 1))))
 (let ((?x848 (store ?x1024 ?x409 (+ (select ?x1024 ?x409) 1))))
 (let ((?x207 (store ?x848 ?x640 (+ (select ?x848 ?x640) 1))))
 (let ((?x633 (store ?x207 ?x653 (+ (select ?x207 ?x653) 1))))
 (let ((?x1122 (store ?x633 ?x1061 (+ (select ?x633 ?x1061) 1))))
 (let ((?x949 (+ w__8 ?x1175)))
 (let ((?x304 (+ w__7 ?x340)))
 (let ((?x743 (+ w__6 ?x454)))
 (let ((?x1030 (+ w__5 ?x169)))
 (let ((?x598 (+ w__4 ?x180)))
 (let ((?x1080 (+ w__3 ?x724)))
 (let ((?x208 (+ w__2 ?x219)))
 (let ((?x251 (+ w__1 ?x18)))
 (let ((?x1062 (+ w__0 ?x1370)))
 (let ((?x506 (store start ?x1062 (+ (select start ?x1062) 1))))
 (let ((?x26 (store ?x506 ?x251 (+ (select ?x506 ?x251) 1))))
 (let ((?x358 (store ?x26 ?x208 (+ (select ?x26 ?x208) 1))))
 (let ((?x278 (store ?x358 ?x1080 (+ (select ?x358 ?x1080) 1))))
 (let ((?x655 (store ?x278 ?x598 (+ (select ?x278 ?x598) 1))))
 (let ((?x994 (store ?x655 ?x1030 (+ (select ?x655 ?x1030) 1))))
 (let ((?x1364 (store ?x994 ?x743 (+ (select ?x994 ?x743) 1))))
 (let ((?x514 (store ?x1364 ?x304 (+ (select ?x1364 ?x304) 1))))
 (let ((?x1064 (store ?x514 ?x949 (+ (select ?x514 ?x949) 1))))
 (= ?x1064 ?x1122)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1014 (* b__2 1)))
 (let ((?x491 (+ v__8 ?x1014)))
 (let ((?x311 (* b__2 9)))
 (let ((?x237 (+ v__7 ?x311)))
 (let ((?x537 (* b__2 8)))
 (let ((?x78 (+ v__6 ?x537)))
 (let ((?x1040 (* b__2 7)))
 (let ((?x1018 (+ v__5 ?x1040)))
 (let ((?x941 (* b__2 6)))
 (let ((?x337 (+ v__4 ?x941)))
 (let ((?x997 (* b__2 5)))
 (let ((?x1002 (+ v__3 ?x997)))
 (let ((?x961 (* b__2 4)))
 (let ((?x1338 (+ v__2 ?x961)))
 (let ((?x239 (* b__2 3)))
 (let ((?x708 (+ v__1 ?x239)))
 (let ((?x97 (* b__2 2)))
 (let ((?x105 (+ v__0 ?x97)))
 (let ((?x504 (store start ?x105 (+ (select start ?x105) 1))))
 (let ((?x191 (store ?x504 ?x708 (+ (select ?x504 ?x708) 1))))
 (let ((?x1349 (store ?x191 ?x1338 (+ (select ?x191 ?x1338) 1))))
 (let ((?x1226 (store ?x1349 ?x1002 (+ (select ?x1349 ?x1002) 1))))
 (let ((?x205 (store ?x1226 ?x337 (+ (select ?x1226 ?x337) 1))))
 (let ((?x910 (store ?x205 ?x1018 (+ (select ?x205 ?x1018) 1))))
 (let ((?x494 (store ?x910 ?x78 (+ (select ?x910 ?x78) 1))))
 (let ((?x987 (store ?x494 ?x237 (+ (select ?x494 ?x237) 1))))
 (let ((?x560 (store ?x987 ?x491 (+ (select ?x987 ?x491) 1))))
 (let ((?x763 (+ w__8 ?x311)))
 (let ((?x730 (+ w__7 ?x537)))
 (let ((?x909 (+ w__6 ?x1040)))
 (let ((?x800 (+ w__5 ?x941)))
 (let ((?x1187 (+ w__4 ?x997)))
 (let ((?x1350 (+ w__3 ?x961)))
 (let ((?x523 (+ w__2 ?x239)))
 (let ((?x531 (+ w__1 ?x97)))
 (let ((?x1015 (+ w__0 ?x1014)))
 (let ((?x628 (store start ?x1015 (+ (select start ?x1015) 1))))
 (let ((?x272 (store ?x628 ?x531 (+ (select ?x628 ?x531) 1))))
 (let ((?x446 (store ?x272 ?x523 (+ (select ?x272 ?x523) 1))))
 (let ((?x996 (store ?x446 ?x1350 (+ (select ?x446 ?x1350) 1))))
 (let ((?x940 (store ?x996 ?x1187 (+ (select ?x996 ?x1187) 1))))
 (let ((?x1039 (store ?x940 ?x800 (+ (select ?x940 ?x800) 1))))
 (let ((?x880 (store ?x1039 ?x909 (+ (select ?x1039 ?x909) 1))))
 (let ((?x323 (store ?x880 ?x730 (+ (select ?x880 ?x730) 1))))
 (let ((?x226 (store ?x323 ?x763 (+ (select ?x323 ?x763) 1))))
 (= ?x226 ?x560)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1308 (* b__3 1)))
 (let ((?x462 (+ v__8 ?x1308)))
 (let ((?x72 (* b__3 9)))
 (let ((?x300 (+ v__7 ?x72)))
 (let ((?x83 (* b__3 8)))
 (let ((?x507 (+ v__6 ?x83)))
 (let ((?x795 (* b__3 7)))
 (let ((?x820 (+ v__5 ?x795)))
 (let ((?x156 (* b__3 6)))
 (let ((?x240 (+ v__4 ?x156)))
 (let ((?x1290 (* b__3 5)))
 (let ((?x1296 (+ v__3 ?x1290)))
 (let ((?x1276 (* b__3 4)))
 (let ((?x1294 (+ v__2 ?x1276)))
 (let ((?x719 (* b__3 3)))
 (let ((?x695 (+ v__1 ?x719)))
 (let ((?x847 (* b__3 2)))
 (let ((?x87 (+ v__0 ?x847)))
 (let ((?x1087 (store start ?x87 (+ (select start ?x87) 1))))
 (let ((?x1094 (store ?x1087 ?x695 (+ (select ?x1087 ?x695) 1))))
 (let ((?x1309 (store ?x1094 ?x1294 (+ (select ?x1094 ?x1294) 1))))
 (let ((?x1268 (store ?x1309 ?x1296 (+ (select ?x1309 ?x1296) 1))))
 (let ((?x1052 (store ?x1268 ?x240 (+ (select ?x1268 ?x240) 1))))
 (let ((?x140 (store ?x1052 ?x820 (+ (select ?x1052 ?x820) 1))))
 (let ((?x363 (store ?x140 ?x507 (+ (select ?x140 ?x507) 1))))
 (let ((?x595 (store ?x363 ?x300 (+ (select ?x363 ?x300) 1))))
 (let ((?x185 (store ?x595 ?x462 (+ (select ?x595 ?x462) 1))))
 (let ((?x596 (+ w__8 ?x72)))
 (let ((?x100 (+ w__7 ?x83)))
 (let ((?x246 (+ w__6 ?x795)))
 (let ((?x555 (+ w__5 ?x156)))
 (let ((?x1259 (+ w__4 ?x1290)))
 (let ((?x1329 (+ w__3 ?x1276)))
 (let ((?x1095 (+ w__2 ?x719)))
 (let ((?x1088 (+ w__1 ?x847)))
 (let ((?x1314 (+ w__0 ?x1308)))
 (let ((?x639 (store start ?x1314 (+ (select start ?x1314) 1))))
 (let ((?x464 (store ?x639 ?x1088 (+ (select ?x639 ?x1088) 1))))
 (let ((?x1275 (store ?x464 ?x1095 (+ (select ?x464 ?x1095) 1))))
 (let ((?x1270 (store ?x1275 ?x1329 (+ (select ?x1275 ?x1329) 1))))
 (let ((?x1283 (store ?x1270 ?x1259 (+ (select ?x1270 ?x1259) 1))))
 (let ((?x971 (store ?x1283 ?x555 (+ (select ?x1283 ?x555) 1))))
 (let ((?x817 (store ?x971 ?x246 (+ (select ?x971 ?x246) 1))))
 (let ((?x627 (store ?x817 ?x100 (+ (select ?x817 ?x100) 1))))
 (let ((?x238 (store ?x627 ?x596 (+ (select ?x627 ?x596) 1))))
 (= ?x238 ?x185)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1229 (* b__4 1)))
 (let ((?x146 (+ v__8 ?x1229)))
 (let ((?x684 (* b__4 9)))
 (let ((?x303 (+ v__7 ?x684)))
 (let ((?x181 (* b__4 8)))
 (let ((?x1221 (+ v__6 ?x181)))
 (let ((?x922 (* b__4 7)))
 (let ((?x293 (+ v__5 ?x922)))
 (let ((?x1250 (* b__4 6)))
 (let ((?x834 (+ v__4 ?x1250)))
 (let ((?x581 (* b__4 5)))
 (let ((?x1247 (+ v__3 ?x581)))
 (let ((?x613 (* b__4 4)))
 (let ((?x1238 (+ v__2 ?x613)))
 (let ((?x983 (* b__4 3)))
 (let ((?x990 (+ v__1 ?x983)))
 (let ((?x1389 (* b__4 2)))
 (let ((?x1233 (+ v__0 ?x1389)))
 (let ((?x853 (store start ?x1233 (+ (select start ?x1233) 1))))
 (let ((?x661 (store ?x853 ?x990 (+ (select ?x853 ?x990) 1))))
 (let ((?x748 (store ?x661 ?x1238 (+ (select ?x661 ?x1238) 1))))
 (let ((?x178 (store ?x748 ?x1247 (+ (select ?x748 ?x1247) 1))))
 (let ((?x42 (store ?x178 ?x834 (+ (select ?x178 ?x834) 1))))
 (let ((?x401 (store ?x42 ?x293 (+ (select ?x42 ?x293) 1))))
 (let ((?x789 (store ?x401 ?x1221 (+ (select ?x401 ?x1221) 1))))
 (let ((?x495 (store ?x789 ?x303 (+ (select ?x789 ?x303) 1))))
 (let ((?x575 (store ?x495 ?x146 (+ (select ?x495 ?x146) 1))))
 (let ((?x916 (+ w__8 ?x684)))
 (let ((?x232 (+ w__7 ?x181)))
 (let ((?x299 (+ w__6 ?x922)))
 (let ((?x274 (+ w__5 ?x1250)))
 (let ((?x410 (+ w__4 ?x581)))
 (let ((?x1395 (+ w__3 ?x613)))
 (let ((?x682 (+ w__2 ?x983)))
 (let ((?x1042 (+ w__1 ?x1389)))
 (let ((?x1378 (+ w__0 ?x1229)))
 (let ((?x1375 (store start ?x1378 (+ (select start ?x1378) 1))))
 (let ((?x338 (store ?x1375 ?x1042 (+ (select ?x1375 ?x1042) 1))))
 (let ((?x714 (store ?x338 ?x682 (+ (select ?x338 ?x682) 1))))
 (let ((?x486 (store ?x714 ?x1395 (+ (select ?x714 ?x1395) 1))))
 (let ((?x745 (store ?x486 ?x410 (+ (select ?x486 ?x410) 1))))
 (let ((?x782 (store ?x745 ?x274 (+ (select ?x745 ?x274) 1))))
 (let ((?x372 (store ?x782 ?x299 (+ (select ?x782 ?x299) 1))))
 (let ((?x925 (store ?x372 ?x232 (+ (select ?x372 ?x232) 1))))
 (let ((?x920 (store ?x925 ?x916 (+ (select ?x925 ?x916) 1))))
 (= ?x920 ?x575)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x324 (* b__5 1)))
 (let ((?x974 (+ v__8 ?x324)))
 (let ((?x928 (* b__5 9)))
 (let ((?x929 (+ v__7 ?x928)))
 (let ((?x247 (* b__5 8)))
 (let ((?x1098 (+ v__6 ?x247)))
 (let ((?x1177 (* b__5 7)))
 (let ((?x1182 (+ v__5 ?x1177)))
 (let ((?x1157 (* b__5 6)))
 (let ((?x1158 (+ v__4 ?x1157)))
 (let ((?x1406 (* b__5 5)))
 (let ((?x310 (+ v__3 ?x1406)))
 (let ((?x1134 (* b__5 4)))
 (let ((?x1299 (+ v__2 ?x1134)))
 (let ((?x1320 (* b__5 3)))
 (let ((?x1145 (+ v__1 ?x1320)))
 (let ((?x701 (* b__5 2)))
 (let ((?x1372 (+ v__0 ?x701)))
 (let ((?x1301 (store start ?x1372 (+ (select start ?x1372) 1))))
 (let ((?x1142 (store ?x1301 ?x1145 (+ (select ?x1301 ?x1145) 1))))
 (let ((?x1127 (store ?x1142 ?x1299 (+ (select ?x1142 ?x1299) 1))))
 (let ((?x813 (store ?x1127 ?x310 (+ (select ?x1127 ?x310) 1))))
 (let ((?x1166 (store ?x813 ?x1158 (+ (select ?x813 ?x1158) 1))))
 (let ((?x1186 (store ?x1166 ?x1182 (+ (select ?x1166 ?x1182) 1))))
 (let ((?x1498 (store ?x1186 ?x1098 (+ (select ?x1186 ?x1098) 1))))
 (let ((?x931 (store ?x1498 ?x929 (+ (select ?x1498 ?x929) 1))))
 (let ((?x967 (store ?x931 ?x974 (+ (select ?x931 ?x974) 1))))
 (let ((?x932 (+ w__8 ?x928)))
 (let ((?x1538 (+ w__7 ?x247)))
 (let ((?x164 (+ w__6 ?x1177)))
 (let ((?x1167 (+ w__5 ?x1157)))
 (let ((?x601 (+ w__4 ?x1406)))
 (let ((?x1126 (+ w__3 ?x1134)))
 (let ((?x1269 (+ w__2 ?x1320)))
 (let ((?x1153 (+ w__1 ?x701)))
 (let ((?x381 (+ w__0 ?x324)))
 (let ((?x1336 (store start ?x381 (+ (select start ?x381) 1))))
 (let ((?x1146 (store ?x1336 ?x1153 (+ (select ?x1336 ?x1153) 1))))
 (let ((?x1135 (store ?x1146 ?x1269 (+ (select ?x1146 ?x1269) 1))))
 (let ((?x1405 (store ?x1135 ?x1126 (+ (select ?x1135 ?x1126) 1))))
 (let ((?x1149 (store ?x1405 ?x601 (+ (select ?x1405 ?x601) 1))))
 (let ((?x1176 (store ?x1149 ?x1167 (+ (select ?x1149 ?x1167) 1))))
 (let ((?x174 (store ?x1176 ?x164 (+ (select ?x1176 ?x164) 1))))
 (let ((?x927 (store ?x174 ?x1538 (+ (select ?x174 ?x1538) 1))))
 (let ((?x739 (store ?x927 ?x932 (+ (select ?x927 ?x932) 1))))
 (= ?x739 ?x967)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1572 (* b__6 1)))
 (let ((?x1716 (+ v__8 ?x1572)))
 (let ((?x1671 (* b__6 9)))
 (let ((?x1709 (+ v__7 ?x1671)))
 (let ((?x1701 (* b__6 8)))
 (let ((?x1702 (+ v__6 ?x1701)))
 (let ((?x392 (* b__6 7)))
 (let ((?x746 (+ v__5 ?x392)))
 (let ((?x1008 (* b__6 6)))
 (let ((?x1007 (+ v__4 ?x1008)))
 (let ((?x588 (* b__6 5)))
 (let ((?x993 (+ v__3 ?x588)))
 (let ((?x1382 (* b__6 4)))
 (let ((?x1381 (+ v__2 ?x1382)))
 (let ((?x969 (* b__6 3)))
 (let ((?x1399 (+ v__1 ?x969)))
 (let ((?x1194 (* b__6 2)))
 (let ((?x1195 (+ v__0 ?x1194)))
 (let ((?x875 (store start ?x1195 (+ (select start ?x1195) 1))))
 (let ((?x1394 (store ?x875 ?x1399 (+ (select ?x875 ?x1399) 1))))
 (let ((?x1346 (store ?x1394 ?x1381 (+ (select ?x1394 ?x1381) 1))))
 (let ((?x1019 (store ?x1346 ?x993 (+ (select ?x1346 ?x993) 1))))
 (let ((?x672 (store ?x1019 ?x1007 (+ (select ?x1019 ?x1007) 1))))
 (let ((?x1721 (store ?x672 ?x746 (+ (select ?x672 ?x746) 1))))
 (let ((?x1666 (store ?x1721 ?x1702 (+ (select ?x1721 ?x1702) 1))))
 (let ((?x1712 (store ?x1666 ?x1709 (+ (select ?x1666 ?x1709) 1))))
 (let ((?x1718 (store ?x1712 ?x1716 (+ (select ?x1712 ?x1716) 1))))
 (let ((?x1676 (+ w__8 ?x1671)))
 (let ((?x1705 (+ w__7 ?x1701)))
 (let ((?x1225 (+ w__6 ?x392)))
 (let ((?x102 (+ w__5 ?x1008)))
 (let ((?x1009 (+ w__4 ?x588)))
 (let ((?x1341 (+ w__3 ?x1382)))
 (let ((?x1390 (+ w__2 ?x969)))
 (let ((?x874 (+ w__1 ?x1194)))
 (let ((?x1573 (+ w__0 ?x1572)))
 (let ((?x1193 (store start ?x1573 (+ (select start ?x1573) 1))))
 (let ((?x646 (store ?x1193 ?x874 (+ (select ?x1193 ?x874) 1))))
 (let ((?x1356 (store ?x646 ?x1390 (+ (select ?x646 ?x1390) 1))))
 (let ((?x461 (store ?x1356 ?x1341 (+ (select ?x1356 ?x1341) 1))))
 (let ((?x175 (store ?x461 ?x1009 (+ (select ?x461 ?x1009) 1))))
 (let ((?x130 (store ?x175 ?x102 (+ (select ?x175 ?x102) 1))))
 (let ((?x1661 (store ?x130 ?x1225 (+ (select ?x130 ?x1225) 1))))
 (let ((?x1708 (store ?x1661 ?x1705 (+ (select ?x1661 ?x1705) 1))))
 (let ((?x1715 (store ?x1708 ?x1676 (+ (select ?x1708 ?x1676) 1))))
 (= ?x1715 ?x1718)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1287 (* b__7 1)))
 (let ((?x1215 (+ v__8 ?x1287)))
 (let ((?x984 (* b__7 9)))
 (let ((?x985 (+ v__7 ?x984)))
 (let ((?x50 (* b__7 8)))
 (let ((?x1368 (+ v__6 ?x50)))
 (let ((?x808 (* b__7 7)))
 (let ((?x696 (+ v__5 ?x808)))
 (let ((?x1679 (* b__7 6)))
 (let ((?x1680 (+ v__4 ?x1679)))
 (let ((?x1668 (* b__7 5)))
 (let ((?x1669 (+ v__3 ?x1668)))
 (let ((?x1657 (* b__7 4)))
 (let ((?x1658 (+ v__2 ?x1657)))
 (let ((?x1171 (* b__7 3)))
 (let ((?x1170 (+ v__1 ?x1171)))
 (let ((?x1317 (* b__7 2)))
 (let ((?x1325 (+ v__0 ?x1317)))
 (let ((?x1181 (store start ?x1325 (+ (select start ?x1325) 1))))
 (let ((?x1163 (store ?x1181 ?x1170 (+ (select ?x1181 ?x1170) 1))))
 (let ((?x1662 (store ?x1163 ?x1658 (+ (select ?x1163 ?x1658) 1))))
 (let ((?x1673 (store ?x1662 ?x1669 (+ (select ?x1662 ?x1669) 1))))
 (let ((?x1684 (store ?x1673 ?x1680 (+ (select ?x1673 ?x1680) 1))))
 (let ((?x362 (store ?x1684 ?x696 (+ (select ?x1684 ?x696) 1))))
 (let ((?x456 (store ?x362 ?x1368 (+ (select ?x362 ?x1368) 1))))
 (let ((?x377 (store ?x456 ?x985 (+ (select ?x456 ?x985) 1))))
 (let ((?x1082 (store ?x377 ?x1215 (+ (select ?x377 ?x1215) 1))))
 (let ((?x262 (+ w__8 ?x984)))
 (let ((?x148 (+ w__7 ?x50)))
 (let ((?x897 (+ w__6 ?x808)))
 (let ((?x1685 (+ w__5 ?x1679)))
 (let ((?x1674 (+ w__4 ?x1668)))
 (let ((?x1663 (+ w__3 ?x1657)))
 (let ((?x964 (+ w__2 ?x1171)))
 (let ((?x1179 (+ w__1 ?x1317)))
 (let ((?x1288 (+ w__0 ?x1287)))
 (let ((?x1307 (store start ?x1288 (+ (select start ?x1288) 1))))
 (let ((?x1172 (store ?x1307 ?x1179 (+ (select ?x1307 ?x1179) 1))))
 (let ((?x417 (store ?x1172 ?x964 (+ (select ?x1172 ?x964) 1))))
 (let ((?x1667 (store ?x417 ?x1663 (+ (select ?x417 ?x1663) 1))))
 (let ((?x1678 (store ?x1667 ?x1674 (+ (select ?x1667 ?x1674) 1))))
 (let ((?x211 (store ?x1678 ?x1685 (+ (select ?x1678 ?x1685) 1))))
 (let ((?x756 (store ?x211 ?x897 (+ (select ?x211 ?x897) 1))))
 (let ((?x1332 (store ?x756 ?x148 (+ (select ?x756 ?x148) 1))))
 (let ((?x591 (store ?x1332 ?x262 (+ (select ?x1332 ?x262) 1))))
 (= ?x591 ?x1082)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1249 (* b__8 1)))
 (let ((?x386 (+ v__8 ?x1249)))
 (let ((?x1035 (* b__8 9)))
 (let ((?x902 (+ v__7 ?x1035)))
 (let ((?x1073 (* b__8 8)))
 (let ((?x1074 (+ v__6 ?x1073)))
 (let ((?x220 (* b__8 7)))
 (let ((?x155 (+ v__5 ?x220)))
 (let ((?x729 (* b__8 6)))
 (let ((?x481 (+ v__4 ?x729)))
 (let ((?x527 (* b__8 5)))
 (let ((?x541 (+ v__3 ?x527)))
 (let ((?x1363 (* b__8 4)))
 (let ((?x387 (+ v__2 ?x1363)))
 (let ((?x441 (* b__8 3)))
 (let ((?x109 (+ v__1 ?x441)))
 (let ((?x526 (* b__8 2)))
 (let ((?x379 (+ v__0 ?x526)))
 (let ((?x1100 (store start ?x379 (+ (select start ?x379) 1))))
 (let ((?x705 (store ?x1100 ?x109 (+ (select ?x1100 ?x109) 1))))
 (let ((?x776 (store ?x705 ?x387 (+ (select ?x705 ?x387) 1))))
 (let ((?x426 (store ?x776 ?x541 (+ (select ?x776 ?x541) 1))))
 (let ((?x950 (store ?x426 ?x481 (+ (select ?x426 ?x481) 1))))
 (let ((?x608 (store ?x950 ?x155 (+ (select ?x950 ?x155) 1))))
 (let ((?x1006 (store ?x608 ?x1074 (+ (select ?x608 ?x1074) 1))))
 (let ((?x872 (store ?x1006 ?x902 (+ (select ?x1006 ?x902) 1))))
 (let ((?x1723 (store ?x872 ?x386 (+ (select ?x872 ?x386) 1))))
 (let ((?x871 (+ w__8 ?x1035)))
 (let ((?x1020 (+ w__7 ?x1073)))
 (let ((?x424 (+ w__6 ?x220)))
 (let ((?x1079 (+ w__5 ?x729)))
 (let ((?x228 (+ w__4 ?x527)))
 (let ((?x767 (+ w__3 ?x1363)))
 (let ((?x1222 (+ w__2 ?x441)))
 (let ((?x1102 (+ w__1 ?x526)))
 (let ((?x529 (+ w__0 ?x1249)))
 (let ((?x166 (store start ?x529 (+ (select start ?x529) 1))))
 (let ((?x351 (store ?x166 ?x1102 (+ (select ?x166 ?x1102) 1))))
 (let ((?x1362 (store ?x351 ?x1222 (+ (select ?x351 ?x1222) 1))))
 (let ((?x255 (store ?x1362 ?x767 (+ (select ?x1362 ?x767) 1))))
 (let ((?x270 (store ?x255 ?x228 (+ (select ?x255 ?x228) 1))))
 (let ((?x411 (store ?x270 ?x1079 (+ (select ?x270 ?x1079) 1))))
 (let ((?x512 (store ?x411 ?x424 (+ (select ?x411 ?x424) 1))))
 (let ((?x1010 (store ?x512 ?x1020 (+ (select ?x512 ?x1020) 1))))
 (let ((?x717 (store ?x1010 ?x871 (+ (select ?x1010 ?x871) 1))))
 (= ?x717 ?x1723)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1070 (* b__9 1)))
 (let ((?x712 (+ v__8 ?x1070)))
 (let ((?x862 (* b__9 9)))
 (let ((?x480 (+ v__7 ?x862)))
 (let ((?x1402 (* b__9 8)))
 (let ((?x1401 (+ v__6 ?x1402)))
 (let ((?x1255 (* b__9 7)))
 (let ((?x643 (+ v__5 ?x1255)))
 (let ((?x733 (* b__9 6)))
 (let ((?x809 (+ v__4 ?x733)))
 (let ((?x70 (* b__9 5)))
 (let ((?x252 (+ v__3 ?x70)))
 (let ((?x86 (* b__9 4)))
 (let ((?x179 (+ v__2 ?x86)))
 (let ((?x501 (* b__9 3)))
 (let ((?x435 (+ v__1 ?x501)))
 (let ((?x118 (* b__9 2)))
 (let ((?x687 (+ v__0 ?x118)))
 (let ((?x545 (store start ?x687 (+ (select start ?x687) 1))))
 (let ((?x681 (store ?x545 ?x435 (+ (select ?x545 ?x435) 1))))
 (let ((?x709 (store ?x681 ?x179 (+ (select ?x681 ?x179) 1))))
 (let ((?x508 (store ?x709 ?x252 (+ (select ?x709 ?x252) 1))))
 (let ((?x367 (store ?x508 ?x809 (+ (select ?x508 ?x809) 1))))
 (let ((?x74 (store ?x367 ?x643 (+ (select ?x367 ?x643) 1))))
 (let ((?x335 (store ?x74 ?x1401 (+ (select ?x74 ?x1401) 1))))
 (let ((?x390 (store ?x335 ?x480 (+ (select ?x335 ?x480) 1))))
 (let ((?x619 (store ?x390 ?x712 (+ (select ?x390 ?x712) 1))))
 (let ((?x422 (+ w__8 ?x862)))
 (let ((?x327 (+ w__7 ?x1402)))
 (let ((?x551 (+ w__6 ?x1255)))
 (let ((?x1057 (+ w__5 ?x733)))
 (let ((?x831 (+ w__4 ?x70)))
 (let ((?x452 (+ w__3 ?x86)))
 (let ((?x670 (+ w__2 ?x501)))
 (let ((?x544 (+ w__1 ?x118)))
 (let ((?x229 (+ w__0 ?x1070)))
 (let ((?x256 (store start ?x229 (+ (select start ?x229) 1))))
 (let ((?x150 (store ?x256 ?x544 (+ (select ?x256 ?x544) 1))))
 (let ((?x836 (store ?x150 ?x670 (+ (select ?x150 ?x670) 1))))
 (let ((?x116 (store ?x836 ?x452 (+ (select ?x836 ?x452) 1))))
 (let ((?x732 (store ?x116 ?x831 (+ (select ?x116 ?x831) 1))))
 (let ((?x981 (store ?x732 ?x1057 (+ (select ?x732 ?x1057) 1))))
 (let ((?x979 (store ?x981 ?x551 (+ (select ?x981 ?x551) 1))))
 (let ((?x857 (store ?x979 ?x327 (+ (select ?x979 ?x327) 1))))
 (let ((?x593 (store ?x857 ?x422 (+ (select ?x857 ?x422) 1))))
 (= ?x593 ?x619)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let (($x904 (and (= w__1 v__0) (= w__2 v__1) (= w__3 v__2) (= w__4 v__3) (= w__5 v__4) (= w__6 v__5) (= w__7 v__6) (= w__8 v__7) (= w__0 v__8))))
 (not $x904)))
(check-sat)
(exit)
