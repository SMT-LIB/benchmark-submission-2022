
(set-info :smt-lib-version 2.6)
(set-logic QF_ANIA)
(set-info :source |
Generated by: Alex Ozdemir
Generated on: 2021-12-13
Generator: Z3Py API
Application: Soundness counterexamples for a cryptographic argument
Target solver: cvc5, Z3

# The special soundness of PLONK's grand product argument

Let F be a prime-order field and n a natural less than F's size. Let n = {1,
2, .., n} be a subset of F. The PLONK[1] grand product argument relies on the
fact that given a permutation pi: [n] -> [n] and functions A, B: [n] -> [n],

    prod_i (A(i) + beta * i + gamma) = prod_i (B(i) + beta * pi(i) + gamma)

holds for random beta, gamma in F with good probability only when A composed
with pi is B.

Does this implication hold in a deterministic setting, where the above is
checked for distinct---but non-random---beta and gamma?

If it is checked for n+1 distinct values of beta, and for each value of beta,
n+1 distinct values of gamma, then yes. One can prove this.

If it is checked for 2 distinct values of beta, and for each value of beta, n+1
distinct values of gamma, then no.

This series of benchmarks checks the implication holds
* for varying n
* for a fixed permutation pi = (2 3 ... n 1)
* for all A and B
  * that must be equal ("same") or may differ ("diff")
* for all distinct 2 ("unsound") or n+1 ("sound") beta values

rather than instantiating gamma explicitly, we just check that the multisets

    {{A[i] + beta * i}}_i  ==  {{B[i] + beta * pi(i)}}_i

are equal.

[1]: https://eprint.iacr.org/2019/953

|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "crafted")
(set-info :status unsat)
; benchmark generated from python API
(declare-fun w__0 () Int)
(declare-fun v__0 () Int)
(declare-fun w__1 () Int)
(declare-fun v__1 () Int)
(declare-fun w__2 () Int)
(declare-fun v__2 () Int)
(declare-fun w__3 () Int)
(declare-fun v__3 () Int)
(declare-fun w__4 () Int)
(declare-fun v__4 () Int)
(declare-fun w__5 () Int)
(declare-fun v__5 () Int)
(declare-fun w__6 () Int)
(declare-fun v__6 () Int)
(declare-fun w__7 () Int)
(declare-fun v__7 () Int)
(declare-fun w__8 () Int)
(declare-fun v__8 () Int)
(declare-fun w__9 () Int)
(declare-fun v__9 () Int)
(declare-fun b__10 () Int)
(declare-fun b__9 () Int)
(declare-fun b__8 () Int)
(declare-fun b__7 () Int)
(declare-fun b__6 () Int)
(declare-fun b__5 () Int)
(declare-fun b__4 () Int)
(declare-fun b__3 () Int)
(declare-fun b__2 () Int)
(declare-fun b__1 () Int)
(declare-fun b__0 () Int)
(declare-fun start () (Array Int Int))
(assert
 (= v__0 w__0))
(assert
 (= v__1 w__1))
(assert
 (= v__2 w__2))
(assert
 (= v__3 w__3))
(assert
 (= v__4 w__4))
(assert
 (= v__5 w__5))
(assert
 (= v__6 w__6))
(assert
 (= v__7 w__7))
(assert
 (= v__8 w__8))
(assert
 (= v__9 w__9))
(assert
 (and (distinct b__0 b__1 b__2 b__3 b__4 b__5 b__6 b__7 b__8 b__9 b__10) true))
(assert
 (>= w__0 0))
(assert
 (>= v__0 0))
(assert
 (<= w__0 10))
(assert
 (<= v__0 10))
(assert
 (>= w__1 0))
(assert
 (>= v__1 0))
(assert
 (<= w__1 10))
(assert
 (<= v__1 10))
(assert
 (>= w__2 0))
(assert
 (>= v__2 0))
(assert
 (<= w__2 10))
(assert
 (<= v__2 10))
(assert
 (>= w__3 0))
(assert
 (>= v__3 0))
(assert
 (<= w__3 10))
(assert
 (<= v__3 10))
(assert
 (>= w__4 0))
(assert
 (>= v__4 0))
(assert
 (<= w__4 10))
(assert
 (<= v__4 10))
(assert
 (>= w__5 0))
(assert
 (>= v__5 0))
(assert
 (<= w__5 10))
(assert
 (<= v__5 10))
(assert
 (>= w__6 0))
(assert
 (>= v__6 0))
(assert
 (<= w__6 10))
(assert
 (<= v__6 10))
(assert
 (>= w__7 0))
(assert
 (>= v__7 0))
(assert
 (<= w__7 10))
(assert
 (<= v__7 10))
(assert
 (>= w__8 0))
(assert
 (>= v__8 0))
(assert
 (<= w__8 10))
(assert
 (<= v__8 10))
(assert
 (>= w__9 0))
(assert
 (>= v__9 0))
(assert
 (<= w__9 10))
(assert
 (<= v__9 10))
(assert
 (let ((?x536 (* b__0 1)))
 (let ((?x1324 (+ v__9 ?x536)))
 (let ((?x1305 (* b__0 10)))
 (let ((?x1306 (+ v__8 ?x1305)))
 (let ((?x155 (* b__0 9)))
 (let ((?x189 (+ v__7 ?x155)))
 (let ((?x577 (* b__0 8)))
 (let ((?x1404 (+ v__6 ?x577)))
 (let ((?x174 (* b__0 7)))
 (let ((?x67 (+ v__5 ?x174)))
 (let ((?x1320 (* b__0 6)))
 (let ((?x1269 (+ v__4 ?x1320)))
 (let ((?x1723 (* b__0 5)))
 (let ((?x1724 (+ v__3 ?x1723)))
 (let ((?x1149 (* b__0 4)))
 (let ((?x608 (+ v__2 ?x1149)))
 (let ((?x1159 (* b__0 3)))
 (let ((?x1165 (+ v__1 ?x1159)))
 (let ((?x1144 (* b__0 2)))
 (let ((?x1143 (+ v__0 ?x1144)))
 (let ((?x1128 (store start ?x1143 (+ (select start ?x1143) 1))))
 (let ((?x1182 (store ?x1128 ?x1165 (+ (select ?x1128 ?x1165) 1))))
 (let ((?x1005 (store ?x1182 ?x608 (+ (select ?x1182 ?x608) 1))))
 (let ((?x1719 (store ?x1005 ?x1724 (+ (select ?x1005 ?x1724) 1))))
 (let ((?x601 (store ?x1719 ?x1269 (+ (select ?x1719 ?x1269) 1))))
 (let ((?x45 (store ?x601 ?x67 (+ (select ?x601 ?x67) 1))))
 (let ((?x1183 (store ?x45 ?x1404 (+ (select ?x45 ?x1404) 1))))
 (let ((?x901 (store ?x1183 ?x189 (+ (select ?x1183 ?x189) 1))))
 (let ((?x701 (store ?x901 ?x1306 (+ (select ?x901 ?x1306) 1))))
 (let ((?x1177 (store ?x701 ?x1324 (+ (select ?x701 ?x1324) 1))))
 (let ((?x1153 (+ w__9 ?x1305)))
 (let ((?x873 (+ w__8 ?x155)))
 (let ((?x1185 (+ w__7 ?x577)))
 (let ((?x1151 (+ w__6 ?x174)))
 (let ((?x812 (+ w__5 ?x1320)))
 (let ((?x324 (+ w__4 ?x1723)))
 (let ((?x1006 (+ w__3 ?x1149)))
 (let ((?x1098 (+ w__2 ?x1159)))
 (let ((?x1136 (+ w__1 ?x1144)))
 (let ((?x1301 (+ w__0 ?x536)))
 (let ((?x1145 (store start ?x1301 (+ (select start ?x1301) 1))))
 (let ((?x1180 (store ?x1145 ?x1136 (+ (select ?x1145 ?x1136) 1))))
 (let ((?x395 (store ?x1180 ?x1098 (+ (select ?x1180 ?x1098) 1))))
 (let ((?x1722 (store ?x395 ?x1006 (+ (select ?x395 ?x1006) 1))))
 (let ((?x1146 (store ?x1722 ?x324 (+ (select ?x1722 ?x324) 1))))
 (let ((?x837 (store ?x1146 ?x812 (+ (select ?x1146 ?x812) 1))))
 (let ((?x1133 (store ?x837 ?x1151 (+ (select ?x837 ?x1151) 1))))
 (let ((?x950 (store ?x1133 ?x1185 (+ (select ?x1133 ?x1185) 1))))
 (let ((?x1288 (store ?x950 ?x873 (+ (select ?x950 ?x873) 1))))
 (let ((?x1126 (store ?x1288 ?x1153 (+ (select ?x1288 ?x1153) 1))))
 (= ?x1126 ?x1177))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1326 (* b__1 1)))
 (let ((?x1368 (+ v__9 ?x1326)))
 (let ((?x1670 (* b__1 10)))
 (let ((?x1672 (+ v__8 ?x1670)))
 (let ((?x36 (* b__1 9)))
 (let ((?x417 (+ v__7 ?x36)))
 (let ((?x148 (* b__1 8)))
 (let ((?x1219 (+ v__6 ?x148)))
 (let ((?x1376 (* b__1 7)))
 (let ((?x1375 (+ v__5 ?x1376)))
 (let ((?x929 (* b__1 6)))
 (let ((?x736 (+ v__4 ?x929)))
 (let ((?x48 (* b__1 5)))
 (let ((?x307 (+ v__3 ?x48)))
 (let ((?x160 (* b__1 4)))
 (let ((?x74 (+ v__2 ?x160)))
 (let ((?x712 (* b__1 3)))
 (let ((?x86 (+ v__1 ?x712)))
 (let ((?x1181 (* b__1 2)))
 (let ((?x1170 (+ v__0 ?x1181)))
 (let ((?x1685 (store start ?x1170 (+ (select start ?x1170) 1))))
 (let ((?x1051 (store ?x1685 ?x86 (+ (select ?x1685 ?x86) 1))))
 (let ((?x280 (store ?x1051 ?x74 (+ (select ?x1051 ?x74) 1))))
 (let ((?x753 (store ?x280 ?x307 (+ (select ?x280 ?x307) 1))))
 (let ((?x973 (store ?x753 ?x736 (+ (select ?x753 ?x736) 1))))
 (let ((?x1683 (store ?x973 ?x1375 (+ (select ?x973 ?x1375) 1))))
 (let ((?x1178 (store ?x1683 ?x1219 (+ (select ?x1683 ?x1219) 1))))
 (let ((?x1658 (store ?x1178 ?x417 (+ (select ?x1178 ?x417) 1))))
 (let ((?x1682 (store ?x1658 ?x1672 (+ (select ?x1658 ?x1672) 1))))
 (let ((?x705 (store ?x1682 ?x1368 (+ (select ?x1682 ?x1368) 1))))
 (let ((?x1684 (+ w__9 ?x1670)))
 (let ((?x1659 (+ w__8 ?x36)))
 (let ((?x1173 (+ w__7 ?x148)))
 (let ((?x897 (+ w__6 ?x1376)))
 (let ((?x967 (+ w__5 ?x929)))
 (let ((?x927 (+ w__4 ?x48)))
 (let ((?x390 (+ w__3 ?x160)))
 (let ((?x508 (+ w__2 ?x712)))
 (let ((?x129 (+ w__1 ?x1181)))
 (let ((?x1120 (+ w__0 ?x1326)))
 (let ((?x1360 (store start ?x1120 (+ (select start ?x1120) 1))))
 (let ((?x1070 (store ?x1360 ?x129 (+ (select ?x1360 ?x129) 1))))
 (let ((?x685 (store ?x1070 ?x508 (+ (select ?x1070 ?x508) 1))))
 (let ((?x544 (store ?x685 ?x390 (+ (select ?x685 ?x390) 1))))
 (let ((?x1498 (store ?x544 ?x927 (+ (select ?x544 ?x927) 1))))
 (let ((?x1378 (store ?x1498 ?x967 (+ (select ?x1498 ?x967) 1))))
 (let ((?x50 (store ?x1378 ?x897 (+ (select ?x1378 ?x897) 1))))
 (let ((?x602 (store ?x50 ?x1173 (+ (select ?x50 ?x1173) 1))))
 (let ((?x1669 (store ?x602 ?x1659 (+ (select ?x602 ?x1659) 1))))
 (let ((?x362 (store ?x1669 ?x1684 (+ (select ?x1669 ?x1684) 1))))
 (= ?x362 ?x705))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x827 (* b__2 1)))
 (let ((?x1260 (+ v__9 ?x827)))
 (let ((?x464 (* b__2 10)))
 (let ((?x719 (+ v__8 ?x464)))
 (let ((?x1308 (* b__2 9)))
 (let ((?x1314 (+ v__7 ?x1308)))
 (let ((?x303 (* b__2 8)))
 (let ((?x631 (+ v__6 ?x303)))
 (let ((?x42 (* b__2 7)))
 (let ((?x293 (+ v__5 ?x42)))
 (let ((?x94 (* b__2 6)))
 (let ((?x748 (+ v__4 ?x94)))
 (let ((?x1235 (* b__2 5)))
 (let ((?x1366 (+ v__3 ?x1235)))
 (let ((?x849 (* b__2 4)))
 (let ((?x80 (+ v__2 ?x849)))
 (let ((?x783 (* b__2 3)))
 (let ((?x782 (+ v__1 ?x783)))
 (let ((?x486 (* b__2 2)))
 (let ((?x581 (+ v__0 ?x486)))
 (let ((?x641 (store start ?x581 (+ (select start ?x581) 1))))
 (let ((?x384 (store ?x641 ?x782 (+ (select ?x641 ?x782) 1))))
 (let ((?x916 (store ?x384 ?x80 (+ (select ?x384 ?x80) 1))))
 (let ((?x1000 (store ?x916 ?x1366 (+ (select ?x916 ?x1366) 1))))
 (let ((?x645 (store ?x1000 ?x748 (+ (select ?x1000 ?x748) 1))))
 (let ((?x401 (store ?x645 ?x293 (+ (select ?x645 ?x293) 1))))
 (let ((?x146 (store ?x401 ?x631 (+ (select ?x401 ?x631) 1))))
 (let ((?x639 (store ?x146 ?x1314 (+ (select ?x146 ?x1314) 1))))
 (let ((?x1274 (store ?x639 ?x719 (+ (select ?x639 ?x719) 1))))
 (let ((?x1259 (store ?x1274 ?x1260 (+ (select ?x1274 ?x1260) 1))))
 (let ((?x1275 (+ w__9 ?x464)))
 (let ((?x847 (+ w__8 ?x1308)))
 (let ((?x360 (+ w__7 ?x303)))
 (let ((?x1221 (+ w__6 ?x42)))
 (let ((?x178 (+ w__5 ?x94)))
 (let ((?x1110 (+ w__4 ?x1235)))
 (let ((?x757 (+ w__3 ?x849)))
 (let ((?x443 (+ w__2 ?x783)))
 (let ((?x745 (+ w__1 ?x486)))
 (let ((?x423 (+ w__0 ?x827)))
 (let ((?x519 (store start ?x423 (+ (select start ?x423) 1))))
 (let ((?x721 (store ?x519 ?x745 (+ (select ?x519 ?x745) 1))))
 (let ((?x232 (store ?x721 ?x443 (+ (select ?x721 ?x443) 1))))
 (let ((?x1233 (store ?x232 ?x757 (+ (select ?x232 ?x757) 1))))
 (let ((?x394 (store ?x1233 ?x1110 (+ (select ?x1233 ?x1110) 1))))
 (let ((?x850 (store ?x394 ?x178 (+ (select ?x394 ?x178) 1))))
 (let ((?x789 (store ?x850 ?x1221 (+ (select ?x850 ?x1221) 1))))
 (let ((?x509 (store ?x789 ?x360 (+ (select ?x789 ?x360) 1))))
 (let ((?x810 (store ?x509 ?x847 (+ (select ?x509 ?x847) 1))))
 (let ((?x1330 (store ?x810 ?x1275 (+ (select ?x810 ?x1275) 1))))
 (= ?x1330 ?x1259))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x909 (* b__3 1)))
 (let ((?x340 (+ v__9 ?x909)))
 (let ((?x1030 (* b__3 10)))
 (let ((?x1031 (+ v__8 ?x1030)))
 (let ((?x1056 (* b__3 9)))
 (let ((?x253 (+ v__7 ?x1056)))
 (let ((?x273 (* b__3 8)))
 (let ((?x26 (+ v__6 ?x273)))
 (let ((?x352 (* b__3 7)))
 (let ((?x1370 (+ v__5 ?x352)))
 (let ((?x494 (* b__3 6)))
 (let ((?x237 (+ v__4 ?x494)))
 (let ((?x162 (* b__3 5)))
 (let ((?x205 (+ v__3 ?x162)))
 (let ((?x1339 (* b__3 4)))
 (let ((?x1340 (+ v__2 ?x1339)))
 (let ((?x105 (* b__3 3)))
 (let ((?x583 (+ v__1 ?x105)))
 (let ((?x730 (* b__3 2)))
 (let ((?x136 (+ v__0 ?x730)))
 (let ((?x311 (store start ?x136 (+ (select start ?x136) 1))))
 (let ((?x708 (store ?x311 ?x583 (+ (select ?x311 ?x583) 1))))
 (let ((?x1011 (store ?x708 ?x1340 (+ (select ?x708 ?x1340) 1))))
 (let ((?x858 (store ?x1011 ?x205 (+ (select ?x1011 ?x205) 1))))
 (let ((?x987 (store ?x858 ?x237 (+ (select ?x858 ?x237) 1))))
 (let ((?x497 (store ?x987 ?x1370 (+ (select ?x987 ?x1370) 1))))
 (let ((?x391 (store ?x497 ?x26 (+ (select ?x497 ?x26) 1))))
 (let ((?x598 (store ?x391 ?x253 (+ (select ?x391 ?x253) 1))))
 (let ((?x454 (store ?x598 ?x1031 (+ (select ?x598 ?x1031) 1))))
 (let ((?x115 (store ?x454 ?x340 (+ (select ?x454 ?x340) 1))))
 (let ((?x743 (+ w__9 ?x1030)))
 (let ((?x493 (+ w__8 ?x1056)))
 (let ((?x801 (+ w__7 ?x273)))
 (let ((?x506 (+ w__6 ?x352)))
 (let ((?x491 (+ w__5 ?x494)))
 (let ((?x910 (+ w__4 ?x162)))
 (let ((?x934 (+ w__3 ?x1339)))
 (let ((?x621 (+ w__2 ?x105)))
 (let ((?x763 (+ w__1 ?x730)))
 (let ((?x891 (+ w__0 ?x909)))
 (let ((?x537 (store start ?x891 (+ (select start ?x891) 1))))
 (let ((?x226 (store ?x537 ?x763 (+ (select ?x537 ?x763) 1))))
 (let ((?x1338 (store ?x226 ?x621 (+ (select ?x226 ?x621) 1))))
 (let ((?x942 (store ?x1338 ?x934 (+ (select ?x1338 ?x934) 1))))
 (let ((?x330 (store ?x942 ?x910 (+ (select ?x942 ?x910) 1))))
 (let ((?x560 (store ?x330 ?x491 (+ (select ?x330 ?x491) 1))))
 (let ((?x554 (store ?x560 ?x506 (+ (select ?x560 ?x506) 1))))
 (let ((?x1080 (store ?x554 ?x801 (+ (select ?x554 ?x801) 1))))
 (let ((?x169 (store ?x1080 ?x493 (+ (select ?x1080 ?x493) 1))))
 (let ((?x1364 (store ?x169 ?x743 (+ (select ?x169 ?x743) 1))))
 (= ?x1364 ?x115))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1589 (* b__4 1)))
 (let ((?x193 (+ v__9 ?x1589)))
 (let ((?x660 (* b__4 10)))
 (let ((?x647 (+ v__8 ?x660)))
 (let ((?x1424 (* b__4 9)))
 (let ((?x1423 (+ v__7 ?x1424)))
 (let ((?x1441 (* b__4 8)))
 (let ((?x1440 (+ v__6 ?x1441)))
 (let ((?x1458 (* b__4 7)))
 (let ((?x1453 (+ v__5 ?x1458)))
 (let ((?x1471 (* b__4 6)))
 (let ((?x1470 (+ v__4 ?x1471)))
 (let ((?x1651 (* b__4 5)))
 (let ((?x1487 (+ v__3 ?x1651)))
 (let ((?x1612 (* b__4 4)))
 (let ((?x1613 (+ v__2 ?x1612)))
 (let ((?x1653 (* b__4 3)))
 (let ((?x1654 (+ v__1 ?x1653)))
 (let ((?x1616 (* b__4 2)))
 (let ((?x1617 (+ v__0 ?x1616)))
 (let ((?x1629 (store start ?x1617 (+ (select start ?x1617) 1))))
 (let ((?x1587 (store ?x1629 ?x1654 (+ (select ?x1629 ?x1654) 1))))
 (let ((?x1631 (store ?x1587 ?x1613 (+ (select ?x1587 ?x1613) 1))))
 (let ((?x1480 (store ?x1631 ?x1487 (+ (select ?x1631 ?x1487) 1))))
 (let ((?x1467 (store ?x1480 ?x1470 (+ (select ?x1480 ?x1470) 1))))
 (let ((?x1450 (store ?x1467 ?x1453 (+ (select ?x1467 ?x1453) 1))))
 (let ((?x1433 (store ?x1450 ?x1440 (+ (select ?x1450 ?x1440) 1))))
 (let ((?x1740 (store ?x1433 ?x1423 (+ (select ?x1433 ?x1423) 1))))
 (let ((?x38 (store ?x1740 ?x647 (+ (select ?x1740 ?x647) 1))))
 (let ((?x259 (store ?x38 ?x193 (+ (select ?x38 ?x193) 1))))
 (let ((?x425 (+ w__9 ?x660)))
 (let ((?x376 (+ w__8 ?x1424)))
 (let ((?x1432 (+ w__7 ?x1441)))
 (let ((?x1449 (+ w__6 ?x1458)))
 (let ((?x1462 (+ w__5 ?x1471)))
 (let ((?x1479 (+ w__4 ?x1651)))
 (let ((?x1632 (+ w__3 ?x1612)))
 (let ((?x1588 (+ w__2 ?x1653)))
 (let ((?x1634 (+ w__1 ?x1616)))
 (let ((?x1599 (+ w__0 ?x1589)))
 (let ((?x1602 (store start ?x1599 (+ (select start ?x1599) 1))))
 (let ((?x1647 (store ?x1602 ?x1634 (+ (select ?x1602 ?x1634) 1))))
 (let ((?x1606 (store ?x1647 ?x1588 (+ (select ?x1647 ?x1588) 1))))
 (let ((?x1650 (store ?x1606 ?x1632 (+ (select ?x1606 ?x1632) 1))))
 (let ((?x1476 (store ?x1650 ?x1479 (+ (select ?x1650 ?x1479) 1))))
 (let ((?x1459 (store ?x1476 ?x1462 (+ (select ?x1476 ?x1462) 1))))
 (let ((?x1442 (store ?x1459 ?x1449 (+ (select ?x1459 ?x1449) 1))))
 (let ((?x1425 (store ?x1442 ?x1432 (+ (select ?x1442 ?x1432) 1))))
 (let ((?x1388 (store ?x1425 ?x376 (+ (select ?x1425 ?x376) 1))))
 (let ((?x291 (store ?x1388 ?x425 (+ (select ?x1388 ?x425) 1))))
 (= ?x291 ?x259))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1517 (* b__5 1)))
 (let ((?x1335 (+ v__9 ?x1517)))
 (let ((?x184 (* b__5 10)))
 (let ((?x250 (+ v__8 ?x184)))
 (let ((?x618 (* b__5 9)))
 (let ((?x290 (+ v__7 ?x618)))
 (let ((?x192 (* b__5 8)))
 (let ((?x1207 (+ v__6 ?x192)))
 (let ((?x777 (* b__5 7)))
 (let ((?x956 (+ v__5 ?x777)))
 (let ((?x1524 (* b__5 6)))
 (let ((?x1525 (+ v__4 ?x1524)))
 (let ((?x1154 (* b__5 5)))
 (let ((?x1092 (+ v__3 ?x1154)))
 (let ((?x159 (* b__5 4)))
 (let ((?x124 (+ v__2 ?x159)))
 (let ((?x815 (* b__5 3)))
 (let ((?x818 (+ v__1 ?x815)))
 (let ((?x1016 (* b__5 2)))
 (let ((?x368 (+ v__0 ?x1016)))
 (let ((?x632 (store start ?x368 (+ (select start ?x368) 1))))
 (let ((?x1049 (store ?x632 ?x818 (+ (select ?x632 ?x818) 1))))
 (let ((?x1687 (store ?x1049 ?x124 (+ (select ?x1049 ?x124) 1))))
 (let ((?x399 (store ?x1687 ?x1092 (+ (select ?x1687 ?x1092) 1))))
 (let ((?x1212 (store ?x399 ?x1525 (+ (select ?x399 ?x1525) 1))))
 (let ((?x1206 (store ?x1212 ?x956 (+ (select ?x1212 ?x956) 1))))
 (let ((?x503 (store ?x1206 ?x1207 (+ (select ?x1206 ?x1207) 1))))
 (let ((?x548 (store ?x503 ?x290 (+ (select ?x503 ?x290) 1))))
 (let ((?x790 (store ?x548 ?x250 (+ (select ?x548 ?x250) 1))))
 (let ((?x1344 (store ?x790 ?x1335 (+ (select ?x790 ?x1335) 1))))
 (let ((?x568 (+ w__9 ?x184)))
 (let ((?x104 (+ w__8 ?x618)))
 (let ((?x505 (+ w__7 ?x192)))
 (let ((?x295 (+ w__6 ?x777)))
 (let ((?x1101 (+ w__5 ?x1524)))
 (let ((?x1519 (+ w__4 ?x1154)))
 (let ((?x1413 (+ w__3 ?x159)))
 (let ((?x511 (+ w__2 ?x815)))
 (let ((?x281 (+ w__1 ?x1016)))
 (let ((?x344 (+ w__0 ?x1517)))
 (let ((?x471 (store start ?x344 (+ (select start ?x344) 1))))
 (let ((?x1732 (store ?x471 ?x281 (+ (select ?x471 ?x281) 1))))
 (let ((?x610 (store ?x1732 ?x511 (+ (select ?x1732 ?x511) 1))))
 (let ((?x1076 (store ?x610 ?x1413 (+ (select ?x610 ?x1413) 1))))
 (let ((?x1522 (store ?x1076 ?x1519 (+ (select ?x1076 ?x1519) 1))))
 (let ((?x561 (store ?x1522 ?x1101 (+ (select ?x1522 ?x1101) 1))))
 (let ((?x565 (store ?x561 ?x295 (+ (select ?x561 ?x295) 1))))
 (let ((?x427 (store ?x565 ?x505 (+ (select ?x565 ?x505) 1))))
 (let ((?x1369 (store ?x427 ?x104 (+ (select ?x427 ?x104) 1))))
 (let ((?x1132 (store ?x1369 ?x568 (+ (select ?x1369 ?x568) 1))))
 (= ?x1132 ?x1344))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1105 (* b__6 1)))
 (let ((?x1439 (+ v__9 ?x1105)))
 (let ((?x1419 (* b__6 10)))
 (let ((?x1420 (+ v__8 ?x1419)))
 (let ((?x1118 (* b__6 9)))
 (let ((?x1117 (+ v__7 ?x1118)))
 (let ((?x19 (* b__6 8)))
 (let ((?x347 (+ v__6 ?x19)))
 (let ((?x455 (* b__6 7)))
 (let ((?x625 (+ v__5 ?x455)))
 (let ((?x157 (* b__6 6)))
 (let ((?x463 (+ v__4 ?x157)))
 (let ((?x960 (* b__6 5)))
 (let ((?x845 (+ v__3 ?x960)))
 (let ((?x1139 (* b__6 4)))
 (let ((?x1141 (+ v__2 ?x1139)))
 (let ((?x402 (* b__6 3)))
 (let ((?x496 (+ v__1 ?x402)))
 (let ((?x158 (* b__6 2)))
 (let ((?x654 (+ v__0 ?x158)))
 (let ((?x420 (store start ?x654 (+ (select start ?x654) 1))))
 (let ((?x263 (store ?x420 ?x496 (+ (select ?x420 ?x496) 1))))
 (let ((?x447 (store ?x263 ?x1141 (+ (select ?x263 ?x1141) 1))))
 (let ((?x16 (store ?x447 ?x845 (+ (select ?x447 ?x845) 1))))
 (let ((?x991 (store ?x16 ?x463 (+ (select ?x16 ?x463) 1))))
 (let ((?x288 (store ?x991 ?x625 (+ (select ?x991 ?x625) 1))))
 (let ((?x785 (store ?x288 ?x347 (+ (select ?x288 ?x347) 1))))
 (let ((?x1412 (store ?x785 ?x1117 (+ (select ?x785 ?x1117) 1))))
 (let ((?x1428 (store ?x1412 ?x1420 (+ (select ?x1412 ?x1420) 1))))
 (let ((?x865 (store ?x1428 ?x1439 (+ (select ?x1428 ?x1439) 1))))
 (let ((?x1429 (+ w__9 ?x1419)))
 (let ((?x1411 (+ w__8 ?x1118)))
 (let ((?x359 (+ w__7 ?x19)))
 (let ((?x630 (+ w__6 ?x455)))
 (let ((?x992 (+ w__5 ?x157)))
 (let ((?x824 (+ w__4 ?x960)))
 (let ((?x474 (+ w__3 ?x1139)))
 (let ((?x538 (+ w__2 ?x402)))
 (let ((?x1403 (+ w__1 ?x158)))
 (let ((?x995 (+ w__0 ?x1105)))
 (let ((?x197 (store start ?x995 (+ (select start ?x995) 1))))
 (let ((?x356 (store ?x197 ?x1403 (+ (select ?x197 ?x1403) 1))))
 (let ((?x1138 (store ?x356 ?x538 (+ (select ?x356 ?x538) 1))))
 (let ((?x959 (store ?x1138 ?x474 (+ (select ?x1138 ?x474) 1))))
 (let ((?x388 (store ?x959 ?x824 (+ (select ?x959 ?x824) 1))))
 (let ((?x603 (store ?x388 ?x992 (+ (select ?x388 ?x992) 1))))
 (let ((?x325 (store ?x603 ?x630 (+ (select ?x603 ?x630) 1))))
 (let ((?x1124 (store ?x325 ?x359 (+ (select ?x325 ?x359) 1))))
 (let ((?x1418 (store ?x1124 ?x1411 (+ (select ?x1124 ?x1411) 1))))
 (let ((?x1438 (store ?x1418 ?x1429 (+ (select ?x1418 ?x1429) 1))))
 (= ?x1438 ?x865))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x397 (* b__7 1)))
 (let ((?x318 (+ v__9 ?x397)))
 (let ((?x201 (* b__7 10)))
 (let ((?x61 (+ v__8 ?x201)))
 (let ((?x838 (* b__7 9)))
 (let ((?x840 (+ v__7 ?x838)))
 (let ((?x1099 (* b__7 8)))
 (let ((?x750 (+ v__6 ?x1099)))
 (let ((?x276 (* b__7 7)))
 (let ((?x1043 (+ v__5 ?x276)))
 (let ((?x787 (* b__7 6)))
 (let ((?x786 (+ v__4 ?x787)))
 (let ((?x868 (* b__7 5)))
 (let ((?x877 (+ v__3 ?x868)))
 (let ((?x1733 (* b__7 4)))
 (let ((?x680 (+ v__2 ?x1733)))
 (let ((?x1359 (* b__7 3)))
 (let ((?x1558 (+ v__1 ?x1359)))
 (let ((?x650 (* b__7 2)))
 (let ((?x652 (+ v__0 ?x650)))
 (let ((?x1068 (store start ?x652 (+ (select start ?x652) 1))))
 (let ((?x430 (store ?x1068 ?x1558 (+ (select ?x1068 ?x1558) 1))))
 (let ((?x378 (store ?x430 ?x680 (+ (select ?x430 ?x680) 1))))
 (let ((?x751 (store ?x378 ?x877 (+ (select ?x378 ?x877) 1))))
 (let ((?x734 (store ?x751 ?x786 (+ (select ?x751 ?x786) 1))))
 (let ((?x419 (store ?x734 ?x1043 (+ (select ?x734 ?x1043) 1))))
 (let ((?x1265 (store ?x419 ?x750 (+ (select ?x419 ?x750) 1))))
 (let ((?x1197 (store ?x1265 ?x840 (+ (select ?x1265 ?x840) 1))))
 (let ((?x580 (store ?x1197 ?x61 (+ (select ?x1197 ?x61) 1))))
 (let ((?x821 (store ?x580 ?x318 (+ (select ?x580 ?x318) 1))))
 (let ((?x725 (+ w__9 ?x201)))
 (let ((?x1198 (+ w__8 ?x838)))
 (let ((?x1318 (+ w__7 ?x1099)))
 (let ((?x731 (+ w__6 ?x276)))
 (let ((?x669 (+ w__5 ?x787)))
 (let ((?x298 (+ w__4 ?x868)))
 (let ((?x1243 (+ w__3 ?x1733)))
 (let ((?x1236 (+ w__2 ?x1359)))
 (let ((?x599 (+ w__1 ?x650)))
 (let ((?x153 (+ w__0 ?x397)))
 (let ((?x316 (store start ?x153 (+ (select start ?x153) 1))))
 (let ((?x644 (store ?x316 ?x599 (+ (select ?x316 ?x599) 1))))
 (let ((?x312 (store ?x644 ?x1236 (+ (select ?x644 ?x1236) 1))))
 (let ((?x1253 (store ?x312 ?x1243 (+ (select ?x312 ?x1243) 1))))
 (let ((?x788 (store ?x1253 ?x298 (+ (select ?x1253 ?x298) 1))))
 (let ((?x517 (store ?x788 ?x669 (+ (select ?x788 ?x669) 1))))
 (let ((?x830 (store ?x517 ?x731 (+ (select ?x517 ?x731) 1))))
 (let ((?x199 (store ?x830 ?x1318 (+ (select ?x830 ?x1318) 1))))
 (let ((?x98 (store ?x199 ?x1198 (+ (select ?x199 ?x1198) 1))))
 (let ((?x39 (store ?x98 ?x725 (+ (select ?x98 ?x725) 1))))
 (= ?x39 ?x821))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1202 (* b__8 1)))
 (let ((?x1393 (+ v__9 ?x1202)))
 (let ((?x747 (* b__8 10)))
 (let ((?x487 (+ v__8 ?x747)))
 (let ((?x1322 (* b__8 9)))
 (let ((?x1328 (+ v__7 ?x1322)))
 (let ((?x1484 (* b__8 8)))
 (let ((?x1489 (+ v__6 ?x1484)))
 (let ((?x1463 (* b__8 7)))
 (let ((?x1464 (+ v__5 ?x1463)))
 (let ((?x854 (* b__8 6)))
 (let ((?x855 (+ v__4 ?x854)))
 (let ((?x90 (* b__8 5)))
 (let ((?x694 (+ v__3 ?x90)))
 (let ((?x1564 (* b__8 4)))
 (let ((?x1565 (+ v__2 ?x1564)))
 (let ((?x1251 (* b__8 3)))
 (let ((?x1252 (+ v__1 ?x1251)))
 (let ((?x888 (* b__8 2)))
 (let ((?x894 (+ v__0 ?x888)))
 (let ((?x1218 (store start ?x894 (+ (select start ?x894) 1))))
 (let ((?x803 (store ?x1218 ?x1252 (+ (select ?x1218 ?x1252) 1))))
 (let ((?x1454 (store ?x803 ?x1565 (+ (select ?x803 ?x1565) 1))))
 (let ((?x589 (store ?x1454 ?x694 (+ (select ?x1454 ?x694) 1))))
 (let ((?x305 (store ?x589 ?x855 (+ (select ?x589 ?x855) 1))))
 (let ((?x1473 (store ?x305 ?x1464 (+ (select ?x305 ?x1464) 1))))
 (let ((?x900 (store ?x1473 ?x1489 (+ (select ?x1473 ?x1489) 1))))
 (let ((?x1278 (store ?x900 ?x1328 (+ (select ?x900 ?x1328) 1))))
 (let ((?x939 (store ?x1278 ?x487 (+ (select ?x1278 ?x487) 1))))
 (let ((?x1385 (store ?x939 ?x1393 (+ (select ?x939 ?x1393) 1))))
 (let ((?x648 (+ w__9 ?x747)))
 (let ((?x1279 (+ w__8 ?x1322)))
 (let ((?x89 (+ w__7 ?x1484)))
 (let ((?x1474 (+ w__6 ?x1463)))
 (let ((?x23 (+ w__5 ?x854)))
 (let ((?x371 (+ w__4 ?x90)))
 (let ((?x1455 (+ w__3 ?x1564)))
 (let ((?x1559 (+ w__2 ?x1251)))
 (let ((?x108 (+ w__1 ?x888)))
 (let ((?x1203 (+ w__0 ?x1202)))
 (let ((?x1209 (store start ?x1203 (+ (select start ?x1203) 1))))
 (let ((?x1223 (store ?x1209 ?x108 (+ (select ?x1209 ?x108) 1))))
 (let ((?x1563 (store ?x1223 ?x1559 (+ (select ?x1223 ?x1559) 1))))
 (let ((?x88 (store ?x1563 ?x1455 (+ (select ?x1563 ?x1455) 1))))
 (let ((?x852 (store ?x88 ?x371 (+ (select ?x88 ?x371) 1))))
 (let ((?x1457 (store ?x852 ?x23 (+ (select ?x852 ?x23) 1))))
 (let ((?x1483 (store ?x1457 ?x1474 (+ (select ?x1457 ?x1474) 1))))
 (let ((?x1312 (store ?x1483 ?x89 (+ (select ?x1483 ?x89) 1))))
 (let ((?x768 (store ?x1312 ?x1279 (+ (select ?x1312 ?x1279) 1))))
 (let ((?x741 (store ?x768 ?x648 (+ (select ?x768 ?x648) 1))))
 (= ?x741 ?x1385))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x77 (* b__9 1)))
 (let ((?x1832 (+ v__9 ?x77)))
 (let ((?x1823 (* b__9 10)))
 (let ((?x1824 (+ v__8 ?x1823)))
 (let ((?x1814 (* b__9 9)))
 (let ((?x1815 (+ v__7 ?x1814)))
 (let ((?x1805 (* b__9 8)))
 (let ((?x1806 (+ v__6 ?x1805)))
 (let ((?x1796 (* b__9 7)))
 (let ((?x1797 (+ v__5 ?x1796)))
 (let ((?x1787 (* b__9 6)))
 (let ((?x1788 (+ v__4 ?x1787)))
 (let ((?x1778 (* b__9 5)))
 (let ((?x1779 (+ v__3 ?x1778)))
 (let ((?x1769 (* b__9 4)))
 (let ((?x1770 (+ v__2 ?x1769)))
 (let ((?x1760 (* b__9 3)))
 (let ((?x1761 (+ v__1 ?x1760)))
 (let ((?x1751 (* b__9 2)))
 (let ((?x1752 (+ v__0 ?x1751)))
 (let ((?x1755 (store start ?x1752 (+ (select start ?x1752) 1))))
 (let ((?x1764 (store ?x1755 ?x1761 (+ (select ?x1755 ?x1761) 1))))
 (let ((?x1773 (store ?x1764 ?x1770 (+ (select ?x1764 ?x1770) 1))))
 (let ((?x1782 (store ?x1773 ?x1779 (+ (select ?x1773 ?x1779) 1))))
 (let ((?x1791 (store ?x1782 ?x1788 (+ (select ?x1782 ?x1788) 1))))
 (let ((?x1800 (store ?x1791 ?x1797 (+ (select ?x1791 ?x1797) 1))))
 (let ((?x1809 (store ?x1800 ?x1806 (+ (select ?x1800 ?x1806) 1))))
 (let ((?x1818 (store ?x1809 ?x1815 (+ (select ?x1809 ?x1815) 1))))
 (let ((?x1827 (store ?x1818 ?x1824 (+ (select ?x1818 ?x1824) 1))))
 (let ((?x1835 (store ?x1827 ?x1832 (+ (select ?x1827 ?x1832) 1))))
 (let ((?x1828 (+ w__9 ?x1823)))
 (let ((?x1819 (+ w__8 ?x1814)))
 (let ((?x1810 (+ w__7 ?x1805)))
 (let ((?x1801 (+ w__6 ?x1796)))
 (let ((?x1792 (+ w__5 ?x1787)))
 (let ((?x1783 (+ w__4 ?x1778)))
 (let ((?x1774 (+ w__3 ?x1769)))
 (let ((?x1765 (+ w__2 ?x1760)))
 (let ((?x1756 (+ w__1 ?x1751)))
 (let ((?x267 (+ w__0 ?x77)))
 (let ((?x1750 (store start ?x267 (+ (select start ?x267) 1))))
 (let ((?x1759 (store ?x1750 ?x1756 (+ (select ?x1750 ?x1756) 1))))
 (let ((?x1768 (store ?x1759 ?x1765 (+ (select ?x1759 ?x1765) 1))))
 (let ((?x1777 (store ?x1768 ?x1774 (+ (select ?x1768 ?x1774) 1))))
 (let ((?x1786 (store ?x1777 ?x1783 (+ (select ?x1777 ?x1783) 1))))
 (let ((?x1795 (store ?x1786 ?x1792 (+ (select ?x1786 ?x1792) 1))))
 (let ((?x1804 (store ?x1795 ?x1801 (+ (select ?x1795 ?x1801) 1))))
 (let ((?x1813 (store ?x1804 ?x1810 (+ (select ?x1804 ?x1810) 1))))
 (let ((?x1822 (store ?x1813 ?x1819 (+ (select ?x1813 ?x1819) 1))))
 (let ((?x1831 (store ?x1822 ?x1828 (+ (select ?x1822 ?x1828) 1))))
 (= ?x1831 ?x1835))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1927 (* b__10 1)))
 (let ((?x2013 (+ v__9 ?x1927)))
 (let ((?x2004 (* b__10 10)))
 (let ((?x2005 (+ v__8 ?x2004)))
 (let ((?x1995 (* b__10 9)))
 (let ((?x1996 (+ v__7 ?x1995)))
 (let ((?x1986 (* b__10 8)))
 (let ((?x1987 (+ v__6 ?x1986)))
 (let ((?x1977 (* b__10 7)))
 (let ((?x1978 (+ v__5 ?x1977)))
 (let ((?x1968 (* b__10 6)))
 (let ((?x1969 (+ v__4 ?x1968)))
 (let ((?x1959 (* b__10 5)))
 (let ((?x1960 (+ v__3 ?x1959)))
 (let ((?x1950 (* b__10 4)))
 (let ((?x1951 (+ v__2 ?x1950)))
 (let ((?x1941 (* b__10 3)))
 (let ((?x1942 (+ v__1 ?x1941)))
 (let ((?x1932 (* b__10 2)))
 (let ((?x1933 (+ v__0 ?x1932)))
 (let ((?x1936 (store start ?x1933 (+ (select start ?x1933) 1))))
 (let ((?x1945 (store ?x1936 ?x1942 (+ (select ?x1936 ?x1942) 1))))
 (let ((?x1954 (store ?x1945 ?x1951 (+ (select ?x1945 ?x1951) 1))))
 (let ((?x1963 (store ?x1954 ?x1960 (+ (select ?x1954 ?x1960) 1))))
 (let ((?x1972 (store ?x1963 ?x1969 (+ (select ?x1963 ?x1969) 1))))
 (let ((?x1981 (store ?x1972 ?x1978 (+ (select ?x1972 ?x1978) 1))))
 (let ((?x1990 (store ?x1981 ?x1987 (+ (select ?x1981 ?x1987) 1))))
 (let ((?x1999 (store ?x1990 ?x1996 (+ (select ?x1990 ?x1996) 1))))
 (let ((?x2008 (store ?x1999 ?x2005 (+ (select ?x1999 ?x2005) 1))))
 (let ((?x2016 (store ?x2008 ?x2013 (+ (select ?x2008 ?x2013) 1))))
 (let ((?x2009 (+ w__9 ?x2004)))
 (let ((?x2000 (+ w__8 ?x1995)))
 (let ((?x1991 (+ w__7 ?x1986)))
 (let ((?x1982 (+ w__6 ?x1977)))
 (let ((?x1973 (+ w__5 ?x1968)))
 (let ((?x1964 (+ w__4 ?x1959)))
 (let ((?x1955 (+ w__3 ?x1950)))
 (let ((?x1946 (+ w__2 ?x1941)))
 (let ((?x1937 (+ w__1 ?x1932)))
 (let ((?x1928 (+ w__0 ?x1927)))
 (let ((?x1931 (store start ?x1928 (+ (select start ?x1928) 1))))
 (let ((?x1940 (store ?x1931 ?x1937 (+ (select ?x1931 ?x1937) 1))))
 (let ((?x1949 (store ?x1940 ?x1946 (+ (select ?x1940 ?x1946) 1))))
 (let ((?x1958 (store ?x1949 ?x1955 (+ (select ?x1949 ?x1955) 1))))
 (let ((?x1967 (store ?x1958 ?x1964 (+ (select ?x1958 ?x1964) 1))))
 (let ((?x1976 (store ?x1967 ?x1973 (+ (select ?x1967 ?x1973) 1))))
 (let ((?x1985 (store ?x1976 ?x1982 (+ (select ?x1976 ?x1982) 1))))
 (let ((?x1994 (store ?x1985 ?x1991 (+ (select ?x1985 ?x1991) 1))))
 (let ((?x2003 (store ?x1994 ?x2000 (+ (select ?x1994 ?x2000) 1))))
 (let ((?x2012 (store ?x2003 ?x2009 (+ (select ?x2003 ?x2009) 1))))
 (= ?x2012 ?x2016))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let (($x2118 (and (= w__1 v__0) (= w__2 v__1) (= w__3 v__2) (= w__4 v__3) (= w__5 v__4) (= w__6 v__5) (= w__7 v__6) (= w__8 v__7) (= w__9 v__8) (= w__0 v__9))))
 (not $x2118)))
(check-sat)
(exit)
