(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
Generated by: Maximilian A. Zinkus
Generated on: 2022-10-12
Generator: MCMPC
Application: Model counting optimization for MPC functionalities
Target solver: CryptoMinisat, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun chosen_0 () Bool)
(declare-fun chosen () (_ BitVec 4))
(declare-fun chosen_1 () Bool)
(declare-fun chosen_2 () Bool)
(declare-fun chosen_3 () Bool)
(declare-fun target_0 () Bool)
(declare-fun target () (_ BitVec 4))
(declare-fun target_1 () Bool)
(declare-fun target_2 () Bool)
(declare-fun target_3 () Bool)
(declare-fun target_outcome0_t0 () (_ BitVec 4))
(declare-fun chosen_outcome0 () (_ BitVec 4))
(declare-fun target_outcome1_t0 () (_ BitVec 4))
(declare-fun chosen_outcome1 () (_ BitVec 4))
(declare-fun target_outcome2_t0 () (_ BitVec 4))
(declare-fun chosen_outcome2 () (_ BitVec 4))
(declare-fun target_outcome3_t0 () (_ BitVec 4))
(declare-fun chosen_outcome3 () (_ BitVec 4))
(declare-fun target_outcome4_t0 () (_ BitVec 4))
(declare-fun chosen_outcome4 () (_ BitVec 4))
(declare-fun target_outcome5_t0 () (_ BitVec 4))
(declare-fun chosen_outcome5 () (_ BitVec 4))
(declare-fun target_outcome6_t0 () (_ BitVec 4))
(declare-fun chosen_outcome6 () (_ BitVec 4))
(declare-fun target_outcome7_t0 () (_ BitVec 4))
(declare-fun chosen_outcome7 () (_ BitVec 4))
(declare-fun target_outcome8_t0 () (_ BitVec 4))
(declare-fun chosen_outcome8 () (_ BitVec 4))
(declare-fun target_outcome9_t0 () (_ BitVec 4))
(declare-fun chosen_outcome9 () (_ BitVec 4))
(declare-fun target_outcome10_t0 () (_ BitVec 4))
(declare-fun chosen_outcome10 () (_ BitVec 4))
(declare-fun target_outcome11_t0 () (_ BitVec 4))
(declare-fun chosen_outcome11 () (_ BitVec 4))
(declare-fun target_outcome12_t0 () (_ BitVec 4))
(declare-fun chosen_outcome12 () (_ BitVec 4))
(declare-fun target_outcome13_t0 () (_ BitVec 4))
(declare-fun chosen_outcome13 () (_ BitVec 4))
(declare-fun target_outcome14_t0 () (_ BitVec 4))
(declare-fun chosen_outcome14 () (_ BitVec 4))
(declare-fun target_outcome15_t0 () (_ BitVec 4))
(declare-fun chosen_outcome15 () (_ BitVec 4))
(declare-fun target_bit_3_0_bool () Bool)
(declare-fun target_bit_3_1_bool () Bool)
(declare-fun target_bit_3_2_bool () Bool)
(declare-fun target_bit_3_3_bool () Bool)
(declare-fun target_bit_11_0_bool () Bool)
(declare-fun target_bit_11_1_bool () Bool)
(declare-fun target_bit_11_2_bool () Bool)
(declare-fun target_bit_11_3_bool () Bool)
(declare-fun target_bit_4_0_bool () Bool)
(declare-fun target_bit_4_1_bool () Bool)
(declare-fun target_bit_4_2_bool () Bool)
(declare-fun target_bit_4_3_bool () Bool)
(declare-fun target_bit_10_0_bool () Bool)
(declare-fun target_bit_10_1_bool () Bool)
(declare-fun target_bit_10_2_bool () Bool)
(declare-fun target_bit_10_3_bool () Bool)
(declare-fun target_bit_5_0_bool () Bool)
(declare-fun target_bit_5_1_bool () Bool)
(declare-fun target_bit_5_2_bool () Bool)
(declare-fun target_bit_5_3_bool () Bool)
(declare-fun target_bit_9_0_bool () Bool)
(declare-fun target_bit_9_1_bool () Bool)
(declare-fun target_bit_9_2_bool () Bool)
(declare-fun target_bit_9_3_bool () Bool)
(declare-fun target_bit_6_0_bool () Bool)
(declare-fun target_bit_6_1_bool () Bool)
(declare-fun target_bit_6_2_bool () Bool)
(declare-fun target_bit_6_3_bool () Bool)
(declare-fun target_bit_8_0_bool () Bool)
(declare-fun target_bit_8_1_bool () Bool)
(declare-fun target_bit_8_2_bool () Bool)
(declare-fun target_bit_8_3_bool () Bool)
(declare-fun target_bit_7_0_bool () Bool)
(declare-fun target_bit_7_1_bool () Bool)
(declare-fun target_bit_7_2_bool () Bool)
(declare-fun target_bit_7_3_bool () Bool)
(assert
 (= (= (_ bv1 1) ((_ extract 0 0) chosen)) (= chosen_0 true)))
(assert
 (= (= (_ bv1 1) ((_ extract 1 1) chosen)) (= chosen_1 true)))
(assert
 (= (= (_ bv1 1) ((_ extract 2 2) chosen)) (= chosen_2 true)))
(assert
 (= (= (_ bv1 1) ((_ extract 3 3) chosen)) (= chosen_3 true)))
(assert
 (= (= (_ bv1 1) ((_ extract 0 0) target)) (= target_0 true)))
(assert
 (= (= (_ bv1 1) ((_ extract 1 1) target)) (= target_1 true)))
(assert
 (= (= (_ bv1 1) ((_ extract 2 2) target)) (= target_2 true)))
(assert
 (= (= (_ bv1 1) ((_ extract 3 3) target)) (= target_3 true)))
(assert
 (let ((?x118 (bvadd (bvand chosen_outcome0 target_outcome0_t0) (bvlshr (bvxor chosen_outcome0 target_outcome0_t0) (_ bv1 4)))))
 (= (_ bv0 4) ?x118)))
(assert
 (let ((?x121 (bvadd (bvand chosen_outcome1 target_outcome1_t0) (bvlshr (bvxor chosen_outcome1 target_outcome1_t0) (_ bv1 4)))))
 (= (_ bv1 4) ?x121)))
(assert
 (let ((?x107 (bvadd (bvand chosen_outcome2 target_outcome2_t0) (bvlshr (bvxor chosen_outcome2 target_outcome2_t0) (_ bv1 4)))))
 (= (_ bv2 4) ?x107)))
(assert
 (let ((?x83 (bvadd (bvand chosen_outcome3 target_outcome3_t0) (bvlshr (bvxor chosen_outcome3 target_outcome3_t0) (_ bv1 4)))))
 (= (_ bv3 4) ?x83)))
(assert
 (let ((?x123 (bvadd (bvand chosen_outcome4 target_outcome4_t0) (bvlshr (bvxor chosen_outcome4 target_outcome4_t0) (_ bv1 4)))))
 (= (_ bv4 4) ?x123)))
(assert
 (let ((?x70 (bvadd (bvand chosen_outcome5 target_outcome5_t0) (bvlshr (bvxor chosen_outcome5 target_outcome5_t0) (_ bv1 4)))))
 (= (_ bv5 4) ?x70)))
(assert
 (let ((?x100 (bvadd (bvand chosen_outcome6 target_outcome6_t0) (bvlshr (bvxor chosen_outcome6 target_outcome6_t0) (_ bv1 4)))))
 (= (_ bv6 4) ?x100)))
(assert
 (let ((?x73 (bvadd (bvand chosen_outcome7 target_outcome7_t0) (bvlshr (bvxor chosen_outcome7 target_outcome7_t0) (_ bv1 4)))))
 (= (_ bv7 4) ?x73)))
(assert
 (let ((?x140 (bvadd (bvand chosen_outcome8 target_outcome8_t0) (bvlshr (bvxor chosen_outcome8 target_outcome8_t0) (_ bv1 4)))))
 (= (_ bv8 4) ?x140)))
(assert
 (let ((?x148 (bvadd (bvand chosen_outcome9 target_outcome9_t0) (bvlshr (bvxor chosen_outcome9 target_outcome9_t0) (_ bv1 4)))))
 (= (_ bv9 4) ?x148)))
(assert
 (let ((?x156 (bvadd (bvand chosen_outcome10 target_outcome10_t0) (bvlshr (bvxor chosen_outcome10 target_outcome10_t0) (_ bv1 4)))))
 (= (_ bv10 4) ?x156)))
(assert
 (let ((?x164 (bvadd (bvand chosen_outcome11 target_outcome11_t0) (bvlshr (bvxor chosen_outcome11 target_outcome11_t0) (_ bv1 4)))))
 (= (_ bv11 4) ?x164)))
(assert
 (let ((?x172 (bvadd (bvand chosen_outcome12 target_outcome12_t0) (bvlshr (bvxor chosen_outcome12 target_outcome12_t0) (_ bv1 4)))))
 (= (_ bv12 4) ?x172)))
(assert
 (let ((?x180 (bvadd (bvand chosen_outcome13 target_outcome13_t0) (bvlshr (bvxor chosen_outcome13 target_outcome13_t0) (_ bv1 4)))))
 (= (_ bv13 4) ?x180)))
(assert
 (let ((?x187 (bvadd (bvand chosen_outcome14 target_outcome14_t0) (bvlshr (bvxor chosen_outcome14 target_outcome14_t0) (_ bv1 4)))))
 (= (_ bv14 4) ?x187)))
(assert
 (let ((?x194 (bvadd (bvand chosen_outcome15 target_outcome15_t0) (bvlshr (bvxor chosen_outcome15 target_outcome15_t0) (_ bv1 4)))))
 (= (_ bv15 4) ?x194)))
(assert
 (= chosen chosen_outcome3))
(assert
 (= chosen chosen_outcome11))
(assert
 (= chosen chosen_outcome4))
(assert
 (= chosen chosen_outcome10))
(assert
 (= chosen chosen_outcome5))
(assert
 (= chosen chosen_outcome9))
(assert
 (= chosen chosen_outcome6))
(assert
 (= chosen chosen_outcome8))
(assert
 (= chosen chosen_outcome7))
(assert
 (= (= (_ bv1 1) ((_ extract 0 0) target_outcome3_t0)) (= target_bit_3_0_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 1 1) target_outcome3_t0)) (= target_bit_3_1_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 2 2) target_outcome3_t0)) (= target_bit_3_2_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 3 3) target_outcome3_t0)) (= target_bit_3_3_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 0 0) target_outcome11_t0)) (= target_bit_11_0_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 1 1) target_outcome11_t0)) (= target_bit_11_1_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 2 2) target_outcome11_t0)) (= target_bit_11_2_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 3 3) target_outcome11_t0)) (= target_bit_11_3_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 0 0) target_outcome4_t0)) (= target_bit_4_0_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 1 1) target_outcome4_t0)) (= target_bit_4_1_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 2 2) target_outcome4_t0)) (= target_bit_4_2_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 3 3) target_outcome4_t0)) (= target_bit_4_3_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 0 0) target_outcome10_t0)) (= target_bit_10_0_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 1 1) target_outcome10_t0)) (= target_bit_10_1_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 2 2) target_outcome10_t0)) (= target_bit_10_2_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 3 3) target_outcome10_t0)) (= target_bit_10_3_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 0 0) target_outcome5_t0)) (= target_bit_5_0_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 1 1) target_outcome5_t0)) (= target_bit_5_1_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 2 2) target_outcome5_t0)) (= target_bit_5_2_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 3 3) target_outcome5_t0)) (= target_bit_5_3_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 0 0) target_outcome9_t0)) (= target_bit_9_0_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 1 1) target_outcome9_t0)) (= target_bit_9_1_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 2 2) target_outcome9_t0)) (= target_bit_9_2_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 3 3) target_outcome9_t0)) (= target_bit_9_3_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 0 0) target_outcome6_t0)) (= target_bit_6_0_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 1 1) target_outcome6_t0)) (= target_bit_6_1_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 2 2) target_outcome6_t0)) (= target_bit_6_2_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 3 3) target_outcome6_t0)) (= target_bit_6_3_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 0 0) target_outcome8_t0)) (= target_bit_8_0_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 1 1) target_outcome8_t0)) (= target_bit_8_1_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 2 2) target_outcome8_t0)) (= target_bit_8_2_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 3 3) target_outcome8_t0)) (= target_bit_8_3_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 0 0) target_outcome7_t0)) (= target_bit_7_0_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 1 1) target_outcome7_t0)) (= target_bit_7_1_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 2 2) target_outcome7_t0)) (= target_bit_7_2_bool true)))
(assert
 (= (= (_ bv1 1) ((_ extract 3 3) target_outcome7_t0)) (= target_bit_7_3_bool true)))
(check-sat)
(exit)