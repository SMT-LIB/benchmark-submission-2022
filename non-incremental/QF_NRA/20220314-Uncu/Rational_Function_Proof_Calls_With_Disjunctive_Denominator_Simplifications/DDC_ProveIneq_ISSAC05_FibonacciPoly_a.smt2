(set-info :smt-lib-version 2.6)
(set-logic QF_NRA)
(set-info :source |
Generated by: Ali K. Uncu, Matthew England, and James H. Davenport
Generated on: 2022-01-06

Generator: SUMCracker-ProveInequality function by Manuel Kauers ("https://www3.risc.jku.at/research/combinat/software/ergosum/RISC/SumCracker.html")
Translated to SMT-Lib by Maple SMTLIB package.

Application: CAD calls of SUMCracker-ProveInequality to prove Fibonacci Polynomial Inequality (typo fixed in expression: (x^2-1)-> (x^2+1)) in 
S. Gerhold and M. Kauers, A Procedure for Proving Special Function Inequalities Involving a Discrete Parameter.
ISSAC '05: Proceedings of the 2005 international symposium on Symbolic and algebraic computationJuly 2005 Pages 156-162.
(https://dl.acm.org/doi/10.1145/1073884.1073907)

All denominators in the original CAD call got cleared by introducing disjunctions with sign conditions:
a/b == c/d --> a d==b c && b<>0 && d<>0
a/b >= c  --> a >=b c && b >0  or ( a <= b c && b < 0)
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :status sat)
(set-info :category "industrial")

(declare-fun V1 () Real)
(declare-fun V2 () Real)
(declare-fun V3 () Real)
(declare-fun x () Real)
(assert (and (or (and (< 0 (* (+ (* x x) 2) (+ (* x x) 2) (+ (* x x) 2))) (<= (* (* (+ (* x x) 2) (+ (* x x) 2) (+ (* x x) 2)) (* V1 V1)) (* (* (+ (* x x) 1) (+ (* x x) 1)) V3))) (and (< (* (+ (* x x) 2) (+ (* x x) 2) (+ (* x x) 2)) 0) (<= (* (* (+ (* x x) 1) (+ (* x x) 1)) V3) (* (* (+ (* x x) 2) (+ (* x x) 2) (+ (* x x) 2)) (* V1 V1))))) (or (and (< 0 (* (+ (* x x) 2) (+ (* x x) 2))) (< (* (* (+ (* x x) 1) (+ (* x x) 1)) V3) (* (* (+ (* x x) 2) (+ (* x x) 2)) (* V2 V2)))) (and (< (* (+ (* x x) 2) (+ (* x x) 2)) 0) (< (* (* (+ (* x x) 2) (+ (* x x) 2)) (* V2 V2)) (* (* (+ (* x x) 1) (+ (* x x) 1)) V3))))))
(check-sat)
(exit)



















